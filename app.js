!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=82)}([function(t,e,n){t.exports=function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function o(t,e,o){return e&&n(t.prototype,e),o&&n(t,o),t}function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}function a(t){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function l(t,e,n){return(l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}()?Reflect.construct:function(t,e,n){var o=[null];o.push.apply(o,e);var r=Function.bind.apply(t,o),i=new r;return n&&s(i,n.prototype),i}).apply(null,arguments)}function c(t,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t,e,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=a(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}var p=function(t){return Array.prototype.slice.call(t)},u=function(t){var e=[];return"undefined"!=typeof Map&&t instanceof Map?t.forEach(function(t,n){e.push([n,t])}):Object.keys(t).forEach(function(n){e.push([n,t[n]])}),e},m=function(t){console.warn("".concat("SweetAlert2:"," ").concat(t))},f=function(t){console.error("".concat("SweetAlert2:"," ").concat(t))},g=[],h=function(t){-1===g.indexOf(t)&&(g.push(t),m(t))},b=function(t){return"function"==typeof t?t():t},v=function(t){return t&&Promise.resolve(t)===t},w=Object.freeze({cancel:"cancel",backdrop:"overlay",close:"close",esc:"esc",timer:"timer"}),x=function(t){var e={};for(var n in t)e[t[n]]="swal2-"+t[n];return e},y=x(["container","shown","height-auto","iosfix","popup","modal","no-backdrop","toast","toast-shown","toast-column","fade","show","hide","noanimation","close","title","header","content","actions","confirm","cancel","footer","icon","icon-text","image","input","file","range","select","radio","checkbox","label","textarea","inputerror","validation-message","progresssteps","activeprogressstep","progresscircle","progressline","loading","styled","top","top-start","top-end","top-left","top-right","center","center-start","center-end","center-left","center-right","bottom","bottom-start","bottom-end","bottom-left","bottom-right","grow-row","grow-column","grow-fullscreen","rtl"]),k=x(["success","warning","info","question","error"]),E={previousBodyPadding:null},_=function(t,e){return t.classList.contains(e)},T=function(t){if(t.focus(),"file"!==t.type){var e=t.value;t.value="",t.value=e}},C=function(t,e,n){t&&e&&("string"==typeof e&&(e=e.split(/\s+/).filter(Boolean)),e.forEach(function(e){t.forEach?t.forEach(function(t){n?t.classList.add(e):t.classList.remove(e)}):n?t.classList.add(e):t.classList.remove(e)}))},S=function(t,e){C(t,e,!0)},A=function(t,e){C(t,e,!1)},D=function(t,e){for(var n=0;n<t.childNodes.length;n++)if(_(t.childNodes[n],e))return t.childNodes[n]},O=function(t){t.style.opacity="",t.style.display=t.id===y.content?"block":"flex"},I=function(t){t.style.opacity="",t.style.display="none"},N=function(t){return t&&(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},L=function(){return document.body.querySelector("."+y.container)},j=function(t){var e=L();return e?e.querySelector("."+t):null},P=function(){return j(y.popup)},R=function(){var t=P();return p(t.querySelectorAll("."+y.icon))},M=function(){return j(y.title)},H=function(){return j(y.content)},B=function(){return j(y.image)},q=function(){return j(y.progresssteps)},z=function(){return j(y["validation-message"])},W=function(){return j(y.confirm)},F=function(){return j(y.cancel)},U=function(){return j(y.actions)},V=function(){return j(y.footer)},G=function(){return j(y.close)},Y=function(){var t=p(P().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(function(t,e){return t=parseInt(t.getAttribute("tabindex")),e=parseInt(e.getAttribute("tabindex")),t>e?1:t<e?-1:0}),e=p(P().querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable], audio[controls], video[controls]')).filter(function(t){return"-1"!==t.getAttribute("tabindex")});return function(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}(t.concat(e)).filter(function(t){return N(t)})},K=function(){return!X()&&!document.body.classList.contains(y["no-backdrop"])},X=function(){return document.body.classList.contains(y["toast-shown"])},$=function(){return"undefined"==typeof window||"undefined"==typeof document},Q='\n <div aria-labelledby="'.concat(y.title,'" aria-describedby="').concat(y.content,'" class="').concat(y.popup,'" tabindex="-1">\n   <div class="').concat(y.header,'">\n     <ul class="').concat(y.progresssteps,'"></ul>\n     <div class="').concat(y.icon," ").concat(k.error,'">\n       <span class="swal2-x-mark"><span class="swal2-x-mark-line-left"></span><span class="swal2-x-mark-line-right"></span></span>\n     </div>\n     <div class="').concat(y.icon," ").concat(k.question,'">\n       <span class="').concat(y["icon-text"],'">?</span>\n      </div>\n     <div class="').concat(y.icon," ").concat(k.warning,'">\n       <span class="').concat(y["icon-text"],'">!</span>\n      </div>\n     <div class="').concat(y.icon," ").concat(k.info,'">\n       <span class="').concat(y["icon-text"],'">i</span>\n      </div>\n     <div class="').concat(y.icon," ").concat(k.success,'">\n       <div class="swal2-success-circular-line-left"></div>\n       <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n       <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n       <div class="swal2-success-circular-line-right"></div>\n     </div>\n     <img class="').concat(y.image,'" />\n     <h2 class="').concat(y.title,'" id="').concat(y.title,'"></h2>\n     <button type="button" class="').concat(y.close,'">×</button>\n   </div>\n   <div class="').concat(y.content,'">\n     <div id="').concat(y.content,'"></div>\n     <input class="').concat(y.input,'" />\n     <input type="file" class="').concat(y.file,'" />\n     <div class="').concat(y.range,'">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="').concat(y.select,'"></select>\n     <div class="').concat(y.radio,'"></div>\n     <label for="').concat(y.checkbox,'" class="').concat(y.checkbox,'">\n       <input type="checkbox" />\n       <span class="').concat(y.label,'"></span>\n     </label>\n     <textarea class="').concat(y.textarea,'"></textarea>\n     <div class="').concat(y["validation-message"],'" id="').concat(y["validation-message"],'"></div>\n   </div>\n   <div class="').concat(y.actions,'">\n     <button type="button" class="').concat(y.confirm,'">OK</button>\n     <button type="button" class="').concat(y.cancel,'">Cancel</button>\n   </div>\n   <div class="').concat(y.footer,'">\n   </div>\n </div>\n').replace(/(^|\n)\s*/g,""),Z=function(t){var e=L();if(e&&(e.parentNode.removeChild(e),A([document.documentElement,document.body],[y["no-backdrop"],y["toast-shown"],y["has-column"]])),!$()){var n=document.createElement("div");n.className=y.container,n.innerHTML=Q;var o="string"==typeof t.target?document.querySelector(t.target):t.target;o.appendChild(n);var r,i=P(),a=H(),s=D(a,y.input),l=D(a,y.file),c=a.querySelector(".".concat(y.range," input")),d=a.querySelector(".".concat(y.range," output")),p=D(a,y.select),u=a.querySelector(".".concat(y.checkbox," input")),m=D(a,y.textarea);i.setAttribute("role",t.toast?"alert":"dialog"),i.setAttribute("aria-live",t.toast?"polite":"assertive"),t.toast||i.setAttribute("aria-modal","true"),"rtl"===window.getComputedStyle(o).direction&&S(L(),y.rtl);var g=function(t){Bt.isVisible()&&r!==t.target.value&&Bt.resetValidationMessage(),r=t.target.value};return s.oninput=g,l.onchange=g,p.onchange=g,u.onchange=g,m.oninput=g,c.oninput=function(t){g(t),d.value=c.value},c.onchange=function(t){g(t),c.nextSibling.value=c.value},i}f("SweetAlert2 requires document to initialize")},J=function(e,n){if(!e)return I(n);if(e instanceof HTMLElement)n.appendChild(e);else if("object"===t(e))if(n.innerHTML="",0 in e)for(var o=0;o in e;o++)n.appendChild(e[o].cloneNode(!0));else n.appendChild(e.cloneNode(!0));else e&&(n.innerHTML=e);O(n)},tt=function(){if($())return!1;var t=document.createElement("div"),e={WebkitAnimation:"webkitAnimationEnd",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(var n in e)if(e.hasOwnProperty(n)&&void 0!==t.style[n])return e[n];return!1}(),et=function(t){var e=U(),n=W(),o=F();if(t.showConfirmButton||t.showCancelButton?O(e):I(e),t.showCancelButton?o.style.display="inline-block":I(o),t.showConfirmButton?n.style.removeProperty("display"):I(n),n.innerHTML=t.confirmButtonText,o.innerHTML=t.cancelButtonText,n.setAttribute("aria-label",t.confirmButtonAriaLabel),o.setAttribute("aria-label",t.cancelButtonAriaLabel),n.className=y.confirm,S(n,t.confirmButtonClass),o.className=y.cancel,S(o,t.cancelButtonClass),t.buttonsStyling){S([n,o],y.styled),t.confirmButtonColor&&(n.style.backgroundColor=t.confirmButtonColor),t.cancelButtonColor&&(o.style.backgroundColor=t.cancelButtonColor);var r=window.getComputedStyle(n).getPropertyValue("background-color");n.style.borderLeftColor=r,n.style.borderRightColor=r}else A([n,o],y.styled),n.style.backgroundColor=n.style.borderLeftColor=n.style.borderRightColor="",o.style.backgroundColor=o.style.borderLeftColor=o.style.borderRightColor=""},nt=function(t){var e=H().querySelector("#"+y.content);t.html?J(t.html,e):t.text?(e.textContent=t.text,O(e)):I(e)},ot=function(t){for(var e=R(),n=0;n<e.length;n++)I(e[n]);if(t.type)if(-1!==Object.keys(k).indexOf(t.type)){var o=Bt.getPopup().querySelector(".".concat(y.icon,".").concat(k[t.type]));O(o),t.animation&&S(o,"swal2-animate-".concat(t.type,"-icon"))}else f('Unknown type! Expected "success", "error", "warning", "info" or "question", got "'.concat(t.type,'"'))},rt=function(t){var e=B();t.imageUrl?(e.setAttribute("src",t.imageUrl),e.setAttribute("alt",t.imageAlt),O(e),t.imageWidth?e.setAttribute("width",t.imageWidth):e.removeAttribute("width"),t.imageHeight?e.setAttribute("height",t.imageHeight):e.removeAttribute("height"),e.className=y.image,t.imageClass&&S(e,t.imageClass)):I(e)},it=function(t){var e=q(),n=parseInt(null===t.currentProgressStep?Bt.getQueueStep():t.currentProgressStep,10);t.progressSteps&&t.progressSteps.length?(O(e),e.innerHTML="",n>=t.progressSteps.length&&m("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"),t.progressSteps.forEach(function(o,r){var i=document.createElement("li");if(S(i,y.progresscircle),i.innerHTML=o,r===n&&S(i,y.activeprogressstep),e.appendChild(i),r!==t.progressSteps.length-1){var a=document.createElement("li");S(a,y.progressline),t.progressStepsDistance&&(a.style.width=t.progressStepsDistance),e.appendChild(a)}})):I(e)},at=function(t){var e=M();t.titleText?e.innerText=t.titleText:t.title&&("string"==typeof t.title&&(t.title=t.title.split("\n").join("<br />")),J(t.title,e))},st=function(){null===E.previousBodyPadding&&document.body.scrollHeight>window.innerHeight&&(E.previousBodyPadding=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")),document.body.style.paddingRight=E.previousBodyPadding+function(){if("ontouchstart"in window||navigator.msMaxTouchPoints)return 0;var t=document.createElement("div");t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t);var e=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),e}()+"px")},lt=function(){return!!window.MSInputMethodContext&&!!document.documentMode},ct=function(){var t=L(),e=P();t.style.removeProperty("align-items"),e.offsetTop<0&&(t.style.alignItems="flex-start")},dt={},pt=function(t,e){var n=L(),o=P();if(o){null!==t&&"function"==typeof t&&t(o),A(o,y.show),S(o,y.hide);var r=function(){X()?ut(e):(new Promise(function(t){var e=window.scrollX,n=window.scrollY;dt.restoreFocusTimeout=setTimeout(function(){dt.previousActiveElement&&dt.previousActiveElement.focus?(dt.previousActiveElement.focus(),dt.previousActiveElement=null):document.body&&document.body.focus(),t()},100),void 0!==e&&void 0!==n&&window.scrollTo(e,n)}).then(function(){return ut(e)}),dt.keydownTarget.removeEventListener("keydown",dt.keydownHandler,{capture:dt.keydownListenerCapture}),dt.keydownHandlerAdded=!1),n.parentNode&&n.parentNode.removeChild(n),A([document.documentElement,document.body],[y.shown,y["height-auto"],y["no-backdrop"],y["toast-shown"],y["toast-column"]]),K()&&(null!==E.previousBodyPadding&&(document.body.style.paddingRight=E.previousBodyPadding,E.previousBodyPadding=null),function(){if(_(document.body,y.iosfix)){var t=parseInt(document.body.style.top,10);A(document.body,y.iosfix),document.body.style.top="",document.body.scrollTop=-1*t}}(),"undefined"!=typeof window&&lt()&&window.removeEventListener("resize",ct),p(document.body.children).forEach(function(t){t.hasAttribute("data-previous-aria-hidden")?(t.setAttribute("aria-hidden",t.getAttribute("data-previous-aria-hidden")),t.removeAttribute("data-previous-aria-hidden")):t.removeAttribute("aria-hidden")}))};tt&&!_(o,y.noanimation)?o.addEventListener(tt,function t(){o.removeEventListener(tt,t),_(o,y.hide)&&r()}):r()}},ut=function(t){null!==t&&"function"==typeof t&&setTimeout(function(){t()})};function mt(t){var e=function t(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];if(!(this instanceof t))return l(t,n);Object.getPrototypeOf(t).apply(this,n)};return e.prototype=r(Object.create(t.prototype),{constructor:e}),"function"==typeof Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t,e}var ft={title:"",titleText:"",text:"",html:"",footer:"",type:null,toast:!1,customClass:"",target:"body",backdrop:!0,animation:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showCancelButton:!1,preConfirm:null,confirmButtonText:"OK",confirmButtonAriaLabel:"",confirmButtonColor:null,confirmButtonClass:null,cancelButtonText:"Cancel",cancelButtonAriaLabel:"",cancelButtonColor:null,cancelButtonClass:null,buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusCancel:!1,showCloseButton:!1,closeButtonAriaLabel:"Close this dialog",showLoaderOnConfirm:!1,imageUrl:null,imageWidth:null,imageHeight:null,imageAlt:"",imageClass:null,timer:null,width:null,padding:null,background:null,input:null,inputPlaceholder:"",inputValue:"",inputOptions:{},inputAutoTrim:!0,inputClass:null,inputAttributes:{},inputValidator:null,validationMessage:null,grow:!1,position:"center",progressSteps:[],currentProgressStep:null,progressStepsDistance:null,onBeforeOpen:null,onAfterClose:null,onOpen:null,onClose:null,useRejections:!1,expectRejections:!1},gt=["useRejections","expectRejections","extraParams"],ht=["allowOutsideClick","allowEnterKey","backdrop","focusConfirm","focusCancel","heightAuto","keydownListenerCapture"],bt=function(t){return ft.hasOwnProperty(t)||"extraParams"===t},vt=function(t){return-1!==gt.indexOf(t)},wt=function(t){for(var e in t)bt(e)||m('Unknown parameter "'.concat(e,'"')),t.toast&&-1!==ht.indexOf(e)&&m('The parameter "'.concat(e,'" is incompatible with toasts')),vt(e)&&h('The parameter "'.concat(e,'" is deprecated and will be removed in the next major release.'))},xt='"setDefaults" & "resetDefaults" methods are deprecated in favor of "mixin" method and will be removed in the next major release. For new projects, use "mixin". For past projects already using "setDefaults", support will be provided through an additional package.',yt={},kt=[],Et=function(){var t=P();t||Bt(""),t=P();var e=U(),n=W(),o=F();O(e),O(n),S([t,e],y.loading),n.disabled=!0,o.disabled=!0,t.setAttribute("data-loading",!0),t.setAttribute("aria-busy",!0),t.focus()},_t=Object.freeze({isValidParameter:bt,isDeprecatedParameter:vt,argsToParams:function(e){var n={};switch(t(e[0])){case"object":r(n,e[0]);break;default:["title","html","type"].forEach(function(o,r){switch(t(e[r])){case"string":n[o]=e[r];break;case"undefined":break;default:f("Unexpected type of ".concat(o,'! Expected "string", got ').concat(t(e[r])))}})}return n},adaptInputValidator:function(t){return function(e,n){return t.call(this,e,n).then(function(){},function(t){return t})}},close:pt,closePopup:pt,closeModal:pt,closeToast:pt,isVisible:function(){return!!P()},clickConfirm:function(){return W().click()},clickCancel:function(){return F().click()},getContainer:L,getPopup:P,getTitle:M,getContent:H,getImage:B,getIcons:R,getCloseButton:G,getButtonsWrapper:function(){return h("swal.getButtonsWrapper() is deprecated and will be removed in the next major release, use swal.getActions() instead"),j(y.actions)},getActions:U,getConfirmButton:W,getCancelButton:F,getFooter:V,getFocusableElements:Y,getValidationMessage:z,isLoading:function(){return P().hasAttribute("data-loading")},fire:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return l(this,e)},mixin:function(t){return mt(function(n){function s(){return e(this,s),c(this,a(s).apply(this,arguments))}return i(s,n),o(s,[{key:"_main",value:function(e){return d(a(s.prototype),"_main",this).call(this,r({},t,e))}}]),s}(this))},queue:function(t){var e=this;kt=t;var n=function(){kt=[],document.body.removeAttribute("data-swal2-queue-step")},o=[];return new Promise(function(t){!function r(i,a){i<kt.length?(document.body.setAttribute("data-swal2-queue-step",i),e(kt[i]).then(function(e){void 0!==e.value?(o.push(e.value),r(i+1,a)):(n(),t({dismiss:e.dismiss}))})):(n(),t({value:o}))}(0)})},getQueueStep:function(){return document.body.getAttribute("data-swal2-queue-step")},insertQueueStep:function(t,e){return e&&e<kt.length?kt.splice(e,0,t):kt.push(t)},deleteQueueStep:function(t){void 0!==kt[t]&&kt.splice(t,1)},showLoading:Et,enableLoading:Et,getTimerLeft:function(){return dt.timeout&&dt.timeout.getTimerLeft()},stopTimer:function(){return dt.timeout&&dt.timeout.stop()},resumeTimer:function(){return dt.timeout&&dt.timeout.start()},toggleTimer:function(){var t=dt.timeout;return t&&(t.running?t.stop():t.start())},increaseTimer:function(t){return dt.timeout&&dt.timeout.increase(t)},isTimerRunning:function(){return dt.timeout&&dt.timeout.isRunning()}}),Tt="function"==typeof Symbol?Symbol:function(){var t=0;function e(e){return"__"+e+"_"+Math.floor(1e9*Math.random())+"_"+ ++t+"__"}return e.iterator=e("Symbol.iterator"),e}(),Ct="function"==typeof WeakMap?WeakMap:function(t,e,n){function o(){e(this,t,{value:Tt("WeakMap")})}return o.prototype={delete:function(e){delete e[this[t]]},get:function(e){return e[this[t]]},has:function(e){return n.call(e,this[t])},set:function(n,o){e(n,this[t],{configurable:!0,value:o})}},o}(Tt("WeakMap"),Object.defineProperty,{}.hasOwnProperty),St={promise:new Ct,innerParams:new Ct,domCache:new Ct};function At(){var t=St.innerParams.get(this),e=St.domCache.get(this);t.showConfirmButton||(I(e.confirmButton),t.showCancelButton||I(e.actions)),A([e.popup,e.actions],y.loading),e.popup.removeAttribute("aria-busy"),e.popup.removeAttribute("data-loading"),e.confirmButton.disabled=!1,e.cancelButton.disabled=!1}function Dt(t){var e=St.domCache.get(this);e.validationMessage.innerHTML=t;var n=window.getComputedStyle(e.popup);e.validationMessage.style.marginLeft="-".concat(n.getPropertyValue("padding-left")),e.validationMessage.style.marginRight="-".concat(n.getPropertyValue("padding-right")),O(e.validationMessage);var o=this.getInput();o&&(o.setAttribute("aria-invalid",!0),o.setAttribute("aria-describedBy",y["validation-message"]),T(o),S(o,y.inputerror))}function Ot(){var t=St.domCache.get(this);t.validationMessage&&I(t.validationMessage);var e=this.getInput();e&&(e.removeAttribute("aria-invalid"),e.removeAttribute("aria-describedBy"),A(e,y.inputerror))}var It,Nt=function t(n,o){e(this,t);var r,i,a=o;this.running=!1,this.start=function(){return this.running||(this.running=!0,i=new Date,r=setTimeout(n,a)),a},this.stop=function(){return this.running&&(this.running=!1,clearTimeout(r),a-=new Date-i),a},this.increase=function(t){var e=this.running;return e&&this.stop(),a+=t,e&&this.start(),a},this.getTimerLeft=function(){return this.running&&(this.stop(),this.start()),a},this.isRunning=function(){return this.running},this.start()},Lt={email:function(t,e){return/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t)?Promise.resolve():Promise.reject(e&&e.validationMessage?e.validationMessage:"Invalid email address")},url:function(t,e){return/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&\/\/=]*)$/.test(t)?Promise.resolve():Promise.reject(e&&e.validationMessage?e.validationMessage:"Invalid URL")}},jt=function(t){var e=L(),n=P();null!==t.onBeforeOpen&&"function"==typeof t.onBeforeOpen&&t.onBeforeOpen(n),t.animation?(S(n,y.show),S(e,y.fade),A(n,y.hide)):A(n,y.fade),O(n),e.style.overflowY="hidden",tt&&!_(n,y.noanimation)?n.addEventListener(tt,function t(){n.removeEventListener(tt,t),e.style.overflowY="auto"}):e.style.overflowY="auto",S([document.documentElement,document.body,e],y.shown),t.heightAuto&&t.backdrop&&!t.toast&&S([document.documentElement,document.body],y["height-auto"]),K()&&(st(),function(){if(/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&!_(document.body,y.iosfix)){var t=document.body.scrollTop;document.body.style.top=-1*t+"px",S(document.body,y.iosfix)}}(),"undefined"!=typeof window&&lt()&&(ct(),window.addEventListener("resize",ct)),p(document.body.children).forEach(function(t){t===L()||function(t,e){if("function"==typeof t.contains)return t.contains(e)}(t,L())||(t.hasAttribute("aria-hidden")&&t.setAttribute("data-previous-aria-hidden",t.getAttribute("aria-hidden")),t.setAttribute("aria-hidden","true"))}),setTimeout(function(){e.scrollTop=0})),X()||dt.previousActiveElement||(dt.previousActiveElement=document.activeElement),null!==t.onOpen&&"function"==typeof t.onOpen&&setTimeout(function(){t.onOpen(n)})},Pt=Object.freeze({hideLoading:At,disableLoading:At,getInput:function(t){var e=St.innerParams.get(this),n=St.domCache.get(this);if(!(t=t||e.input))return null;switch(t){case"select":case"textarea":case"file":return D(n.content,y[t]);case"checkbox":return n.popup.querySelector(".".concat(y.checkbox," input"));case"radio":return n.popup.querySelector(".".concat(y.radio," input:checked"))||n.popup.querySelector(".".concat(y.radio," input:first-child"));case"range":return n.popup.querySelector(".".concat(y.range," input"));default:return D(n.content,y.input)}},enableButtons:function(){var t=St.domCache.get(this);t.confirmButton.disabled=!1,t.cancelButton.disabled=!1},disableButtons:function(){var t=St.domCache.get(this);t.confirmButton.disabled=!0,t.cancelButton.disabled=!0},enableConfirmButton:function(){St.domCache.get(this).confirmButton.disabled=!1},disableConfirmButton:function(){St.domCache.get(this).confirmButton.disabled=!0},enableInput:function(){var t=this.getInput();if(!t)return!1;if("radio"===t.type)for(var e=t.parentNode.parentNode,n=e.querySelectorAll("input"),o=0;o<n.length;o++)n[o].disabled=!1;else t.disabled=!1},disableInput:function(){var t=this.getInput();if(!t)return!1;if(t&&"radio"===t.type)for(var e=t.parentNode.parentNode,n=e.querySelectorAll("input"),o=0;o<n.length;o++)n[o].disabled=!0;else t.disabled=!0},showValidationMessage:Dt,resetValidationMessage:Ot,resetValidationError:function(){h("Swal.resetValidationError() is deprecated and will be removed in the next major release, use Swal.resetValidationMessage() instead"),Ot.bind(this)()},showValidationError:function(t){h("Swal.showValidationError() is deprecated and will be removed in the next major release, use Swal.showValidationMessage() instead"),Dt.bind(this)(t)},getProgressSteps:function(){return St.innerParams.get(this).progressSteps},setProgressSteps:function(t){var e=r({},St.innerParams.get(this),{progressSteps:t});St.innerParams.set(this,e),it(e)},showProgressSteps:function(){var t=St.domCache.get(this);O(t.progressSteps)},hideProgressSteps:function(){var t=St.domCache.get(this);I(t.progressSteps)},_main:function(e){var n=this;wt(e);var o=r({},ft,e);(function(e){e.inputValidator||Object.keys(Lt).forEach(function(t){e.input===t&&(e.inputValidator=e.expectRejections?Lt[t]:Bt.adaptInputValidator(Lt[t]))}),e.validationMessage&&("object"!==t(e.extraParams)&&(e.extraParams={}),e.extraParams.validationMessage=e.validationMessage),(!e.target||"string"==typeof e.target&&!document.querySelector(e.target)||"string"!=typeof e.target&&!e.target.appendChild)&&(m('Target parameter is not valid, defaulting to "body"'),e.target="body"),"function"==typeof e.animation&&(e.animation=e.animation.call());var n,o=P(),r="string"==typeof e.target?document.querySelector(e.target):e.target;n=o&&r&&o.parentNode!==r.parentNode?Z(e):o||Z(e),e.width&&(n.style.width="number"==typeof e.width?e.width+"px":e.width),e.padding&&(n.style.padding="number"==typeof e.padding?e.padding+"px":e.padding),e.background&&(n.style.background=e.background);for(var i=window.getComputedStyle(n).getPropertyValue("background-color"),a=n.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"),s=0;s<a.length;s++)a[s].style.backgroundColor=i;var l=L(),c=G(),d=V();if(at(e),nt(e),"string"==typeof e.backdrop?L().style.background=e.backdrop:e.backdrop||S([document.documentElement,document.body],y["no-backdrop"]),!e.backdrop&&e.allowOutsideClick&&m('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'),e.position in y?S(l,y[e.position]):(m('The "position" parameter is not valid, defaulting to "center"'),S(l,y.center)),e.grow&&"string"==typeof e.grow){var p="grow-"+e.grow;p in y&&S(l,y[p])}e.showCloseButton?(c.setAttribute("aria-label",e.closeButtonAriaLabel),O(c)):I(c),n.className=y.popup,e.toast?(S([document.documentElement,document.body],y["toast-shown"]),S(n,y.toast)):S(n,y.modal),e.customClass&&S(n,e.customClass),it(e),ot(e),rt(e),et(e),J(e.footer,d),!0===e.animation?A(n,y.noanimation):S(n,y.noanimation),e.showLoaderOnConfirm&&!e.preConfirm&&m("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request")})(o),Object.freeze(o),St.innerParams.set(this,o),dt.timeout&&(dt.timeout.stop(),delete dt.timeout),clearTimeout(dt.restoreFocusTimeout);var i={popup:P(),container:L(),content:H(),actions:U(),confirmButton:W(),cancelButton:F(),closeButton:G(),validationMessage:z(),progressSteps:q()};St.domCache.set(this,i);var a=this.constructor;return new Promise(function(e,r){var s=function(t){a.closePopup(o.onClose,o.onAfterClose),o.useRejections?e(t):e({value:t})},l=function(t){a.closePopup(o.onClose,o.onAfterClose),o.useRejections?r(t):e({dismiss:t})},c=function(t){a.closePopup(o.onClose,o.onAfterClose),r(t)};o.timer&&(dt.timeout=new Nt(function(){l("timer"),delete dt.timeout},o.timer)),o.input&&setTimeout(function(){var t=n.getInput();t&&T(t)},0);for(var d=function(t){if(o.showLoaderOnConfirm&&a.showLoading(),o.preConfirm){n.resetValidationMessage();var e=Promise.resolve().then(function(){return o.preConfirm(t,o.extraParams)});o.expectRejections?e.then(function(e){return s(e||t)},function(t){n.hideLoading(),t&&n.showValidationMessage(t)}):e.then(function(e){N(i.validationMessage)||!1===e?n.hideLoading():s(e||t)},function(t){return c(t)})}else s(t)},p=function(t){var e=t.target,r=i.confirmButton,s=i.cancelButton,p=r&&(r===e||r.contains(e)),u=s&&(s===e||s.contains(e));switch(t.type){case"click":if(p&&a.isVisible())if(n.disableButtons(),o.input){var m=function(){var t=n.getInput();if(!t)return null;switch(o.input){case"checkbox":return t.checked?1:0;case"radio":return t.checked?t.value:null;case"file":return t.files.length?t.files[0]:null;default:return o.inputAutoTrim?t.value.trim():t.value}}();if(o.inputValidator){n.disableInput();var f=Promise.resolve().then(function(){return o.inputValidator(m,o.extraParams)});o.expectRejections?f.then(function(){n.enableButtons(),n.enableInput(),d(m)},function(t){n.enableButtons(),n.enableInput(),t&&n.showValidationMessage(t)}):f.then(function(t){n.enableButtons(),n.enableInput(),t?n.showValidationMessage(t):d(m)},function(t){return c(t)})}else n.getInput().checkValidity()?d(m):(n.enableButtons(),n.showValidationMessage(o.validationMessage))}else d(!0);else u&&a.isVisible()&&(n.disableButtons(),l(a.DismissReason.cancel))}},g=i.popup.querySelectorAll("button"),h=0;h<g.length;h++)g[h].onclick=p,g[h].onmouseover=p,g[h].onmouseout=p,g[h].onmousedown=p;if(i.closeButton.onclick=function(){l(a.DismissReason.close)},o.toast)i.popup.onclick=function(){o.showConfirmButton||o.showCancelButton||o.showCloseButton||o.input||l(a.DismissReason.close)};else{var w=!1;i.popup.onmousedown=function(){i.container.onmouseup=function(t){i.container.onmouseup=void 0,t.target===i.container&&(w=!0)}},i.container.onmousedown=function(){i.popup.onmouseup=function(t){i.popup.onmouseup=void 0,(t.target===i.popup||i.popup.contains(t.target))&&(w=!0)}},i.container.onclick=function(t){w?w=!1:t.target===i.container&&b(o.allowOutsideClick)&&l(a.DismissReason.backdrop)}}o.reverseButtons?i.confirmButton.parentNode.insertBefore(i.cancelButton,i.confirmButton):i.confirmButton.parentNode.insertBefore(i.confirmButton,i.cancelButton);var x=function(t,e){for(var n=Y(o.focusCancel),r=0;r<n.length;r++)return(t+=e)===n.length?t=0:-1===t&&(t=n.length-1),n[t].focus();i.popup.focus()};dt.keydownHandlerAdded&&(dt.keydownTarget.removeEventListener("keydown",dt.keydownHandler,{capture:dt.keydownListenerCapture}),dt.keydownHandlerAdded=!1),o.toast||(dt.keydownHandler=function(t){return function(t,e){if(e.stopKeydownPropagation&&t.stopPropagation(),"Enter"!==t.key||t.isComposing)if("Tab"===t.key){for(var o=t.target,r=Y(e.focusCancel),s=-1,c=0;c<r.length;c++)if(o===r[c]){s=c;break}t.shiftKey?x(s,-1):x(s,1),t.stopPropagation(),t.preventDefault()}else-1!==["ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Left","Right","Up","Down"].indexOf(t.key)?document.activeElement===i.confirmButton&&N(i.cancelButton)?i.cancelButton.focus():document.activeElement===i.cancelButton&&N(i.confirmButton)&&i.confirmButton.focus():"Escape"!==t.key&&"Esc"!==t.key||!0!==b(e.allowEscapeKey)||(t.preventDefault(),l(a.DismissReason.esc));else if(t.target&&n.getInput()&&t.target.outerHTML===n.getInput().outerHTML){if(-1!==["textarea","file"].indexOf(e.input))return;a.clickConfirm(),t.preventDefault()}}(t,o)},dt.keydownTarget=o.keydownListenerCapture?window:i.popup,dt.keydownListenerCapture=o.keydownListenerCapture,dt.keydownTarget.addEventListener("keydown",dt.keydownHandler,{capture:dt.keydownListenerCapture}),dt.keydownHandlerAdded=!0),n.enableButtons(),n.hideLoading(),n.resetValidationMessage(),o.toast&&(o.input||o.footer||o.showCloseButton)?S(document.body,y["toast-column"]):A(document.body,y["toast-column"]);for(var k,E,_=["input","file","range","select","radio","checkbox","textarea"],C=function(t){t.placeholder&&!o.inputPlaceholder||(t.placeholder=o.inputPlaceholder)},L=0;L<_.length;L++){var j=y[_[L]],P=D(i.content,j);if(k=n.getInput(_[L])){for(var R in k.attributes)if(k.attributes.hasOwnProperty(R)){var M=k.attributes[R].name;"type"!==M&&"value"!==M&&k.removeAttribute(M)}for(var H in o.inputAttributes)"range"===_[L]&&"placeholder"===H||k.setAttribute(H,o.inputAttributes[H])}P.className=j,o.inputClass&&S(P,o.inputClass),I(P)}switch(o.input){case"text":case"email":case"password":case"number":case"tel":case"url":k=D(i.content,y.input),"string"==typeof o.inputValue||"number"==typeof o.inputValue?k.value=o.inputValue:v(o.inputValue)||m('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(t(o.inputValue),'"')),C(k),k.type=o.input,O(k);break;case"file":k=D(i.content,y.file),C(k),k.type=o.input,O(k);break;case"range":var B=D(i.content,y.range),q=B.querySelector("input"),z=B.querySelector("output");q.value=o.inputValue,q.type=o.input,z.value=o.inputValue,O(B);break;case"select":var W=D(i.content,y.select);if(W.innerHTML="",o.inputPlaceholder){var F=document.createElement("option");F.innerHTML=o.inputPlaceholder,F.value="",F.disabled=!0,F.selected=!0,W.appendChild(F)}E=function(t){t.forEach(function(t){var e=t[0],n=t[1],r=document.createElement("option");r.value=e,r.innerHTML=n,o.inputValue.toString()===e.toString()&&(r.selected=!0),W.appendChild(r)}),O(W),W.focus()};break;case"radio":var U=D(i.content,y.radio);U.innerHTML="",E=function(t){t.forEach(function(t){var e=t[0],n=t[1],r=document.createElement("input"),i=document.createElement("label");r.type="radio",r.name=y.radio,r.value=e,o.inputValue.toString()===e.toString()&&(r.checked=!0);var a=document.createElement("span");a.innerHTML=n,a.className=y.label,i.appendChild(r),i.appendChild(a),U.appendChild(i)}),O(U);var e=U.querySelectorAll("input");e.length&&e[0].focus()};break;case"checkbox":var V=D(i.content,y.checkbox),G=n.getInput("checkbox");G.type="checkbox",G.value=1,G.id=y.checkbox,G.checked=Boolean(o.inputValue);var K=V.querySelector("span");K.innerHTML=o.inputPlaceholder,O(V);break;case"textarea":var X=D(i.content,y.textarea);X.value=o.inputValue,C(X),O(X);break;case null:break;default:f('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(o.input,'"'))}if("select"===o.input||"radio"===o.input){var $=function(t){return E(u(t))};v(o.inputOptions)?(a.showLoading(),o.inputOptions.then(function(t){n.hideLoading(),$(t)})):"object"===t(o.inputOptions)?$(o.inputOptions):f("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(t(o.inputOptions)))}else-1!==["text","email","number","tel","textarea"].indexOf(o.input)&&v(o.inputValue)&&(a.showLoading(),I(k),o.inputValue.then(function(t){k.value="number"===o.input?parseFloat(t)||0:t+"",O(k),k.focus(),n.hideLoading()}).catch(function(t){f("Error in inputValue promise: "+t),k.value="",O(k),k.focus(),n.hideLoading()}));jt(o),o.toast||(b(o.allowEnterKey)?o.focusCancel&&N(i.cancelButton)?i.cancelButton.focus():o.focusConfirm&&N(i.confirmButton)?i.confirmButton.focus():x(-1,1):document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()),i.container.scrollTop=0})}});function Rt(){if("undefined"!=typeof window){"undefined"==typeof Promise&&f("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"),It=this;for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var o=Object.freeze(this.constructor.argsToParams(e));Object.defineProperties(this,{params:{value:o,writable:!1,enumerable:!0}});var r=this._main(this.params);St.promise.set(this,r)}}Rt.prototype.then=function(t,e){var n=St.promise.get(this);return n.then(t,e)},Rt.prototype.catch=function(t){var e=St.promise.get(this);return e.catch(t)},Rt.prototype.finally=function(t){var e=St.promise.get(this);return e.finally(t)},r(Rt.prototype,Pt),r(Rt,_t),Object.keys(Pt).forEach(function(t){Rt[t]=function(){var e;if(It)return(e=It)[t].apply(e,arguments)}}),Rt.DismissReason=w,Rt.noop=function(){};var Mt,Ht,Bt=mt((Ht=function(n){function s(){return e(this,s),c(this,a(s).apply(this,arguments))}return i(s,n),o(s,[{key:"_main",value:function(t){return d(a(s.prototype),"_main",this).call(this,r({},yt,t))}}],[{key:"setDefaults",value:function(e){if(h(xt),!e||"object"!==t(e))throw new TypeError("SweetAlert2: The argument for setDefaults() is required and has to be a object");wt(e),Object.keys(e).forEach(function(t){Mt.isValidParameter(t)&&(yt[t]=e[t])})}},{key:"resetDefaults",value:function(){h(xt),yt={}}}]),s}(Mt=Rt),"undefined"!=typeof window&&"object"===t(window._swalDefaults)&&Ht.setDefaults(window._swalDefaults),Ht));return Bt.default=Bt,Bt}(),"undefined"!=typeof window&&window.Sweetalert2&&(window.Sweetalert2.version="7.32.4",window.swal=window.sweetAlert=window.Swal=window.SweetAlert=window.Sweetalert2),"undefined"!=typeof document&&function(t,e){var n=t.createElement("style");if(t.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=e);else try{n.innerHTML=e}catch(t){n.innerText=e}}(document,"@-webkit-keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}body.swal2-toast-shown .swal2-container{position:fixed;background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-shown{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}body.swal2-toast-column .swal2-toast{flex-direction:column;align-items:stretch}body.swal2-toast-column .swal2-toast .swal2-actions{flex:1;align-self:stretch;height:2.2em;margin-top:.3125em}body.swal2-toast-column .swal2-toast .swal2-loading{justify-content:center}body.swal2-toast-column .swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}body.swal2-toast-column .swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast{flex-direction:row;align-items:center;width:auto;padding:.625em;box-shadow:0 0 .625em #d9d9d9;overflow-y:hidden}.swal2-popup.swal2-toast .swal2-header{flex-direction:row}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:initial;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;font-size:1em}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0}.swal2-popup.swal2-toast .swal2-icon-text{font-size:2em;font-weight:700;line-height:1em}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{height:auto;margin:0 .3125em}.swal2-popup.swal2-toast .swal2-styled{margin:0 .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 .0625em #fff,0 0 0 .125em rgba(50,100,150,.4)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:2em;height:2.8125em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.25em;left:-.9375em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:2em 2em;transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;-webkit-transform-origin:0 2em;transform-origin:0 2em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:showSweetToast .5s;animation:showSweetToast .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:hideSweetToast .2s forwards;animation:hideSweetToast .2s forwards}.swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-tip{-webkit-animation:animate-toast-success-tip .75s;animation:animate-toast-success-tip .75s}.swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-long{-webkit-animation:animate-toast-success-long .75s;animation:animate-toast-success-long .75s}@-webkit-keyframes showSweetToast{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg);opacity:0}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg);opacity:.5}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg);opacity:.7}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0);opacity:1}}@keyframes showSweetToast{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg);opacity:0}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg);opacity:.5}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg);opacity:.7}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0);opacity:1}}@-webkit-keyframes hideSweetToast{0%{opacity:1}33%{opacity:.5}100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@keyframes hideSweetToast{0%{opacity:1}33%{opacity:.5}100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes animate-toast-success-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes animate-toast-success-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes animate-toast-success-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes animate-toast-success-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-shown{top:auto;right:auto;bottom:auto;left:auto;background-color:transparent}body.swal2-no-backdrop .swal2-shown>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-shown.swal2-top{top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-top-left,body.swal2-no-backdrop .swal2-shown.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-shown.swal2-top-end,body.swal2-no-backdrop .swal2-shown.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-shown.swal2-center{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-shown.swal2-center-left,body.swal2-no-backdrop .swal2-shown.swal2-center-start{top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-center-end,body.swal2-no-backdrop .swal2-shown.swal2-center-right{top:50%;right:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-bottom{bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-bottom-left,body.swal2-no-backdrop .swal2-shown.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-shown.swal2-bottom-end,body.swal2-no-backdrop .swal2-shown.swal2-bottom-right{right:0;bottom:0}.swal2-container{display:flex;position:fixed;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:10px;background-color:transparent;z-index:1060;overflow-x:hidden;-webkit-overflow-scrolling:touch}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-container.swal2-fade{transition:background-color .1s}.swal2-container.swal2-shown{background-color:rgba(0,0,0,.4)}.swal2-popup{display:none;position:relative;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border-radius:.3125em;background:#fff;font-family:inherit;font-size:1rem;box-sizing:border-box}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-popup .swal2-header{display:flex;flex-direction:column;align-items:center}.swal2-popup .swal2-title{display:block;position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-popup .swal2-actions{flex-wrap:wrap;align-items:center;justify-content:center;margin:1.25em auto 0;z-index:1}.swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-popup .swal2-actions.swal2-loading .swal2-styled.swal2-confirm{width:2.5em;height:2.5em;margin:.46875em;padding:0;border:.25em solid transparent;border-radius:100%;border-color:transparent;background-color:transparent!important;color:transparent;cursor:default;box-sizing:border-box;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-popup .swal2-actions.swal2-loading .swal2-styled.swal2-cancel{margin-right:30px;margin-left:30px}.swal2-popup .swal2-actions.swal2-loading :not(.swal2-styled).swal2-confirm::after{display:inline-block;width:15px;height:15px;margin-left:5px;border:3px solid #999;border-radius:50%;border-right-color:transparent;box-shadow:1px 1px 1px #fff;content:'';-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal}.swal2-popup .swal2-styled{margin:.3125em;padding:.625em 2em;font-weight:500;box-shadow:none}.swal2-popup .swal2-styled:not([disabled]){cursor:pointer}.swal2-popup .swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#3085d6;color:#fff;font-size:1.0625em}.swal2-popup .swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#aaa;color:#fff;font-size:1.0625em}.swal2-popup .swal2-styled:focus{outline:0;box-shadow:0 0 0 2px #fff,0 0 0 4px rgba(50,100,150,.4)}.swal2-popup .swal2-styled::-moz-focus-inner{border:0}.swal2-popup .swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-popup .swal2-image{max-width:100%;margin:1.25em auto}.swal2-popup .swal2-close{position:absolute;top:0;right:0;justify-content:center;width:1.2em;height:1.2em;padding:0;transition:color .1s ease-out;border:none;border-radius:0;outline:initial;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer;overflow:hidden}.swal2-popup .swal2-close:hover{-webkit-transform:none;transform:none;color:#f27474}.swal2-popup>.swal2-checkbox,.swal2-popup>.swal2-file,.swal2-popup>.swal2-input,.swal2-popup>.swal2-radio,.swal2-popup>.swal2-select,.swal2-popup>.swal2-textarea{display:none}.swal2-popup .swal2-content{justify-content:center;margin:0;padding:0;color:#545454;font-size:1.125em;font-weight:300;line-height:normal;z-index:1;word-wrap:break-word}.swal2-popup #swal2-content{text-align:center}.swal2-popup .swal2-checkbox,.swal2-popup .swal2-file,.swal2-popup .swal2-input,.swal2-popup .swal2-radio,.swal2-popup .swal2-select,.swal2-popup .swal2-textarea{margin:1em auto}.swal2-popup .swal2-file,.swal2-popup .swal2-input,.swal2-popup .swal2-textarea{width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;font-size:1.125em;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);box-sizing:border-box}.swal2-popup .swal2-file.swal2-inputerror,.swal2-popup .swal2-input.swal2-inputerror,.swal2-popup .swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-popup .swal2-file:focus,.swal2-popup .swal2-input:focus,.swal2-popup .swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 3px #c4e6f5}.swal2-popup .swal2-file::-webkit-input-placeholder,.swal2-popup .swal2-input::-webkit-input-placeholder,.swal2-popup .swal2-textarea::-webkit-input-placeholder{color:#ccc}.swal2-popup .swal2-file:-ms-input-placeholder,.swal2-popup .swal2-input:-ms-input-placeholder,.swal2-popup .swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-popup .swal2-file::-ms-input-placeholder,.swal2-popup .swal2-input::-ms-input-placeholder,.swal2-popup .swal2-textarea::-ms-input-placeholder{color:#ccc}.swal2-popup .swal2-file::placeholder,.swal2-popup .swal2-input::placeholder,.swal2-popup .swal2-textarea::placeholder{color:#ccc}.swal2-popup .swal2-range input{width:80%}.swal2-popup .swal2-range output{width:20%;font-weight:600;text-align:center}.swal2-popup .swal2-range input,.swal2-popup .swal2-range output{height:2.625em;margin:1em auto;padding:0;font-size:1.125em;line-height:2.625em}.swal2-popup .swal2-input{height:2.625em;padding:0 .75em}.swal2-popup .swal2-input[type=number]{max-width:10em}.swal2-popup .swal2-file{font-size:1.125em}.swal2-popup .swal2-textarea{height:6.75em;padding:.75em}.swal2-popup .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;color:#545454;font-size:1.125em}.swal2-popup .swal2-checkbox,.swal2-popup .swal2-radio{align-items:center;justify-content:center}.swal2-popup .swal2-checkbox label,.swal2-popup .swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-popup .swal2-checkbox input,.swal2-popup .swal2-radio input{margin:0 .4em}.swal2-popup .swal2-validation-message{display:none;align-items:center;justify-content:center;padding:.625em;background:#f0f0f0;color:#666;font-size:1em;font-weight:300;overflow:hidden}.swal2-popup .swal2-validation-message::before{display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center;content:'!';zoom:normal}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-moz-document url-prefix(){.swal2-close:focus{outline:2px solid rgba(50,100,150,.4)}}.swal2-icon{position:relative;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;line-height:5em;cursor:default;box-sizing:content-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;zoom:normal}.swal2-icon-text{font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:3.75em 3.75em;transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 3.75em;transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;top:-.25em;left:-.25em;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%;z-index:2;box-sizing:content-box}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;top:.5em;left:1.625em;width:.4375em;height:5.625em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);z-index:1}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;height:.3125em;border-radius:.125em;background-color:#a5dc86;z-index:2}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.875em;width:1.5625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-progresssteps{align-items:center;margin:0 0 1.25em;padding:0;font-weight:600}.swal2-progresssteps li{display:inline-block;position:relative}.swal2-progresssteps .swal2-progresscircle{width:2em;height:2em;border-radius:2em;background:#3085d6;color:#fff;line-height:2em;text-align:center;z-index:20}.swal2-progresssteps .swal2-progresscircle:first-child{margin-left:0}.swal2-progresssteps .swal2-progresscircle:last-child{margin-right:0}.swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep{background:#3085d6}.swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep~.swal2-progresscircle{background:#add8e6}.swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep~.swal2-progressline{background:#add8e6}.swal2-progresssteps .swal2-progressline{width:2.5em;height:.4em;margin:0 -1px;background:#3085d6;z-index:10}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-show.swal2-noanimation{-webkit-animation:none;animation:none}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-hide.swal2-noanimation{-webkit-animation:none;animation:none}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-animate-success-icon .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-animate-success-icon .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-animate-success-icon .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-animate-error-icon{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-animate-error-icon .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}@-webkit-keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:initial!important}}")},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||"",o=t[3];if(!o)return n;if(e&&"function"==typeof btoa){var r=(a=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=o.sources.map(function(t){return"/*# sourceURL="+o.sourceRoot+t+" */"});return[n].concat(i).concat([r]).join("\n")}var a;return[n].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+n+"}":n}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){var o,r,i={},a=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=o.apply(this,arguments)),r}),s=function(t){var e={};return function(t,n){if("function"==typeof t)return t();if(void 0===e[t]){var o=function(t,e){return e?e.querySelector(t):document.querySelector(t)}.call(this,t,n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}}(),l=null,c=0,d=[],p=n(63);function u(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=i[o.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](o.parts[a]);for(;a<o.parts.length;a++)r.parts.push(v(o.parts[a],e))}else{var s=[];for(a=0;a<o.parts.length;a++)s.push(v(o.parts[a],e));i[o.id]={id:o.id,refs:1,parts:s}}}}function m(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(s):n.push(o[a]={id:a,parts:[s]})}return n}function f(t,e){var n=s(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=d[d.length-1];if("top"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),d.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=s(t.insertAt.before,n);n.insertBefore(e,r)}}function g(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=d.indexOf(t);e>=0&&d.splice(e,1)}function h(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var o=function(){0;return n.nc}();o&&(t.attrs.nonce=o)}return b(e,t.attrs),f(t,e),e}function b(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function v(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=i}if(e.singleton){var a=c++;n=l||(l=h(e)),o=y.bind(null,n,a,!1),r=y.bind(null,n,a,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",b(e,t.attrs),f(t,e),e}(e),o=function(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=p(o));r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,e),r=function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(e),o=function(t,e){var n=e.css,o=e.media;o&&t.setAttribute("media",o);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),r=function(){g(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=m(t,e);return u(n,e),function(t){for(var o=[],r=0;r<n.length;r++){var a=n[r];(s=i[a.id]).refs--,o.push(s)}t&&u(m(t,e),e);for(r=0;r<o.length;r++){var s;if(0===(s=o[r]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete i[s.id]}}}};var w,x=(w=[],function(t,e){return w[t]=e,w.filter(Boolean).join("\n")});function y(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}},function(t,e,n){var o;
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
!function(e,n){"use strict";"object"==typeof t.exports?t.exports=e.document?n(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return n(t)}:n(e)}("undefined"!=typeof window?window:this,function(n,r){"use strict";var i=[],a=n.document,s=Object.getPrototypeOf,l=i.slice,c=i.concat,d=i.push,p=i.indexOf,u={},m=u.toString,f=u.hasOwnProperty,g=f.toString,h=g.call(Object),b={},v=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},w=function(t){return null!=t&&t===t.window},x={type:!0,src:!0,noModule:!0};function y(t,e,n){var o,r=(e=e||a).createElement("script");if(r.text=t,n)for(o in x)n[o]&&(r[o]=n[o]);e.head.appendChild(r).parentNode.removeChild(r)}function k(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?u[m.call(t)]||"object":typeof t}var E=function(t,e){return new E.fn.init(t,e)},_=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function T(t){var e=!!t&&"length"in t&&t.length,n=k(t);return!v(t)&&!w(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}E.fn=E.prototype={jquery:"3.3.1",constructor:E,length:0,toArray:function(){return l.call(this)},get:function(t){return null==t?l.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=E.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return E.each(this,t)},map:function(t){return this.pushStack(E.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:d,sort:i.sort,splice:i.splice},E.extend=E.fn.extend=function(){var t,e,n,o,r,i,a=arguments[0]||{},s=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(t=arguments[s]))for(e in t)n=a[e],a!==(o=t[e])&&(c&&o&&(E.isPlainObject(o)||(r=Array.isArray(o)))?(r?(r=!1,i=n&&Array.isArray(n)?n:[]):i=n&&E.isPlainObject(n)?n:{},a[e]=E.extend(c,i,o)):void 0!==o&&(a[e]=o));return a},E.extend({expando:"jQuery"+("3.3.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==m.call(t))&&(!(e=s(t))||"function"==typeof(n=f.call(e,"constructor")&&e.constructor)&&g.call(n)===h)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){y(t)},each:function(t,e){var n,o=0;if(T(t))for(n=t.length;o<n&&!1!==e.call(t[o],o,t[o]);o++);else for(o in t)if(!1===e.call(t[o],o,t[o]))break;return t},trim:function(t){return null==t?"":(t+"").replace(_,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(T(Object(t))?E.merge(n,"string"==typeof t?[t]:t):d.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:p.call(e,t,n)},merge:function(t,e){for(var n=+e.length,o=0,r=t.length;o<n;o++)t[r++]=e[o];return t.length=r,t},grep:function(t,e,n){for(var o=[],r=0,i=t.length,a=!n;r<i;r++)!e(t[r],r)!==a&&o.push(t[r]);return o},map:function(t,e,n){var o,r,i=0,a=[];if(T(t))for(o=t.length;i<o;i++)null!=(r=e(t[i],i,n))&&a.push(r);else for(i in t)null!=(r=e(t[i],i,n))&&a.push(r);return c.apply([],a)},guid:1,support:b}),"function"==typeof Symbol&&(E.fn[Symbol.iterator]=i[Symbol.iterator]),E.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){u["[object "+e+"]"]=e.toLowerCase()});var C=
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
function(t){var e,n,o,r,i,a,s,l,c,d,p,u,m,f,g,h,b,v,w,x="sizzle"+1*new Date,y=t.document,k=0,E=0,_=at(),T=at(),C=at(),S=function(t,e){return t===e&&(p=!0),0},A={}.hasOwnProperty,D=[],O=D.pop,I=D.push,N=D.push,L=D.slice,j=function(t,e){for(var n=0,o=t.length;n<o;n++)if(t[n]===e)return n;return-1},P="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",H="\\["+R+"*("+M+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+R+"*\\]",B=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+H+")*)|.*)\\)|)",q=new RegExp(R+"+","g"),z=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),W=new RegExp("^"+R+"*,"+R+"*"),F=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),U=new RegExp("="+R+"*([^\\]'\"]*?)"+R+"*\\]","g"),V=new RegExp(B),G=new RegExp("^"+M+"$"),Y={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+H),PSEUDO:new RegExp("^"+B),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+P+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},K=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,Q=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Z=/[+~]/,J=new RegExp("\\\\([\\da-f]{1,6}"+R+"?|("+R+")|.)","ig"),tt=function(t,e,n){var o="0x"+e-65536;return o!=o||n?e:o<0?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)},et=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,nt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},ot=function(){u()},rt=vt(function(t){return!0===t.disabled&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{N.apply(D=L.call(y.childNodes),y.childNodes),D[y.childNodes.length].nodeType}catch(t){N={apply:D.length?function(t,e){I.apply(t,L.call(e))}:function(t,e){for(var n=t.length,o=0;t[n++]=e[o++];);t.length=n-1}}}function it(t,e,o,r){var i,s,c,d,p,f,b,v=e&&e.ownerDocument,k=e?e.nodeType:9;if(o=o||[],"string"!=typeof t||!t||1!==k&&9!==k&&11!==k)return o;if(!r&&((e?e.ownerDocument||e:y)!==m&&u(e),e=e||m,g)){if(11!==k&&(p=Q.exec(t)))if(i=p[1]){if(9===k){if(!(c=e.getElementById(i)))return o;if(c.id===i)return o.push(c),o}else if(v&&(c=v.getElementById(i))&&w(e,c)&&c.id===i)return o.push(c),o}else{if(p[2])return N.apply(o,e.getElementsByTagName(t)),o;if((i=p[3])&&n.getElementsByClassName&&e.getElementsByClassName)return N.apply(o,e.getElementsByClassName(i)),o}if(n.qsa&&!C[t+" "]&&(!h||!h.test(t))){if(1!==k)v=e,b=t;else if("object"!==e.nodeName.toLowerCase()){for((d=e.getAttribute("id"))?d=d.replace(et,nt):e.setAttribute("id",d=x),s=(f=a(t)).length;s--;)f[s]="#"+d+" "+bt(f[s]);b=f.join(","),v=Z.test(t)&&gt(e.parentNode)||e}if(b)try{return N.apply(o,v.querySelectorAll(b)),o}catch(t){}finally{d===x&&e.removeAttribute("id")}}}return l(t.replace(z,"$1"),e,o,r)}function at(){var t=[];return function e(n,r){return t.push(n+" ")>o.cacheLength&&delete e[t.shift()],e[n+" "]=r}}function st(t){return t[x]=!0,t}function lt(t){var e=m.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ct(t,e){for(var n=t.split("|"),r=n.length;r--;)o.attrHandle[n[r]]=e}function dt(t,e){var n=e&&t,o=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(o)return o;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ut(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function mt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&rt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ft(t){return st(function(e){return e=+e,st(function(n,o){for(var r,i=t([],n.length,e),a=i.length;a--;)n[r=i[a]]&&(n[r]=!(o[r]=n[r]))})})}function gt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in n=it.support={},i=it.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},u=it.setDocument=function(t){var e,r,a=t?t.ownerDocument||t:y;return a!==m&&9===a.nodeType&&a.documentElement?(f=(m=a).documentElement,g=!i(m),y!==m&&(r=m.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",ot,!1):r.attachEvent&&r.attachEvent("onunload",ot)),n.attributes=lt(function(t){return t.className="i",!t.getAttribute("className")}),n.getElementsByTagName=lt(function(t){return t.appendChild(m.createComment("")),!t.getElementsByTagName("*").length}),n.getElementsByClassName=$.test(m.getElementsByClassName),n.getById=lt(function(t){return f.appendChild(t).id=x,!m.getElementsByName||!m.getElementsByName(x).length}),n.getById?(o.filter.ID=function(t){var e=t.replace(J,tt);return function(t){return t.getAttribute("id")===e}},o.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n=e.getElementById(t);return n?[n]:[]}}):(o.filter.ID=function(t){var e=t.replace(J,tt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},o.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n,o,r,i=e.getElementById(t);if(i){if((n=i.getAttributeNode("id"))&&n.value===t)return[i];for(r=e.getElementsByName(t),o=0;i=r[o++];)if((n=i.getAttributeNode("id"))&&n.value===t)return[i]}return[]}}),o.find.TAG=n.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):n.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,o=[],r=0,i=e.getElementsByTagName(t);if("*"===t){for(;n=i[r++];)1===n.nodeType&&o.push(n);return o}return i},o.find.CLASS=n.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},b=[],h=[],(n.qsa=$.test(m.querySelectorAll))&&(lt(function(t){f.appendChild(t).innerHTML="<a id='"+x+"'></a><select id='"+x+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&h.push("[*^$]="+R+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||h.push("\\["+R+"*(?:value|"+P+")"),t.querySelectorAll("[id~="+x+"-]").length||h.push("~="),t.querySelectorAll(":checked").length||h.push(":checked"),t.querySelectorAll("a#"+x+"+*").length||h.push(".#.+[+~]")}),lt(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=m.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&h.push("name"+R+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&h.push(":enabled",":disabled"),f.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&h.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),h.push(",.*:")})),(n.matchesSelector=$.test(v=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&lt(function(t){n.disconnectedMatch=v.call(t,"*"),v.call(t,"[s!='']:x"),b.push("!=",B)}),h=h.length&&new RegExp(h.join("|")),b=b.length&&new RegExp(b.join("|")),e=$.test(f.compareDocumentPosition),w=e||$.test(f.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,o=e&&e.parentNode;return t===o||!(!o||1!==o.nodeType||!(n.contains?n.contains(o):t.compareDocumentPosition&&16&t.compareDocumentPosition(o)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},S=e?function(t,e){if(t===e)return p=!0,0;var o=!t.compareDocumentPosition-!e.compareDocumentPosition;return o||(1&(o=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(t)===o?t===m||t.ownerDocument===y&&w(y,t)?-1:e===m||e.ownerDocument===y&&w(y,e)?1:d?j(d,t)-j(d,e):0:4&o?-1:1)}:function(t,e){if(t===e)return p=!0,0;var n,o=0,r=t.parentNode,i=e.parentNode,a=[t],s=[e];if(!r||!i)return t===m?-1:e===m?1:r?-1:i?1:d?j(d,t)-j(d,e):0;if(r===i)return dt(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)s.unshift(n);for(;a[o]===s[o];)o++;return o?dt(a[o],s[o]):a[o]===y?-1:s[o]===y?1:0},m):m},it.matches=function(t,e){return it(t,null,null,e)},it.matchesSelector=function(t,e){if((t.ownerDocument||t)!==m&&u(t),e=e.replace(U,"='$1']"),n.matchesSelector&&g&&!C[e+" "]&&(!b||!b.test(e))&&(!h||!h.test(e)))try{var o=v.call(t,e);if(o||n.disconnectedMatch||t.document&&11!==t.document.nodeType)return o}catch(t){}return it(e,m,null,[t]).length>0},it.contains=function(t,e){return(t.ownerDocument||t)!==m&&u(t),w(t,e)},it.attr=function(t,e){(t.ownerDocument||t)!==m&&u(t);var r=o.attrHandle[e.toLowerCase()],i=r&&A.call(o.attrHandle,e.toLowerCase())?r(t,e,!g):void 0;return void 0!==i?i:n.attributes||!g?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},it.escape=function(t){return(t+"").replace(et,nt)},it.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},it.uniqueSort=function(t){var e,o=[],r=0,i=0;if(p=!n.detectDuplicates,d=!n.sortStable&&t.slice(0),t.sort(S),p){for(;e=t[i++];)e===t[i]&&(r=o.push(i));for(;r--;)t.splice(o[r],1)}return d=null,t},r=it.getText=function(t){var e,n="",o=0,i=t.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=r(t)}else if(3===i||4===i)return t.nodeValue}else for(;e=t[o++];)n+=r(e);return n},(o=it.selectors={cacheLength:50,createPseudo:st,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(J,tt),t[3]=(t[3]||t[4]||t[5]||"").replace(J,tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||it.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&it.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return Y.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&V.test(n)&&(e=a(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(J,tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=_[t+" "];return e||(e=new RegExp("(^|"+R+")"+t+"("+R+"|$)"))&&_(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,e,n){return function(o){var r=it.attr(o,t);return null==r?"!="===e:!e||(r+="","="===e?r===n:"!="===e?r!==n:"^="===e?n&&0===r.indexOf(n):"*="===e?n&&r.indexOf(n)>-1:"$="===e?n&&r.slice(-n.length)===n:"~="===e?(" "+r.replace(q," ")+" ").indexOf(n)>-1:"|="===e&&(r===n||r.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,n,o,r){var i="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===o&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var c,d,p,u,m,f,g=i!==a?"nextSibling":"previousSibling",h=e.parentNode,b=s&&e.nodeName.toLowerCase(),v=!l&&!s,w=!1;if(h){if(i){for(;g;){for(u=e;u=u[g];)if(s?u.nodeName.toLowerCase()===b:1===u.nodeType)return!1;f=g="only"===t&&!f&&"nextSibling"}return!0}if(f=[a?h.firstChild:h.lastChild],a&&v){for(w=(m=(c=(d=(p=(u=h)[x]||(u[x]={}))[u.uniqueID]||(p[u.uniqueID]={}))[t]||[])[0]===k&&c[1])&&c[2],u=m&&h.childNodes[m];u=++m&&u&&u[g]||(w=m=0)||f.pop();)if(1===u.nodeType&&++w&&u===e){d[t]=[k,m,w];break}}else if(v&&(w=m=(c=(d=(p=(u=e)[x]||(u[x]={}))[u.uniqueID]||(p[u.uniqueID]={}))[t]||[])[0]===k&&c[1]),!1===w)for(;(u=++m&&u&&u[g]||(w=m=0)||f.pop())&&((s?u.nodeName.toLowerCase()!==b:1!==u.nodeType)||!++w||(v&&((d=(p=u[x]||(u[x]={}))[u.uniqueID]||(p[u.uniqueID]={}))[t]=[k,w]),u!==e)););return(w-=r)===o||w%o==0&&w/o>=0}}},PSEUDO:function(t,e){var n,r=o.pseudos[t]||o.setFilters[t.toLowerCase()]||it.error("unsupported pseudo: "+t);return r[x]?r(e):r.length>1?(n=[t,t,"",e],o.setFilters.hasOwnProperty(t.toLowerCase())?st(function(t,n){for(var o,i=r(t,e),a=i.length;a--;)t[o=j(t,i[a])]=!(n[o]=i[a])}):function(t){return r(t,0,n)}):r}},pseudos:{not:st(function(t){var e=[],n=[],o=s(t.replace(z,"$1"));return o[x]?st(function(t,e,n,r){for(var i,a=o(t,null,r,[]),s=t.length;s--;)(i=a[s])&&(t[s]=!(e[s]=i))}):function(t,r,i){return e[0]=t,o(e,null,i,n),e[0]=null,!n.pop()}}),has:st(function(t){return function(e){return it(t,e).length>0}}),contains:st(function(t){return t=t.replace(J,tt),function(e){return(e.textContent||e.innerText||r(e)).indexOf(t)>-1}}),lang:st(function(t){return G.test(t||"")||it.error("unsupported lang: "+t),t=t.replace(J,tt).toLowerCase(),function(e){var n;do{if(n=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===f},focus:function(t){return t===m.activeElement&&(!m.hasFocus||m.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:mt(!1),disabled:mt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!o.pseudos.empty(t)},header:function(t){return X.test(t.nodeName)},input:function(t){return K.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:ft(function(){return[0]}),last:ft(function(t,e){return[e-1]}),eq:ft(function(t,e,n){return[n<0?n+e:n]}),even:ft(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:ft(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:ft(function(t,e,n){for(var o=n<0?n+e:n;--o>=0;)t.push(o);return t}),gt:ft(function(t,e,n){for(var o=n<0?n+e:n;++o<e;)t.push(o);return t})}}).pseudos.nth=o.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})o.pseudos[e]=ut(e);function ht(){}function bt(t){for(var e=0,n=t.length,o="";e<n;e++)o+=t[e].value;return o}function vt(t,e,n){var o=e.dir,r=e.next,i=r||o,a=n&&"parentNode"===i,s=E++;return e.first?function(e,n,r){for(;e=e[o];)if(1===e.nodeType||a)return t(e,n,r);return!1}:function(e,n,l){var c,d,p,u=[k,s];if(l){for(;e=e[o];)if((1===e.nodeType||a)&&t(e,n,l))return!0}else for(;e=e[o];)if(1===e.nodeType||a)if(d=(p=e[x]||(e[x]={}))[e.uniqueID]||(p[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[o]||e;else{if((c=d[i])&&c[0]===k&&c[1]===s)return u[2]=c[2];if(d[i]=u,u[2]=t(e,n,l))return!0}return!1}}function wt(t){return t.length>1?function(e,n,o){for(var r=t.length;r--;)if(!t[r](e,n,o))return!1;return!0}:t[0]}function xt(t,e,n,o,r){for(var i,a=[],s=0,l=t.length,c=null!=e;s<l;s++)(i=t[s])&&(n&&!n(i,o,r)||(a.push(i),c&&e.push(s)));return a}function yt(t,e,n,o,r,i){return o&&!o[x]&&(o=yt(o)),r&&!r[x]&&(r=yt(r,i)),st(function(i,a,s,l){var c,d,p,u=[],m=[],f=a.length,g=i||function(t,e,n){for(var o=0,r=e.length;o<r;o++)it(t,e[o],n);return n}(e||"*",s.nodeType?[s]:s,[]),h=!t||!i&&e?g:xt(g,u,t,s,l),b=n?r||(i?t:f||o)?[]:a:h;if(n&&n(h,b,s,l),o)for(c=xt(b,m),o(c,[],s,l),d=c.length;d--;)(p=c[d])&&(b[m[d]]=!(h[m[d]]=p));if(i){if(r||t){if(r){for(c=[],d=b.length;d--;)(p=b[d])&&c.push(h[d]=p);r(null,b=[],c,l)}for(d=b.length;d--;)(p=b[d])&&(c=r?j(i,p):u[d])>-1&&(i[c]=!(a[c]=p))}}else b=xt(b===a?b.splice(f,b.length):b),r?r(null,a,b,l):N.apply(a,b)})}function kt(t){for(var e,n,r,i=t.length,a=o.relative[t[0].type],s=a||o.relative[" "],l=a?1:0,d=vt(function(t){return t===e},s,!0),p=vt(function(t){return j(e,t)>-1},s,!0),u=[function(t,n,o){var r=!a&&(o||n!==c)||((e=n).nodeType?d(t,n,o):p(t,n,o));return e=null,r}];l<i;l++)if(n=o.relative[t[l].type])u=[vt(wt(u),n)];else{if((n=o.filter[t[l].type].apply(null,t[l].matches))[x]){for(r=++l;r<i&&!o.relative[t[r].type];r++);return yt(l>1&&wt(u),l>1&&bt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(z,"$1"),n,l<r&&kt(t.slice(l,r)),r<i&&kt(t=t.slice(r)),r<i&&bt(t))}u.push(n)}return wt(u)}return ht.prototype=o.filters=o.pseudos,o.setFilters=new ht,a=it.tokenize=function(t,e){var n,r,i,a,s,l,c,d=T[t+" "];if(d)return e?0:d.slice(0);for(s=t,l=[],c=o.preFilter;s;){for(a in n&&!(r=W.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=F.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(z," ")}),s=s.slice(n.length)),o.filter)!(r=Y[a].exec(s))||c[a]&&!(r=c[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return e?s.length:s?it.error(t):T(t,l).slice(0)},s=it.compile=function(t,e){var n,r=[],i=[],s=C[t+" "];if(!s){for(e||(e=a(t)),n=e.length;n--;)(s=kt(e[n]))[x]?r.push(s):i.push(s);(s=C(t,function(t,e){var n=e.length>0,r=t.length>0,i=function(i,a,s,l,d){var p,f,h,b=0,v="0",w=i&&[],x=[],y=c,E=i||r&&o.find.TAG("*",d),_=k+=null==y?1:Math.random()||.1,T=E.length;for(d&&(c=a===m||a||d);v!==T&&null!=(p=E[v]);v++){if(r&&p){for(f=0,a||p.ownerDocument===m||(u(p),s=!g);h=t[f++];)if(h(p,a||m,s)){l.push(p);break}d&&(k=_)}n&&((p=!h&&p)&&b--,i&&w.push(p))}if(b+=v,n&&v!==b){for(f=0;h=e[f++];)h(w,x,a,s);if(i){if(b>0)for(;v--;)w[v]||x[v]||(x[v]=O.call(l));x=xt(x)}N.apply(l,x),d&&!i&&x.length>0&&b+e.length>1&&it.uniqueSort(l)}return d&&(k=_,c=y),w};return n?st(i):i}(i,r))).selector=t}return s},l=it.select=function(t,e,n,r){var i,l,c,d,p,u="function"==typeof t&&t,m=!r&&a(t=u.selector||t);if(n=n||[],1===m.length){if((l=m[0]=m[0].slice(0)).length>2&&"ID"===(c=l[0]).type&&9===e.nodeType&&g&&o.relative[l[1].type]){if(!(e=(o.find.ID(c.matches[0].replace(J,tt),e)||[])[0]))return n;u&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(i=Y.needsContext.test(t)?0:l.length;i--&&(c=l[i],!o.relative[d=c.type]);)if((p=o.find[d])&&(r=p(c.matches[0].replace(J,tt),Z.test(l[0].type)&&gt(e.parentNode)||e))){if(l.splice(i,1),!(t=r.length&&bt(l)))return N.apply(n,r),n;break}}return(u||s(t,m))(r,e,!g,n,!e||Z.test(t)&&gt(e.parentNode)||e),n},n.sortStable=x.split("").sort(S).join("")===x,n.detectDuplicates=!!p,u(),n.sortDetached=lt(function(t){return 1&t.compareDocumentPosition(m.createElement("fieldset"))}),lt(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||ct("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),n.attributes&&lt(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||ct("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),lt(function(t){return null==t.getAttribute("disabled")})||ct(P,function(t,e,n){var o;if(!n)return!0===t[e]?e.toLowerCase():(o=t.getAttributeNode(e))&&o.specified?o.value:null}),it}(n);E.find=C,E.expr=C.selectors,E.expr[":"]=E.expr.pseudos,E.uniqueSort=E.unique=C.uniqueSort,E.text=C.getText,E.isXMLDoc=C.isXML,E.contains=C.contains,E.escapeSelector=C.escape;var S=function(t,e,n){for(var o=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&E(t).is(n))break;o.push(t)}return o},A=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},D=E.expr.match.needsContext;function O(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var I=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function N(t,e,n){return v(e)?E.grep(t,function(t,o){return!!e.call(t,o,t)!==n}):e.nodeType?E.grep(t,function(t){return t===e!==n}):"string"!=typeof e?E.grep(t,function(t){return p.call(e,t)>-1!==n}):E.filter(e,t,n)}E.filter=function(t,e,n){var o=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===o.nodeType?E.find.matchesSelector(o,t)?[o]:[]:E.find.matches(t,E.grep(e,function(t){return 1===t.nodeType}))},E.fn.extend({find:function(t){var e,n,o=this.length,r=this;if("string"!=typeof t)return this.pushStack(E(t).filter(function(){for(e=0;e<o;e++)if(E.contains(r[e],this))return!0}));for(n=this.pushStack([]),e=0;e<o;e++)E.find(t,r[e],n);return o>1?E.uniqueSort(n):n},filter:function(t){return this.pushStack(N(this,t||[],!1))},not:function(t){return this.pushStack(N(this,t||[],!0))},is:function(t){return!!N(this,"string"==typeof t&&D.test(t)?E(t):t||[],!1).length}});var L,j=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(E.fn.init=function(t,e,n){var o,r;if(!t)return this;if(n=n||L,"string"==typeof t){if(!(o="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:j.exec(t))||!o[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(o[1]){if(e=e instanceof E?e[0]:e,E.merge(this,E.parseHTML(o[1],e&&e.nodeType?e.ownerDocument||e:a,!0)),I.test(o[1])&&E.isPlainObject(e))for(o in e)v(this[o])?this[o](e[o]):this.attr(o,e[o]);return this}return(r=a.getElementById(o[2]))&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):v(t)?void 0!==n.ready?n.ready(t):t(E):E.makeArray(t,this)}).prototype=E.fn,L=E(a);var P=/^(?:parents|prev(?:Until|All))/,R={children:!0,contents:!0,next:!0,prev:!0};function M(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}E.fn.extend({has:function(t){var e=E(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(E.contains(this,e[t]))return!0})},closest:function(t,e){var n,o=0,r=this.length,i=[],a="string"!=typeof t&&E(t);if(!D.test(t))for(;o<r;o++)for(n=this[o];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&E.find.matchesSelector(n,t))){i.push(n);break}return this.pushStack(i.length>1?E.uniqueSort(i):i)},index:function(t){return t?"string"==typeof t?p.call(E(t),this[0]):p.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(E.uniqueSort(E.merge(this.get(),E(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),E.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return S(t,"parentNode")},parentsUntil:function(t,e,n){return S(t,"parentNode",n)},next:function(t){return M(t,"nextSibling")},prev:function(t){return M(t,"previousSibling")},nextAll:function(t){return S(t,"nextSibling")},prevAll:function(t){return S(t,"previousSibling")},nextUntil:function(t,e,n){return S(t,"nextSibling",n)},prevUntil:function(t,e,n){return S(t,"previousSibling",n)},siblings:function(t){return A((t.parentNode||{}).firstChild,t)},children:function(t){return A(t.firstChild)},contents:function(t){return O(t,"iframe")?t.contentDocument:(O(t,"template")&&(t=t.content||t),E.merge([],t.childNodes))}},function(t,e){E.fn[t]=function(n,o){var r=E.map(this,e,n);return"Until"!==t.slice(-5)&&(o=n),o&&"string"==typeof o&&(r=E.filter(o,r)),this.length>1&&(R[t]||E.uniqueSort(r),P.test(t)&&r.reverse()),this.pushStack(r)}});var H=/[^\x20\t\r\n\f]+/g;function B(t){return t}function q(t){throw t}function z(t,e,n,o){var r;try{t&&v(r=t.promise)?r.call(t).done(e).fail(n):t&&v(r=t.then)?r.call(t,e,n):e.apply(void 0,[t].slice(o))}catch(t){n.apply(void 0,[t])}}E.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return E.each(t.match(H)||[],function(t,n){e[n]=!0}),e}(t):E.extend({},t);var e,n,o,r,i=[],a=[],s=-1,l=function(){for(r=r||t.once,o=e=!0;a.length;s=-1)for(n=a.shift();++s<i.length;)!1===i[s].apply(n[0],n[1])&&t.stopOnFalse&&(s=i.length,n=!1);t.memory||(n=!1),e=!1,r&&(i=n?[]:"")},c={add:function(){return i&&(n&&!e&&(s=i.length-1,a.push(n)),function e(n){E.each(n,function(n,o){v(o)?t.unique&&c.has(o)||i.push(o):o&&o.length&&"string"!==k(o)&&e(o)})}(arguments),n&&!e&&l()),this},remove:function(){return E.each(arguments,function(t,e){for(var n;(n=E.inArray(e,i,n))>-1;)i.splice(n,1),n<=s&&s--}),this},has:function(t){return t?E.inArray(t,i)>-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return r=a=[],i=n="",this},disabled:function(){return!i},lock:function(){return r=a=[],n||e||(i=n=""),this},locked:function(){return!!r},fireWith:function(t,n){return r||(n=[t,(n=n||[]).slice?n.slice():n],a.push(n),e||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!o}};return c},E.extend({Deferred:function(t){var e=[["notify","progress",E.Callbacks("memory"),E.Callbacks("memory"),2],["resolve","done",E.Callbacks("once memory"),E.Callbacks("once memory"),0,"resolved"],["reject","fail",E.Callbacks("once memory"),E.Callbacks("once memory"),1,"rejected"]],o="pending",r={state:function(){return o},always:function(){return i.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return E.Deferred(function(n){E.each(e,function(e,o){var r=v(t[o[4]])&&t[o[4]];i[o[1]](function(){var t=r&&r.apply(this,arguments);t&&v(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(t,o,r){var i=0;function a(t,e,o,r){return function(){var s=this,l=arguments,c=function(){var n,c;if(!(t<i)){if((n=o.apply(s,l))===e.promise())throw new TypeError("Thenable self-resolution");c=n&&("object"==typeof n||"function"==typeof n)&&n.then,v(c)?r?c.call(n,a(i,e,B,r),a(i,e,q,r)):(i++,c.call(n,a(i,e,B,r),a(i,e,q,r),a(i,e,B,e.notifyWith))):(o!==B&&(s=void 0,l=[n]),(r||e.resolveWith)(s,l))}},d=r?c:function(){try{c()}catch(n){E.Deferred.exceptionHook&&E.Deferred.exceptionHook(n,d.stackTrace),t+1>=i&&(o!==q&&(s=void 0,l=[n]),e.rejectWith(s,l))}};t?d():(E.Deferred.getStackHook&&(d.stackTrace=E.Deferred.getStackHook()),n.setTimeout(d))}}return E.Deferred(function(n){e[0][3].add(a(0,n,v(r)?r:B,n.notifyWith)),e[1][3].add(a(0,n,v(t)?t:B)),e[2][3].add(a(0,n,v(o)?o:q))}).promise()},promise:function(t){return null!=t?E.extend(t,r):r}},i={};return E.each(e,function(t,n){var a=n[2],s=n[5];r[n[1]]=a.add,s&&a.add(function(){o=s},e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),a.add(n[3].fire),i[n[0]]=function(){return i[n[0]+"With"](this===i?void 0:this,arguments),this},i[n[0]+"With"]=a.fireWith}),r.promise(i),t&&t.call(i,i),i},when:function(t){var e=arguments.length,n=e,o=Array(n),r=l.call(arguments),i=E.Deferred(),a=function(t){return function(n){o[t]=this,r[t]=arguments.length>1?l.call(arguments):n,--e||i.resolveWith(o,r)}};if(e<=1&&(z(t,i.done(a(n)).resolve,i.reject,!e),"pending"===i.state()||v(r[n]&&r[n].then)))return i.then();for(;n--;)z(r[n],a(n),i.reject);return i.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;E.Deferred.exceptionHook=function(t,e){n.console&&n.console.warn&&t&&W.test(t.name)&&n.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},E.readyException=function(t){n.setTimeout(function(){throw t})};var F=E.Deferred();function U(){a.removeEventListener("DOMContentLoaded",U),n.removeEventListener("load",U),E.ready()}E.fn.ready=function(t){return F.then(t).catch(function(t){E.readyException(t)}),this},E.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--E.readyWait:E.isReady)||(E.isReady=!0,!0!==t&&--E.readyWait>0||F.resolveWith(a,[E]))}}),E.ready.then=F.then,"complete"===a.readyState||"loading"!==a.readyState&&!a.documentElement.doScroll?n.setTimeout(E.ready):(a.addEventListener("DOMContentLoaded",U),n.addEventListener("load",U));var V=function(t,e,n,o,r,i,a){var s=0,l=t.length,c=null==n;if("object"===k(n))for(s in r=!0,n)V(t,e,s,n[s],!0,i,a);else if(void 0!==o&&(r=!0,v(o)||(a=!0),c&&(a?(e.call(t,o),e=null):(c=e,e=function(t,e,n){return c.call(E(t),n)})),e))for(;s<l;s++)e(t[s],n,a?o:o.call(t[s],s,e(t[s],n)));return r?t:c?e.call(t):l?e(t[0],n):i},G=/^-ms-/,Y=/-([a-z])/g;function K(t,e){return e.toUpperCase()}function X(t){return t.replace(G,"ms-").replace(Y,K)}var $=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Q(){this.expando=E.expando+Q.uid++}Q.uid=1,Q.prototype={cache:function(t){var e=t[this.expando];return e||(e={},$(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var o,r=this.cache(t);if("string"==typeof e)r[X(e)]=n;else for(o in e)r[X(o)]=e[o];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,o=t[this.expando];if(void 0!==o){if(void 0!==e){n=(e=Array.isArray(e)?e.map(X):(e=X(e))in o?[e]:e.match(H)||[]).length;for(;n--;)delete o[e[n]]}(void 0===e||E.isEmptyObject(o))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!E.isEmptyObject(e)}};var Z=new Q,J=new Q,tt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,et=/[A-Z]/g;function nt(t,e,n){var o;if(void 0===n&&1===t.nodeType)if(o="data-"+e.replace(et,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(o))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:tt.test(t)?JSON.parse(t):t)}(n)}catch(t){}J.set(t,e,n)}else n=void 0;return n}E.extend({hasData:function(t){return J.hasData(t)||Z.hasData(t)},data:function(t,e,n){return J.access(t,e,n)},removeData:function(t,e){J.remove(t,e)},_data:function(t,e,n){return Z.access(t,e,n)},_removeData:function(t,e){Z.remove(t,e)}}),E.fn.extend({data:function(t,e){var n,o,r,i=this[0],a=i&&i.attributes;if(void 0===t){if(this.length&&(r=J.get(i),1===i.nodeType&&!Z.get(i,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&0===(o=a[n].name).indexOf("data-")&&(o=X(o.slice(5)),nt(i,o,r[o]));Z.set(i,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){J.set(this,t)}):V(this,function(e){var n;if(i&&void 0===e)return void 0!==(n=J.get(i,t))?n:void 0!==(n=nt(i,t))?n:void 0;this.each(function(){J.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){J.remove(this,t)})}}),E.extend({queue:function(t,e,n){var o;if(t)return e=(e||"fx")+"queue",o=Z.get(t,e),n&&(!o||Array.isArray(n)?o=Z.access(t,e,E.makeArray(n)):o.push(n)),o||[]},dequeue:function(t,e){e=e||"fx";var n=E.queue(t,e),o=n.length,r=n.shift(),i=E._queueHooks(t,e);"inprogress"===r&&(r=n.shift(),o--),r&&("fx"===e&&n.unshift("inprogress"),delete i.stop,r.call(t,function(){E.dequeue(t,e)},i)),!o&&i&&i.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return Z.get(t,n)||Z.access(t,n,{empty:E.Callbacks("once memory").add(function(){Z.remove(t,[e+"queue",n])})})}}),E.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?E.queue(this[0],t):void 0===e?this:this.each(function(){var n=E.queue(this,t,e);E._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&E.dequeue(this,t)})},dequeue:function(t){return this.each(function(){E.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,o=1,r=E.Deferred(),i=this,a=this.length,s=function(){--o||r.resolveWith(i,[i])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)(n=Z.get(i[a],t+"queueHooks"))&&n.empty&&(o++,n.empty.add(s));return s(),r.promise(e)}});var ot=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rt=new RegExp("^(?:([+-])=|)("+ot+")([a-z%]*)$","i"),it=["Top","Right","Bottom","Left"],at=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&E.contains(t.ownerDocument,t)&&"none"===E.css(t,"display")},st=function(t,e,n,o){var r,i,a={};for(i in e)a[i]=t.style[i],t.style[i]=e[i];for(i in r=n.apply(t,o||[]),e)t.style[i]=a[i];return r};function lt(t,e,n,o){var r,i,a=20,s=o?function(){return o.cur()}:function(){return E.css(t,e,"")},l=s(),c=n&&n[3]||(E.cssNumber[e]?"":"px"),d=(E.cssNumber[e]||"px"!==c&&+l)&&rt.exec(E.css(t,e));if(d&&d[3]!==c){for(l/=2,c=c||d[3],d=+l||1;a--;)E.style(t,e,d+c),(1-i)*(1-(i=s()/l||.5))<=0&&(a=0),d/=i;d*=2,E.style(t,e,d+c),n=n||[]}return n&&(d=+d||+l||0,r=n[1]?d+(n[1]+1)*n[2]:+n[2],o&&(o.unit=c,o.start=d,o.end=r)),r}var ct={};function dt(t){var e,n=t.ownerDocument,o=t.nodeName,r=ct[o];return r||(e=n.body.appendChild(n.createElement(o)),r=E.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),ct[o]=r,r)}function pt(t,e){for(var n,o,r=[],i=0,a=t.length;i<a;i++)(o=t[i]).style&&(n=o.style.display,e?("none"===n&&(r[i]=Z.get(o,"display")||null,r[i]||(o.style.display="")),""===o.style.display&&at(o)&&(r[i]=dt(o))):"none"!==n&&(r[i]="none",Z.set(o,"display",n)));for(i=0;i<a;i++)null!=r[i]&&(t[i].style.display=r[i]);return t}E.fn.extend({show:function(){return pt(this,!0)},hide:function(){return pt(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){at(this)?E(this).show():E(this).hide()})}});var ut=/^(?:checkbox|radio)$/i,mt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ft=/^$|^module$|\/(?:java|ecma)script/i,gt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ht(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&O(t,e)?E.merge([t],n):n}function bt(t,e){for(var n=0,o=t.length;n<o;n++)Z.set(t[n],"globalEval",!e||Z.get(e[n],"globalEval"))}gt.optgroup=gt.option,gt.tbody=gt.tfoot=gt.colgroup=gt.caption=gt.thead,gt.th=gt.td;var vt,wt,xt=/<|&#?\w+;/;function yt(t,e,n,o,r){for(var i,a,s,l,c,d,p=e.createDocumentFragment(),u=[],m=0,f=t.length;m<f;m++)if((i=t[m])||0===i)if("object"===k(i))E.merge(u,i.nodeType?[i]:i);else if(xt.test(i)){for(a=a||p.appendChild(e.createElement("div")),s=(mt.exec(i)||["",""])[1].toLowerCase(),l=gt[s]||gt._default,a.innerHTML=l[1]+E.htmlPrefilter(i)+l[2],d=l[0];d--;)a=a.lastChild;E.merge(u,a.childNodes),(a=p.firstChild).textContent=""}else u.push(e.createTextNode(i));for(p.textContent="",m=0;i=u[m++];)if(o&&E.inArray(i,o)>-1)r&&r.push(i);else if(c=E.contains(i.ownerDocument,i),a=ht(p.appendChild(i),"script"),c&&bt(a),n)for(d=0;i=a[d++];)ft.test(i.type||"")&&n.push(i);return p}vt=a.createDocumentFragment().appendChild(a.createElement("div")),(wt=a.createElement("input")).setAttribute("type","radio"),wt.setAttribute("checked","checked"),wt.setAttribute("name","t"),vt.appendChild(wt),b.checkClone=vt.cloneNode(!0).cloneNode(!0).lastChild.checked,vt.innerHTML="<textarea>x</textarea>",b.noCloneChecked=!!vt.cloneNode(!0).lastChild.defaultValue;var kt=a.documentElement,Et=/^key/,_t=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Tt=/^([^.]*)(?:\.(.+)|)/;function Ct(){return!0}function St(){return!1}function At(){try{return a.activeElement}catch(t){}}function Dt(t,e,n,o,r,i){var a,s;if("object"==typeof e){for(s in"string"!=typeof n&&(o=o||n,n=void 0),e)Dt(t,s,n,o,e[s],i);return t}if(null==o&&null==r?(r=n,o=n=void 0):null==r&&("string"==typeof n?(r=o,o=void 0):(r=o,o=n,n=void 0)),!1===r)r=St;else if(!r)return t;return 1===i&&(a=r,(r=function(t){return E().off(t),a.apply(this,arguments)}).guid=a.guid||(a.guid=E.guid++)),t.each(function(){E.event.add(this,e,r,o,n)})}E.event={global:{},add:function(t,e,n,o,r){var i,a,s,l,c,d,p,u,m,f,g,h=Z.get(t);if(h)for(n.handler&&(n=(i=n).handler,r=i.selector),r&&E.find.matchesSelector(kt,r),n.guid||(n.guid=E.guid++),(l=h.events)||(l=h.events={}),(a=h.handle)||(a=h.handle=function(e){return void 0!==E&&E.event.triggered!==e.type?E.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(H)||[""]).length;c--;)m=g=(s=Tt.exec(e[c])||[])[1],f=(s[2]||"").split(".").sort(),m&&(p=E.event.special[m]||{},m=(r?p.delegateType:p.bindType)||m,p=E.event.special[m]||{},d=E.extend({type:m,origType:g,data:o,handler:n,guid:n.guid,selector:r,needsContext:r&&E.expr.match.needsContext.test(r),namespace:f.join(".")},i),(u=l[m])||((u=l[m]=[]).delegateCount=0,p.setup&&!1!==p.setup.call(t,o,f,a)||t.addEventListener&&t.addEventListener(m,a)),p.add&&(p.add.call(t,d),d.handler.guid||(d.handler.guid=n.guid)),r?u.splice(u.delegateCount++,0,d):u.push(d),E.event.global[m]=!0)},remove:function(t,e,n,o,r){var i,a,s,l,c,d,p,u,m,f,g,h=Z.hasData(t)&&Z.get(t);if(h&&(l=h.events)){for(c=(e=(e||"").match(H)||[""]).length;c--;)if(m=g=(s=Tt.exec(e[c])||[])[1],f=(s[2]||"").split(".").sort(),m){for(p=E.event.special[m]||{},u=l[m=(o?p.delegateType:p.bindType)||m]||[],s=s[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=i=u.length;i--;)d=u[i],!r&&g!==d.origType||n&&n.guid!==d.guid||s&&!s.test(d.namespace)||o&&o!==d.selector&&("**"!==o||!d.selector)||(u.splice(i,1),d.selector&&u.delegateCount--,p.remove&&p.remove.call(t,d));a&&!u.length&&(p.teardown&&!1!==p.teardown.call(t,f,h.handle)||E.removeEvent(t,m,h.handle),delete l[m])}else for(m in l)E.event.remove(t,m+e[c],n,o,!0);E.isEmptyObject(l)&&Z.remove(t,"handle events")}},dispatch:function(t){var e,n,o,r,i,a,s=E.event.fix(t),l=new Array(arguments.length),c=(Z.get(this,"events")||{})[s.type]||[],d=E.event.special[s.type]||{};for(l[0]=s,e=1;e<arguments.length;e++)l[e]=arguments[e];if(s.delegateTarget=this,!d.preDispatch||!1!==d.preDispatch.call(this,s)){for(a=E.event.handlers.call(this,s,c),e=0;(r=a[e++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(i=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(i.namespace)||(s.handleObj=i,s.data=i.data,void 0!==(o=((E.event.special[i.origType]||{}).handle||i.handler).apply(r.elem,l))&&!1===(s.result=o)&&(s.preventDefault(),s.stopPropagation()));return d.postDispatch&&d.postDispatch.call(this,s),s.result}},handlers:function(t,e){var n,o,r,i,a,s=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(i=[],a={},n=0;n<l;n++)void 0===a[r=(o=e[n]).selector+" "]&&(a[r]=o.needsContext?E(r,this).index(c)>-1:E.find(r,this,null,[c]).length),a[r]&&i.push(o);i.length&&s.push({elem:c,handlers:i})}return c=this,l<e.length&&s.push({elem:c,handlers:e.slice(l)}),s},addProp:function(t,e){Object.defineProperty(E.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[E.expando]?t:new E.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==At()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===At()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&O(this,"input"))return this.click(),!1},_default:function(t){return O(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},E.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},E.Event=function(t,e){if(!(this instanceof E.Event))return new E.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?Ct:St,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&E.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[E.expando]=!0},E.Event.prototype={constructor:E.Event,isDefaultPrevented:St,isPropagationStopped:St,isImmediatePropagationStopped:St,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=Ct,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=Ct,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=Ct,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},E.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Et.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&_t.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},E.event.addProp),E.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){E.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,o=t.relatedTarget,r=t.handleObj;return o&&(o===this||E.contains(this,o))||(t.type=r.origType,n=r.handler.apply(this,arguments),t.type=e),n}}}),E.fn.extend({on:function(t,e,n,o){return Dt(this,t,e,n,o)},one:function(t,e,n,o){return Dt(this,t,e,n,o,1)},off:function(t,e,n){var o,r;if(t&&t.preventDefault&&t.handleObj)return o=t.handleObj,E(t.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=St),this.each(function(){E.event.remove(this,t,n,e)})}});var Ot=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,It=/<script|<style|<link/i,Nt=/checked\s*(?:[^=]|=\s*.checked.)/i,Lt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function jt(t,e){return O(t,"table")&&O(11!==e.nodeType?e:e.firstChild,"tr")&&E(t).children("tbody")[0]||t}function Pt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Rt(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Mt(t,e){var n,o,r,i,a,s,l,c;if(1===e.nodeType){if(Z.hasData(t)&&(i=Z.access(t),a=Z.set(e,i),c=i.events))for(r in delete a.handle,a.events={},c)for(n=0,o=c[r].length;n<o;n++)E.event.add(e,r,c[r][n]);J.hasData(t)&&(s=J.access(t),l=E.extend({},s),J.set(e,l))}}function Ht(t,e,n,o){e=c.apply([],e);var r,i,a,s,l,d,p=0,u=t.length,m=u-1,f=e[0],g=v(f);if(g||u>1&&"string"==typeof f&&!b.checkClone&&Nt.test(f))return t.each(function(r){var i=t.eq(r);g&&(e[0]=f.call(this,r,i.html())),Ht(i,e,n,o)});if(u&&(i=(r=yt(e,t[0].ownerDocument,!1,t,o)).firstChild,1===r.childNodes.length&&(r=i),i||o)){for(s=(a=E.map(ht(r,"script"),Pt)).length;p<u;p++)l=r,p!==m&&(l=E.clone(l,!0,!0),s&&E.merge(a,ht(l,"script"))),n.call(t[p],l,p);if(s)for(d=a[a.length-1].ownerDocument,E.map(a,Rt),p=0;p<s;p++)l=a[p],ft.test(l.type||"")&&!Z.access(l,"globalEval")&&E.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?E._evalUrl&&E._evalUrl(l.src):y(l.textContent.replace(Lt,""),d,l))}return t}function Bt(t,e,n){for(var o,r=e?E.filter(e,t):t,i=0;null!=(o=r[i]);i++)n||1!==o.nodeType||E.cleanData(ht(o)),o.parentNode&&(n&&E.contains(o.ownerDocument,o)&&bt(ht(o,"script")),o.parentNode.removeChild(o));return t}E.extend({htmlPrefilter:function(t){return t.replace(Ot,"<$1></$2>")},clone:function(t,e,n){var o,r,i,a,s,l,c,d=t.cloneNode(!0),p=E.contains(t.ownerDocument,t);if(!(b.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||E.isXMLDoc(t)))for(a=ht(d),o=0,r=(i=ht(t)).length;o<r;o++)s=i[o],l=a[o],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&ut.test(s.type)?l.checked=s.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=s.defaultValue);if(e)if(n)for(i=i||ht(t),a=a||ht(d),o=0,r=i.length;o<r;o++)Mt(i[o],a[o]);else Mt(t,d);return(a=ht(d,"script")).length>0&&bt(a,!p&&ht(t,"script")),d},cleanData:function(t){for(var e,n,o,r=E.event.special,i=0;void 0!==(n=t[i]);i++)if($(n)){if(e=n[Z.expando]){if(e.events)for(o in e.events)r[o]?E.event.remove(n,o):E.removeEvent(n,o,e.handle);n[Z.expando]=void 0}n[J.expando]&&(n[J.expando]=void 0)}}}),E.fn.extend({detach:function(t){return Bt(this,t,!0)},remove:function(t){return Bt(this,t)},text:function(t){return V(this,function(t){return void 0===t?E.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return Ht(this,arguments,function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||jt(this,t).appendChild(t)})},prepend:function(){return Ht(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=jt(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return Ht(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return Ht(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(E.cleanData(ht(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return E.clone(this,t,e)})},html:function(t){return V(this,function(t){var e=this[0]||{},n=0,o=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!It.test(t)&&!gt[(mt.exec(t)||["",""])[1].toLowerCase()]){t=E.htmlPrefilter(t);try{for(;n<o;n++)1===(e=this[n]||{}).nodeType&&(E.cleanData(ht(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return Ht(this,arguments,function(e){var n=this.parentNode;E.inArray(this,t)<0&&(E.cleanData(ht(this)),n&&n.replaceChild(e,this))},t)}}),E.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){E.fn[t]=function(t){for(var n,o=[],r=E(t),i=r.length-1,a=0;a<=i;a++)n=a===i?this:this.clone(!0),E(r[a])[e](n),d.apply(o,n.get());return this.pushStack(o)}});var qt=new RegExp("^("+ot+")(?!px)[a-z%]+$","i"),zt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=n),e.getComputedStyle(t)},Wt=new RegExp(it.join("|"),"i");function Ft(t,e,n){var o,r,i,a,s=t.style;return(n=n||zt(t))&&(""!==(a=n.getPropertyValue(e)||n[e])||E.contains(t.ownerDocument,t)||(a=E.style(t,e)),!b.pixelBoxStyles()&&qt.test(a)&&Wt.test(e)&&(o=s.width,r=s.minWidth,i=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=o,s.minWidth=r,s.maxWidth=i)),void 0!==a?a+"":a}function Ut(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(d){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",d.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",kt.appendChild(c).appendChild(d);var t=n.getComputedStyle(d);o="1%"!==t.top,l=12===e(t.marginLeft),d.style.right="60%",s=36===e(t.right),r=36===e(t.width),d.style.position="absolute",i=36===d.offsetWidth||"absolute",kt.removeChild(c),d=null}}function e(t){return Math.round(parseFloat(t))}var o,r,i,s,l,c=a.createElement("div"),d=a.createElement("div");d.style&&(d.style.backgroundClip="content-box",d.cloneNode(!0).style.backgroundClip="",b.clearCloneStyle="content-box"===d.style.backgroundClip,E.extend(b,{boxSizingReliable:function(){return t(),r},pixelBoxStyles:function(){return t(),s},pixelPosition:function(){return t(),o},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),i}}))}();var Vt=/^(none|table(?!-c[ea]).+)/,Gt=/^--/,Yt={position:"absolute",visibility:"hidden",display:"block"},Kt={letterSpacing:"0",fontWeight:"400"},Xt=["Webkit","Moz","ms"],$t=a.createElement("div").style;function Qt(t){var e=E.cssProps[t];return e||(e=E.cssProps[t]=function(t){if(t in $t)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=Xt.length;n--;)if((t=Xt[n]+e)in $t)return t}(t)||t),e}function Zt(t,e,n){var o=rt.exec(e);return o?Math.max(0,o[2]-(n||0))+(o[3]||"px"):e}function Jt(t,e,n,o,r,i){var a="width"===e?1:0,s=0,l=0;if(n===(o?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=E.css(t,n+it[a],!0,r)),o?("content"===n&&(l-=E.css(t,"padding"+it[a],!0,r)),"margin"!==n&&(l-=E.css(t,"border"+it[a]+"Width",!0,r))):(l+=E.css(t,"padding"+it[a],!0,r),"padding"!==n?l+=E.css(t,"border"+it[a]+"Width",!0,r):s+=E.css(t,"border"+it[a]+"Width",!0,r));return!o&&i>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-i-l-s-.5))),l}function te(t,e,n){var o=zt(t),r=Ft(t,e,o),i="border-box"===E.css(t,"boxSizing",!1,o),a=i;if(qt.test(r)){if(!n)return r;r="auto"}return a=a&&(b.boxSizingReliable()||r===t.style[e]),("auto"===r||!parseFloat(r)&&"inline"===E.css(t,"display",!1,o))&&(r=t["offset"+e[0].toUpperCase()+e.slice(1)],a=!0),(r=parseFloat(r)||0)+Jt(t,e,n||(i?"border":"content"),a,o,r)+"px"}function ee(t,e,n,o,r){return new ee.prototype.init(t,e,n,o,r)}E.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=Ft(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,o){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,i,a,s=X(e),l=Gt.test(e),c=t.style;if(l||(e=Qt(s)),a=E.cssHooks[e]||E.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(r=a.get(t,!1,o))?r:c[e];"string"===(i=typeof n)&&(r=rt.exec(n))&&r[1]&&(n=lt(t,e,r),i="number"),null!=n&&n==n&&("number"===i&&(n+=r&&r[3]||(E.cssNumber[s]?"":"px")),b.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,o))||(l?c.setProperty(e,n):c[e]=n))}},css:function(t,e,n,o){var r,i,a,s=X(e);return Gt.test(e)||(e=Qt(s)),(a=E.cssHooks[e]||E.cssHooks[s])&&"get"in a&&(r=a.get(t,!0,n)),void 0===r&&(r=Ft(t,e,o)),"normal"===r&&e in Kt&&(r=Kt[e]),""===n||n?(i=parseFloat(r),!0===n||isFinite(i)?i||0:r):r}}),E.each(["height","width"],function(t,e){E.cssHooks[e]={get:function(t,n,o){if(n)return!Vt.test(E.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?te(t,e,o):st(t,Yt,function(){return te(t,e,o)})},set:function(t,n,o){var r,i=zt(t),a="border-box"===E.css(t,"boxSizing",!1,i),s=o&&Jt(t,e,o,a,i);return a&&b.scrollboxSize()===i.position&&(s-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(i[e])-Jt(t,e,"border",!1,i)-.5)),s&&(r=rt.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=E.css(t,e)),Zt(0,n,s)}}}),E.cssHooks.marginLeft=Ut(b.reliableMarginLeft,function(t,e){if(e)return(parseFloat(Ft(t,"marginLeft"))||t.getBoundingClientRect().left-st(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),E.each({margin:"",padding:"",border:"Width"},function(t,e){E.cssHooks[t+e]={expand:function(n){for(var o=0,r={},i="string"==typeof n?n.split(" "):[n];o<4;o++)r[t+it[o]+e]=i[o]||i[o-2]||i[0];return r}},"margin"!==t&&(E.cssHooks[t+e].set=Zt)}),E.fn.extend({css:function(t,e){return V(this,function(t,e,n){var o,r,i={},a=0;if(Array.isArray(e)){for(o=zt(t),r=e.length;a<r;a++)i[e[a]]=E.css(t,e[a],!1,o);return i}return void 0!==n?E.style(t,e,n):E.css(t,e)},t,e,arguments.length>1)}}),E.Tween=ee,ee.prototype={constructor:ee,init:function(t,e,n,o,r,i){this.elem=t,this.prop=n,this.easing=r||E.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=o,this.unit=i||(E.cssNumber[n]?"":"px")},cur:function(){var t=ee.propHooks[this.prop];return t&&t.get?t.get(this):ee.propHooks._default.get(this)},run:function(t){var e,n=ee.propHooks[this.prop];return this.options.duration?this.pos=e=E.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ee.propHooks._default.set(this),this}},ee.prototype.init.prototype=ee.prototype,ee.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=E.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){E.fx.step[t.prop]?E.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[E.cssProps[t.prop]]&&!E.cssHooks[t.prop]?t.elem[t.prop]=t.now:E.style(t.elem,t.prop,t.now+t.unit)}}},ee.propHooks.scrollTop=ee.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},E.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},E.fx=ee.prototype.init,E.fx.step={};var ne,oe,re=/^(?:toggle|show|hide)$/,ie=/queueHooks$/;function ae(){oe&&(!1===a.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(ae):n.setTimeout(ae,E.fx.interval),E.fx.tick())}function se(){return n.setTimeout(function(){ne=void 0}),ne=Date.now()}function le(t,e){var n,o=0,r={height:t};for(e=e?1:0;o<4;o+=2-e)r["margin"+(n=it[o])]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function ce(t,e,n){for(var o,r=(de.tweeners[e]||[]).concat(de.tweeners["*"]),i=0,a=r.length;i<a;i++)if(o=r[i].call(n,e,t))return o}function de(t,e,n){var o,r,i=0,a=de.prefilters.length,s=E.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ne||se(),n=Math.max(0,c.startTime+c.duration-e),o=1-(n/c.duration||0),i=0,a=c.tweens.length;i<a;i++)c.tweens[i].run(o);return s.notifyWith(t,[c,o,n]),o<1&&a?n:(a||s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c]),!1)},c=s.promise({elem:t,props:E.extend({},e),opts:E.extend(!0,{specialEasing:{},easing:E.easing._default},n),originalProperties:e,originalOptions:n,startTime:ne||se(),duration:n.duration,tweens:[],createTween:function(e,n){var o=E.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(o),o},stop:function(e){var n=0,o=e?c.tweens.length:0;if(r)return this;for(r=!0;n<o;n++)c.tweens[n].run(1);return e?(s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c,e])):s.rejectWith(t,[c,e]),this}}),d=c.props;for(!function(t,e){var n,o,r,i,a;for(n in t)if(r=e[o=X(n)],i=t[n],Array.isArray(i)&&(r=i[1],i=t[n]=i[0]),n!==o&&(t[o]=i,delete t[n]),(a=E.cssHooks[o])&&"expand"in a)for(n in i=a.expand(i),delete t[o],i)n in t||(t[n]=i[n],e[n]=r);else e[o]=r}(d,c.opts.specialEasing);i<a;i++)if(o=de.prefilters[i].call(c,t,d,c.opts))return v(o.stop)&&(E._queueHooks(c.elem,c.opts.queue).stop=o.stop.bind(o)),o;return E.map(d,ce,c),v(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),E.fx.timer(E.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}E.Animation=E.extend(de,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return lt(n.elem,t,rt.exec(e),n),n}]},tweener:function(t,e){v(t)?(e=t,t=["*"]):t=t.match(H);for(var n,o=0,r=t.length;o<r;o++)n=t[o],de.tweeners[n]=de.tweeners[n]||[],de.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var o,r,i,a,s,l,c,d,p="width"in e||"height"in e,u=this,m={},f=t.style,g=t.nodeType&&at(t),h=Z.get(t,"fxshow");for(o in n.queue||(null==(a=E._queueHooks(t,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,u.always(function(){u.always(function(){a.unqueued--,E.queue(t,"fx").length||a.empty.fire()})})),e)if(r=e[o],re.test(r)){if(delete e[o],i=i||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!h||void 0===h[o])continue;g=!0}m[o]=h&&h[o]||E.style(t,o)}if((l=!E.isEmptyObject(e))||!E.isEmptyObject(m))for(o in p&&1===t.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=h&&h.display)&&(c=Z.get(t,"display")),"none"===(d=E.css(t,"display"))&&(c?d=c:(pt([t],!0),c=t.style.display||c,d=E.css(t,"display"),pt([t]))),("inline"===d||"inline-block"===d&&null!=c)&&"none"===E.css(t,"float")&&(l||(u.done(function(){f.display=c}),null==c&&(d=f.display,c="none"===d?"":d)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",u.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,m)l||(h?"hidden"in h&&(g=h.hidden):h=Z.access(t,"fxshow",{display:c}),i&&(h.hidden=!g),g&&pt([t],!0),u.done(function(){for(o in g||pt([t]),Z.remove(t,"fxshow"),m)E.style(t,o,m[o])})),l=ce(g?h[o]:0,o,u),o in h||(h[o]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?de.prefilters.unshift(t):de.prefilters.push(t)}}),E.speed=function(t,e,n){var o=t&&"object"==typeof t?E.extend({},t):{complete:n||!n&&e||v(t)&&t,duration:t,easing:n&&e||e&&!v(e)&&e};return E.fx.off?o.duration=0:"number"!=typeof o.duration&&(o.duration in E.fx.speeds?o.duration=E.fx.speeds[o.duration]:o.duration=E.fx.speeds._default),null!=o.queue&&!0!==o.queue||(o.queue="fx"),o.old=o.complete,o.complete=function(){v(o.old)&&o.old.call(this),o.queue&&E.dequeue(this,o.queue)},o},E.fn.extend({fadeTo:function(t,e,n,o){return this.filter(at).css("opacity",0).show().end().animate({opacity:e},t,n,o)},animate:function(t,e,n,o){var r=E.isEmptyObject(t),i=E.speed(e,n,o),a=function(){var e=de(this,E.extend({},t),i);(r||Z.get(this,"finish"))&&e.stop(!0)};return a.finish=a,r||!1===i.queue?this.each(a):this.queue(i.queue,a)},stop:function(t,e,n){var o=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&!1!==t&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",i=E.timers,a=Z.get(this);if(r)a[r]&&a[r].stop&&o(a[r]);else for(r in a)a[r]&&a[r].stop&&ie.test(r)&&o(a[r]);for(r=i.length;r--;)i[r].elem!==this||null!=t&&i[r].queue!==t||(i[r].anim.stop(n),e=!1,i.splice(r,1));!e&&n||E.dequeue(this,t)})},finish:function(t){return!1!==t&&(t=t||"fx"),this.each(function(){var e,n=Z.get(this),o=n[t+"queue"],r=n[t+"queueHooks"],i=E.timers,a=o?o.length:0;for(n.finish=!0,E.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===t&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<a;e++)o[e]&&o[e].finish&&o[e].finish.call(this);delete n.finish})}}),E.each(["toggle","show","hide"],function(t,e){var n=E.fn[e];E.fn[e]=function(t,o,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(le(e,!0),t,o,r)}}),E.each({slideDown:le("show"),slideUp:le("hide"),slideToggle:le("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){E.fn[t]=function(t,n,o){return this.animate(e,t,n,o)}}),E.timers=[],E.fx.tick=function(){var t,e=0,n=E.timers;for(ne=Date.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||E.fx.stop(),ne=void 0},E.fx.timer=function(t){E.timers.push(t),E.fx.start()},E.fx.interval=13,E.fx.start=function(){oe||(oe=!0,ae())},E.fx.stop=function(){oe=null},E.fx.speeds={slow:600,fast:200,_default:400},E.fn.delay=function(t,e){return t=E.fx&&E.fx.speeds[t]||t,e=e||"fx",this.queue(e,function(e,o){var r=n.setTimeout(e,t);o.stop=function(){n.clearTimeout(r)}})},function(){var t=a.createElement("input"),e=a.createElement("select").appendChild(a.createElement("option"));t.type="checkbox",b.checkOn=""!==t.value,b.optSelected=e.selected,(t=a.createElement("input")).value="t",t.type="radio",b.radioValue="t"===t.value}();var pe,ue=E.expr.attrHandle;E.fn.extend({attr:function(t,e){return V(this,E.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){E.removeAttr(this,t)})}}),E.extend({attr:function(t,e,n){var o,r,i=t.nodeType;if(3!==i&&8!==i&&2!==i)return void 0===t.getAttribute?E.prop(t,e,n):(1===i&&E.isXMLDoc(t)||(r=E.attrHooks[e.toLowerCase()]||(E.expr.match.bool.test(e)?pe:void 0)),void 0!==n?null===n?void E.removeAttr(t,e):r&&"set"in r&&void 0!==(o=r.set(t,n,e))?o:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(o=r.get(t,e))?o:null==(o=E.find.attr(t,e))?void 0:o)},attrHooks:{type:{set:function(t,e){if(!b.radioValue&&"radio"===e&&O(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,o=0,r=e&&e.match(H);if(r&&1===t.nodeType)for(;n=r[o++];)t.removeAttribute(n)}}),pe={set:function(t,e,n){return!1===e?E.removeAttr(t,n):t.setAttribute(n,n),n}},E.each(E.expr.match.bool.source.match(/\w+/g),function(t,e){var n=ue[e]||E.find.attr;ue[e]=function(t,e,o){var r,i,a=e.toLowerCase();return o||(i=ue[a],ue[a]=r,r=null!=n(t,e,o)?a:null,ue[a]=i),r}});var me=/^(?:input|select|textarea|button)$/i,fe=/^(?:a|area)$/i;function ge(t){return(t.match(H)||[]).join(" ")}function he(t){return t.getAttribute&&t.getAttribute("class")||""}function be(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(H)||[]}E.fn.extend({prop:function(t,e){return V(this,E.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[E.propFix[t]||t]})}}),E.extend({prop:function(t,e,n){var o,r,i=t.nodeType;if(3!==i&&8!==i&&2!==i)return 1===i&&E.isXMLDoc(t)||(e=E.propFix[e]||e,r=E.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(o=r.set(t,n,e))?o:t[e]=n:r&&"get"in r&&null!==(o=r.get(t,e))?o:t[e]},propHooks:{tabIndex:{get:function(t){var e=E.find.attr(t,"tabindex");return e?parseInt(e,10):me.test(t.nodeName)||fe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),b.optSelected||(E.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),E.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){E.propFix[this.toLowerCase()]=this}),E.fn.extend({addClass:function(t){var e,n,o,r,i,a,s,l=0;if(v(t))return this.each(function(e){E(this).addClass(t.call(this,e,he(this)))});if((e=be(t)).length)for(;n=this[l++];)if(r=he(n),o=1===n.nodeType&&" "+ge(r)+" "){for(a=0;i=e[a++];)o.indexOf(" "+i+" ")<0&&(o+=i+" ");r!==(s=ge(o))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,o,r,i,a,s,l=0;if(v(t))return this.each(function(e){E(this).removeClass(t.call(this,e,he(this)))});if(!arguments.length)return this.attr("class","");if((e=be(t)).length)for(;n=this[l++];)if(r=he(n),o=1===n.nodeType&&" "+ge(r)+" "){for(a=0;i=e[a++];)for(;o.indexOf(" "+i+" ")>-1;)o=o.replace(" "+i+" "," ");r!==(s=ge(o))&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t,o="string"===n||Array.isArray(t);return"boolean"==typeof e&&o?e?this.addClass(t):this.removeClass(t):v(t)?this.each(function(n){E(this).toggleClass(t.call(this,n,he(this),e),e)}):this.each(function(){var e,r,i,a;if(o)for(r=0,i=E(this),a=be(t);e=a[r++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==t&&"boolean"!==n||((e=he(this))&&Z.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":Z.get(this,"__className__")||""))})},hasClass:function(t){var e,n,o=0;for(e=" "+t+" ";n=this[o++];)if(1===n.nodeType&&(" "+ge(he(n))+" ").indexOf(e)>-1)return!0;return!1}});var ve=/\r/g;E.fn.extend({val:function(t){var e,n,o,r=this[0];return arguments.length?(o=v(t),this.each(function(n){var r;1===this.nodeType&&(null==(r=o?t.call(this,n,E(this).val()):t)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=E.map(r,function(t){return null==t?"":t+""})),(e=E.valHooks[this.type]||E.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=E.valHooks[r.type]||E.valHooks[r.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:"string"==typeof(n=r.value)?n.replace(ve,""):null==n?"":n:void 0}}),E.extend({valHooks:{option:{get:function(t){var e=E.find.attr(t,"value");return null!=e?e:ge(E.text(t))}},select:{get:function(t){var e,n,o,r=t.options,i=t.selectedIndex,a="select-one"===t.type,s=a?null:[],l=a?i+1:r.length;for(o=i<0?l:a?i:0;o<l;o++)if(((n=r[o]).selected||o===i)&&!n.disabled&&(!n.parentNode.disabled||!O(n.parentNode,"optgroup"))){if(e=E(n).val(),a)return e;s.push(e)}return s},set:function(t,e){for(var n,o,r=t.options,i=E.makeArray(e),a=r.length;a--;)((o=r[a]).selected=E.inArray(E.valHooks.option.get(o),i)>-1)&&(n=!0);return n||(t.selectedIndex=-1),i}}}}),E.each(["radio","checkbox"],function(){E.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=E.inArray(E(t).val(),e)>-1}},b.checkOn||(E.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),b.focusin="onfocusin"in n;var we=/^(?:focusinfocus|focusoutblur)$/,xe=function(t){t.stopPropagation()};E.extend(E.event,{trigger:function(t,e,o,r){var i,s,l,c,d,p,u,m,g=[o||a],h=f.call(t,"type")?t.type:t,b=f.call(t,"namespace")?t.namespace.split("."):[];if(s=m=l=o=o||a,3!==o.nodeType&&8!==o.nodeType&&!we.test(h+E.event.triggered)&&(h.indexOf(".")>-1&&(b=h.split("."),h=b.shift(),b.sort()),d=h.indexOf(":")<0&&"on"+h,(t=t[E.expando]?t:new E.Event(h,"object"==typeof t&&t)).isTrigger=r?2:3,t.namespace=b.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=o),e=null==e?[t]:E.makeArray(e,[t]),u=E.event.special[h]||{},r||!u.trigger||!1!==u.trigger.apply(o,e))){if(!r&&!u.noBubble&&!w(o)){for(c=u.delegateType||h,we.test(c+h)||(s=s.parentNode);s;s=s.parentNode)g.push(s),l=s;l===(o.ownerDocument||a)&&g.push(l.defaultView||l.parentWindow||n)}for(i=0;(s=g[i++])&&!t.isPropagationStopped();)m=s,t.type=i>1?c:u.bindType||h,(p=(Z.get(s,"events")||{})[t.type]&&Z.get(s,"handle"))&&p.apply(s,e),(p=d&&s[d])&&p.apply&&$(s)&&(t.result=p.apply(s,e),!1===t.result&&t.preventDefault());return t.type=h,r||t.isDefaultPrevented()||u._default&&!1!==u._default.apply(g.pop(),e)||!$(o)||d&&v(o[h])&&!w(o)&&((l=o[d])&&(o[d]=null),E.event.triggered=h,t.isPropagationStopped()&&m.addEventListener(h,xe),o[h](),t.isPropagationStopped()&&m.removeEventListener(h,xe),E.event.triggered=void 0,l&&(o[d]=l)),t.result}},simulate:function(t,e,n){var o=E.extend(new E.Event,n,{type:t,isSimulated:!0});E.event.trigger(o,null,e)}}),E.fn.extend({trigger:function(t,e){return this.each(function(){E.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return E.event.trigger(t,e,n,!0)}}),b.focusin||E.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){E.event.simulate(e,t.target,E.event.fix(t))};E.event.special[e]={setup:function(){var o=this.ownerDocument||this,r=Z.access(o,e);r||o.addEventListener(t,n,!0),Z.access(o,e,(r||0)+1)},teardown:function(){var o=this.ownerDocument||this,r=Z.access(o,e)-1;r?Z.access(o,e,r):(o.removeEventListener(t,n,!0),Z.remove(o,e))}}});var ye=n.location,ke=Date.now(),Ee=/\?/;E.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new n.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||E.error("Invalid XML: "+t),e};var _e=/\[\]$/,Te=/\r?\n/g,Ce=/^(?:submit|button|image|reset|file)$/i,Se=/^(?:input|select|textarea|keygen)/i;function Ae(t,e,n,o){var r;if(Array.isArray(e))E.each(e,function(e,r){n||_e.test(t)?o(t,r):Ae(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,n,o)});else if(n||"object"!==k(e))o(t,e);else for(r in e)Ae(t+"["+r+"]",e[r],n,o)}E.param=function(t,e){var n,o=[],r=function(t,e){var n=v(e)?e():e;o[o.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(t)||t.jquery&&!E.isPlainObject(t))E.each(t,function(){r(this.name,this.value)});else for(n in t)Ae(n,t[n],e,r);return o.join("&")},E.fn.extend({serialize:function(){return E.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=E.prop(this,"elements");return t?E.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!E(this).is(":disabled")&&Se.test(this.nodeName)&&!Ce.test(t)&&(this.checked||!ut.test(t))}).map(function(t,e){var n=E(this).val();return null==n?null:Array.isArray(n)?E.map(n,function(t){return{name:e.name,value:t.replace(Te,"\r\n")}}):{name:e.name,value:n.replace(Te,"\r\n")}}).get()}});var De=/%20/g,Oe=/#.*$/,Ie=/([?&])_=[^&]*/,Ne=/^(.*?):[ \t]*([^\r\n]*)$/gm,Le=/^(?:GET|HEAD)$/,je=/^\/\//,Pe={},Re={},Me="*/".concat("*"),He=a.createElement("a");function Be(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var o,r=0,i=e.toLowerCase().match(H)||[];if(v(n))for(;o=i[r++];)"+"===o[0]?(o=o.slice(1)||"*",(t[o]=t[o]||[]).unshift(n)):(t[o]=t[o]||[]).push(n)}}function qe(t,e,n,o){var r={},i=t===Re;function a(s){var l;return r[s]=!0,E.each(t[s]||[],function(t,s){var c=s(e,n,o);return"string"!=typeof c||i||r[c]?i?!(l=c):void 0:(e.dataTypes.unshift(c),a(c),!1)}),l}return a(e.dataTypes[0])||!r["*"]&&a("*")}function ze(t,e){var n,o,r=E.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:o||(o={}))[n]=e[n]);return o&&E.extend(!0,t,o),t}He.href=ye.href,E.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ye.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ye.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Me,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":E.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?ze(ze(t,E.ajaxSettings),e):ze(E.ajaxSettings,t)},ajaxPrefilter:Be(Pe),ajaxTransport:Be(Re),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var o,r,i,s,l,c,d,p,u,m,f=E.ajaxSetup({},e),g=f.context||f,h=f.context&&(g.nodeType||g.jquery)?E(g):E.event,b=E.Deferred(),v=E.Callbacks("once memory"),w=f.statusCode||{},x={},y={},k="canceled",_={readyState:0,getResponseHeader:function(t){var e;if(d){if(!s)for(s={};e=Ne.exec(i);)s[e[1].toLowerCase()]=e[2];e=s[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return d?i:null},setRequestHeader:function(t,e){return null==d&&(t=y[t.toLowerCase()]=y[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==d&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(d)_.always(t[_.status]);else for(e in t)w[e]=[w[e],t[e]];return this},abort:function(t){var e=t||k;return o&&o.abort(e),T(0,e),this}};if(b.promise(_),f.url=((t||f.url||ye.href)+"").replace(je,ye.protocol+"//"),f.type=e.method||e.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(H)||[""],null==f.crossDomain){c=a.createElement("a");try{c.href=f.url,c.href=c.href,f.crossDomain=He.protocol+"//"+He.host!=c.protocol+"//"+c.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=E.param(f.data,f.traditional)),qe(Pe,f,e,_),d)return _;for(u in(p=E.event&&f.global)&&0==E.active++&&E.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Le.test(f.type),r=f.url.replace(Oe,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(De,"+")):(m=f.url.slice(r.length),f.data&&(f.processData||"string"==typeof f.data)&&(r+=(Ee.test(r)?"&":"?")+f.data,delete f.data),!1===f.cache&&(r=r.replace(Ie,"$1"),m=(Ee.test(r)?"&":"?")+"_="+ke+++m),f.url=r+m),f.ifModified&&(E.lastModified[r]&&_.setRequestHeader("If-Modified-Since",E.lastModified[r]),E.etag[r]&&_.setRequestHeader("If-None-Match",E.etag[r])),(f.data&&f.hasContent&&!1!==f.contentType||e.contentType)&&_.setRequestHeader("Content-Type",f.contentType),_.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Me+"; q=0.01":""):f.accepts["*"]),f.headers)_.setRequestHeader(u,f.headers[u]);if(f.beforeSend&&(!1===f.beforeSend.call(g,_,f)||d))return _.abort();if(k="abort",v.add(f.complete),_.done(f.success),_.fail(f.error),o=qe(Re,f,e,_)){if(_.readyState=1,p&&h.trigger("ajaxSend",[_,f]),d)return _;f.async&&f.timeout>0&&(l=n.setTimeout(function(){_.abort("timeout")},f.timeout));try{d=!1,o.send(x,T)}catch(t){if(d)throw t;T(-1,t)}}else T(-1,"No Transport");function T(t,e,a,s){var c,u,m,x,y,k=e;d||(d=!0,l&&n.clearTimeout(l),o=void 0,i=s||"",_.readyState=t>0?4:0,c=t>=200&&t<300||304===t,a&&(x=function(t,e,n){for(var o,r,i,a,s=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===o&&(o=t.mimeType||e.getResponseHeader("Content-Type"));if(o)for(r in s)if(s[r]&&s[r].test(o)){l.unshift(r);break}if(l[0]in n)i=l[0];else{for(r in n){if(!l[0]||t.converters[r+" "+l[0]]){i=r;break}a||(a=r)}i=i||a}if(i)return i!==l[0]&&l.unshift(i),n[i]}(f,_,a)),x=function(t,e,n,o){var r,i,a,s,l,c={},d=t.dataTypes.slice();if(d[1])for(a in t.converters)c[a.toLowerCase()]=t.converters[a];for(i=d.shift();i;)if(t.responseFields[i]&&(n[t.responseFields[i]]=e),!l&&o&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=i,i=d.shift())if("*"===i)i=l;else if("*"!==l&&l!==i){if(!(a=c[l+" "+i]||c["* "+i]))for(r in c)if((s=r.split(" "))[1]===i&&(a=c[l+" "+s[0]]||c["* "+s[0]])){!0===a?a=c[r]:!0!==c[r]&&(i=s[0],d.unshift(s[1]));break}if(!0!==a)if(a&&t.throws)e=a(e);else try{e=a(e)}catch(t){return{state:"parsererror",error:a?t:"No conversion from "+l+" to "+i}}}return{state:"success",data:e}}(f,x,_,c),c?(f.ifModified&&((y=_.getResponseHeader("Last-Modified"))&&(E.lastModified[r]=y),(y=_.getResponseHeader("etag"))&&(E.etag[r]=y)),204===t||"HEAD"===f.type?k="nocontent":304===t?k="notmodified":(k=x.state,u=x.data,c=!(m=x.error))):(m=k,!t&&k||(k="error",t<0&&(t=0))),_.status=t,_.statusText=(e||k)+"",c?b.resolveWith(g,[u,k,_]):b.rejectWith(g,[_,k,m]),_.statusCode(w),w=void 0,p&&h.trigger(c?"ajaxSuccess":"ajaxError",[_,f,c?u:m]),v.fireWith(g,[_,k]),p&&(h.trigger("ajaxComplete",[_,f]),--E.active||E.event.trigger("ajaxStop")))}return _},getJSON:function(t,e,n){return E.get(t,e,n,"json")},getScript:function(t,e){return E.get(t,void 0,e,"script")}}),E.each(["get","post"],function(t,e){E[e]=function(t,n,o,r){return v(n)&&(r=r||o,o=n,n=void 0),E.ajax(E.extend({url:t,type:e,dataType:r,data:n,success:o},E.isPlainObject(t)&&t))}}),E._evalUrl=function(t){return E.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},E.fn.extend({wrapAll:function(t){var e;return this[0]&&(v(t)&&(t=t.call(this[0])),e=E(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return v(t)?this.each(function(e){E(this).wrapInner(t.call(this,e))}):this.each(function(){var e=E(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=v(t);return this.each(function(n){E(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){E(this).replaceWith(this.childNodes)}),this}}),E.expr.pseudos.hidden=function(t){return!E.expr.pseudos.visible(t)},E.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},E.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(t){}};var We={0:200,1223:204},Fe=E.ajaxSettings.xhr();b.cors=!!Fe&&"withCredentials"in Fe,b.ajax=Fe=!!Fe,E.ajaxTransport(function(t){var e,o;if(b.cors||Fe&&!t.crossDomain)return{send:function(r,i){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];for(a in t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)s.setRequestHeader(a,r[a]);e=function(t){return function(){e&&(e=o=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?i(0,"error"):i(s.status,s.statusText):i(We[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=e(),o=s.onerror=s.ontimeout=e("error"),void 0!==s.onabort?s.onabort=o:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout(function(){e&&o()})},e=e("abort");try{s.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}}),E.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),E.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return E.globalEval(t),t}}}),E.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),E.ajaxTransport("script",function(t){var e,n;if(t.crossDomain)return{send:function(o,r){e=E("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),a.head.appendChild(e[0])},abort:function(){n&&n()}}});var Ue,Ve=[],Ge=/(=)\?(?=&|$)|\?\?/;E.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ve.pop()||E.expando+"_"+ke++;return this[t]=!0,t}}),E.ajaxPrefilter("json jsonp",function(t,e,o){var r,i,a,s=!1!==t.jsonp&&(Ge.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ge.test(t.data)&&"data");if(s||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=v(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Ge,"$1"+r):!1!==t.jsonp&&(t.url+=(Ee.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return a||E.error(r+" was not called"),a[0]},t.dataTypes[0]="json",i=n[r],n[r]=function(){a=arguments},o.always(function(){void 0===i?E(n).removeProp(r):n[r]=i,t[r]&&(t.jsonpCallback=e.jsonpCallback,Ve.push(r)),a&&v(i)&&i(a[0]),a=i=void 0}),"script"}),b.createHTMLDocument=((Ue=a.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ue.childNodes.length),E.parseHTML=function(t,e,n){return"string"!=typeof t?[]:("boolean"==typeof e&&(n=e,e=!1),e||(b.createHTMLDocument?((o=(e=a.implementation.createHTMLDocument("")).createElement("base")).href=a.location.href,e.head.appendChild(o)):e=a),i=!n&&[],(r=I.exec(t))?[e.createElement(r[1])]:(r=yt([t],e,i),i&&i.length&&E(i).remove(),E.merge([],r.childNodes)));var o,r,i},E.fn.load=function(t,e,n){var o,r,i,a=this,s=t.indexOf(" ");return s>-1&&(o=ge(t.slice(s)),t=t.slice(0,s)),v(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),a.length>0&&E.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){i=arguments,a.html(o?E("<div>").append(E.parseHTML(t)).find(o):t)}).always(n&&function(t,e){a.each(function(){n.apply(this,i||[t.responseText,e,t])})}),this},E.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){E.fn[e]=function(t){return this.on(e,t)}}),E.expr.pseudos.animated=function(t){return E.grep(E.timers,function(e){return t===e.elem}).length},E.offset={setOffset:function(t,e,n){var o,r,i,a,s,l,c=E.css(t,"position"),d=E(t),p={};"static"===c&&(t.style.position="relative"),s=d.offset(),i=E.css(t,"top"),l=E.css(t,"left"),("absolute"===c||"fixed"===c)&&(i+l).indexOf("auto")>-1?(a=(o=d.position()).top,r=o.left):(a=parseFloat(i)||0,r=parseFloat(l)||0),v(e)&&(e=e.call(t,n,E.extend({},s))),null!=e.top&&(p.top=e.top-s.top+a),null!=e.left&&(p.left=e.left-s.left+r),"using"in e?e.using.call(t,p):d.css(p)}},E.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){E.offset.setOffset(this,t,e)});var e,n,o=this[0];return o?o.getClientRects().length?(e=o.getBoundingClientRect(),n=o.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,o=this[0],r={top:0,left:0};if("fixed"===E.css(o,"position"))e=o.getBoundingClientRect();else{for(e=this.offset(),n=o.ownerDocument,t=o.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===E.css(t,"position");)t=t.parentNode;t&&t!==o&&1===t.nodeType&&((r=E(t).offset()).top+=E.css(t,"borderTopWidth",!0),r.left+=E.css(t,"borderLeftWidth",!0))}return{top:e.top-r.top-E.css(o,"marginTop",!0),left:e.left-r.left-E.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===E.css(t,"position");)t=t.offsetParent;return t||kt})}}),E.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;E.fn[t]=function(o){return V(this,function(t,o,r){var i;if(w(t)?i=t:9===t.nodeType&&(i=t.defaultView),void 0===r)return i?i[e]:t[o];i?i.scrollTo(n?i.pageXOffset:r,n?r:i.pageYOffset):t[o]=r},t,o,arguments.length)}}),E.each(["top","left"],function(t,e){E.cssHooks[e]=Ut(b.pixelPosition,function(t,n){if(n)return n=Ft(t,e),qt.test(n)?E(t).position()[e]+"px":n})}),E.each({Height:"height",Width:"width"},function(t,e){E.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,o){E.fn[o]=function(r,i){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(!0===r||!0===i?"margin":"border");return V(this,function(e,n,r){var i;return w(e)?0===o.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+t],i["scroll"+t],e.body["offset"+t],i["offset"+t],i["client"+t])):void 0===r?E.css(e,n,s):E.style(e,n,r,s)},e,a?r:void 0,a)}})}),E.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){E.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),E.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),E.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,o){return this.on(e,t,n,o)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),E.proxy=function(t,e){var n,o,r;if("string"==typeof e&&(n=t[e],e=t,t=n),v(t))return o=l.call(arguments,2),(r=function(){return t.apply(e||this,o.concat(l.call(arguments)))}).guid=t.guid=t.guid||E.guid++,r},E.holdReady=function(t){t?E.readyWait++:E.ready(!0)},E.isArray=Array.isArray,E.parseJSON=JSON.parse,E.nodeName=O,E.isFunction=v,E.isWindow=w,E.camelCase=X,E.type=k,E.now=Date.now,E.isNumeric=function(t){var e=E.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},void 0===(o=function(){return E}.apply(e,[]))||(t.exports=o);var Ye=n.jQuery,Ke=n.$;return E.noConflict=function(t){return n.$===E&&(n.$=Ke),t&&n.jQuery===E&&(n.jQuery=Ye),E},r||(n.jQuery=n.$=E),E})},function(t,e,n){t.exports=n.p+"images/spellDialog.png"},function(t,e,n){t.exports=n.p+"images/mathTask.png"},function(t,e,n){t.exports=n.p+"images/englishTask.png"},function(t,e,n){t.exports=n.p+"images/dragDropTask.png"},function(t,e,n){t.exports=n.p+"images/imageTask.png"},function(t,e,n){t.exports=n.p+"images/scoreScreen.png"},function(t,e){t.exports=function(t){return"string"!=typeof t?t:(/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),/["'() \t\n]/.test(t)?'"'+t.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':t)}},function(t,e,n){t.exports=n.p+"images/warrior.png"},function(t,e,n){t.exports=n.p+"images/head1.png"},function(t,e,n){t.exports=n.p+"images/head2.png"},function(t,e,n){t.exports=n.p+"images/head3.png"},function(t,e,n){t.exports=n.p+"images/body1.png"},function(t,e,n){t.exports=n.p+"images/body2.png"},function(t,e,n){t.exports=n.p+"images/body3.png"},function(t,e,n){t.exports=n.p+"images/leftLeg1.png"},function(t,e,n){t.exports=n.p+"images/leftLeg2.png"},function(t,e,n){t.exports=n.p+"images/leftLeg3.png"},function(t,e,n){t.exports=n.p+"images/rightLeg1.png"},function(t,e,n){t.exports=n.p+"images/rightLeg2.png"},function(t,e,n){t.exports=n.p+"images/rightLeg3.png"},function(t,e,n){t.exports=n.p+"images/leftArm1.png"},function(t,e,n){t.exports=n.p+"images/leftArm2.png"},function(t,e,n){t.exports=n.p+"images/leftArm3.png"},function(t,e,n){t.exports=n.p+"images/rightArm1.png"},function(t,e,n){t.exports=n.p+"images/rightArm2.png"},function(t,e,n){t.exports=n.p+"images/rightArm3.png"},function(t,e,n){t.exports=n.p+"images/fireball.png"},function(t,e,n){t.exports=n.p+"images/iceArrow.png"},function(t,e,n){t.exports=n.p+"sounds/fireball.mp3"},function(t,e,n){t.exports=n.p+"sounds/iceArrow.mp3"},function(t,e,n){t.exports=n.p+"sounds/painPlayer.mp3"},function(t,e,n){t.exports=n.p+"sounds/painEnemy.mp3"},function(t,e,n){var o,r;
/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
!function(i){"use strict";void 0===(r="function"==typeof(o=i)?o.call(e,n,e,t):o)||(t.exports=r)}(function(){"use strict";if("undefined"==typeof window||!window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var t,e,n,o,r,i,a,s,l,c,d,p,u,m,f,g,h,b,v,w,x,y,k,E,_,T=[],C=!1,S=!1,A=!1,D=/\s+/g,O="Sortable"+(new Date).getTime(),I=window,N=I.document,L=I.parseInt,j=I.setTimeout,P=I.jQuery||I.Zepto,R=I.Polymer,M={capture:!1,passive:!1},H="draggable"in N.createElement("div"),B=!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie)/i)&&((E=N.createElement("x")).style.cssText="pointer-events:auto","auto"===E.style.pointerEvents),q=!1,z=!1,W=Math.abs,F=Math.min,U=[],V=[],G=function(t,e){var n=rt(t),o=L(n.width),r=dt(t,0,e),i=dt(t,1,e),a=r&&rt(r),s=i&&rt(i),l=a&&L(a.marginLeft)+L(a.marginRight)+r.getBoundingClientRect().width,c=s&&L(s.marginLeft)+L(s.marginRight)+i.getBoundingClientRect().width;return"flex"===n.display?"column"===n.flexDirection||"column-reverse"===n.flexDirection?"vertical":"horizontal":r&&("block"===a.display||"grid"===a.display||l>=o&&"none"===n.float||i&&"none"===n.float&&l+c>o)?"vertical":"horizontal"},Y=function(t,e){if(!t||!t.getBoundingClientRect)return I;var n=t,o=!1;do{if(n.clientWidth<n.scrollWidth||n.clientHeight<n.scrollHeight){var r=rt(n);if(n.clientWidth<n.scrollWidth&&("auto"==r.overflowX||"scroll"==r.overflowX)||n.clientHeight<n.scrollHeight&&("auto"==r.overflowY||"scroll"==r.overflowY)){if(!n||!n.getBoundingClientRect||n===N.body)return I;if(o||e)return n;o=!0}}}while(n=n.parentNode);return I},K=gt(function(t,e,n,o){if(e.scroll){var r,i,a,d,p=n?n[O]:window,u=e.scrollSensitivity,m=e.scrollSpeed,f=t.clientX,g=t.clientY,h=window.innerWidth,b=window.innerHeight,w=!1;l!==n&&(X(),s=e.scroll,c=e.scrollFn,!0===s&&(s=Y(n,!0),l=s));var x=0,y=s;do{var k;if(y&&y!==I?(i=rt(k=y),r=y.getBoundingClientRect(),a=k.clientWidth<k.scrollWidth&&("auto"==i.overflowX||"scroll"==i.overflowX)&&(W(r.right-f)<=u)-(W(r.left-f)<=u),d=k.clientHeight<k.scrollHeight&&("auto"==i.overflowY||"scroll"==i.overflowY)&&(W(r.bottom-g)<=u)-(W(r.top-g)<=u)):y===I&&(k=I,a=(h-f<=u)-(f<=u),d=(b-g<=u)-(g<=u)),!T[x])for(var E=0;E<=x;E++)T[E]||(T[E]={});T[x].vx==a&&T[x].vy==d&&T[x].el===k||(T[x].el=k,T[x].vx=a,T[x].vy=d,clearInterval(T[x].pid),!k||0==a&&0==d||(w=!0,T[x].pid=setInterval(function(){o&&0===this.layer&&Z.active._emulateDragOver(!0);var e=T[this.layer].vy?T[this.layer].vy*m:0,n=T[this.layer].vx?T[this.layer].vx*m:0;"function"==typeof c&&"continue"!==c.call(p,n,e,t,v,T[this.layer].el)||(T[this.layer].el===I?I.scrollTo(I.pageXOffset+n,I.pageYOffset+e):(T[this.layer].el.scrollTop+=e,T[this.layer].el.scrollLeft+=n))}.bind({layer:x}),24))),x++}while(e.bubbleScroll&&y!==I&&(y=Y(y,!1)));C=w}},30),X=function(){T.forEach(function(t){clearInterval(t.pid)}),T=[]},$=function(t){function e(t,e){return function(n,o,r,i){var a;if(null==t&&e)a=!0;else if(null==t||!1===t)a=!1;else if(e&&"clone"===t)a=t;else if("function"==typeof t)a=t(n,o,r,i);else{var s=(e?n:o).options.group.name;a=!0===t||"string"==typeof t&&t===s||t.join&&t.indexOf(s)>-1}return a||n.options.group.name&&o.options.group.name&&n.options.group.name===o.options.group.name}}var n={},o=t.group;o&&"object"==typeof o||(o={name:o}),n.name=o.name,n.checkPull=e(o.pull,!0),n.checkPut=e(o.put),n.revertClone=o.revertClone,t.group=n},Q=function(e){t&&t.parentNode[O]&&t.parentNode[O]._computeIsAligned(e)};function Z(t,e){if(!t||!t.nodeType||1!==t.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(t);this.el=t,this.options=e=ht({},e),t[O]=this;var n={group:null,sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,bubbleScroll:!0,draggable:/[uo]l/i.test(t.nodeName)?"li":">*",swapThreshold:1,invertSwap:!1,invertedSwapThreshold:null,ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",ignore:"a, img",filter:null,preventOnFilter:!0,animation:0,setData:function(t,e){t.setData("Text",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,touchStartThreshold:L(window.devicePixelRatio,10)||1,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:!1!==Z.supportPointer&&("PointerEvent"in window||window.navigator&&"msPointerEnabled"in window.navigator)};for(var o in n)!(o in e)&&(e[o]=n[o]);for(var r in"direction"in e||(e.direction=function(){return G(t,e)}),$(e),null==e.invertedSwapThreshold&&(e.invertedSwapThreshold=e.swapThreshold),this)"_"===r.charAt(0)&&"function"==typeof this[r]&&(this[r]=this[r].bind(this));this.nativeDraggable=!e.forceFallback&&H,et(t,"mousedown",this._onTapStart),et(t,"touchstart",this._onTapStart),e.supportPointer&&et(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(et(t,"dragover",this),et(t,"dragenter",this)),V.push(this._onDragOver),e.store&&e.store.get&&this.sort(e.store.get(this)||[])}function J(t,e,n,o){if(t){n=n||N;do{if(">*"===e&&t.parentNode===n||ft(t,e)||o&&t===n)return t;if(t===n)break}while(t=tt(t))}return null}function tt(t){return t.host&&t!==N&&t.host.nodeType?t.host:t.parentNode}function et(t,e,n){t.addEventListener(e,n,M)}function nt(t,e,n){t.removeEventListener(e,n,M)}function ot(t,e,n){if(t&&e)if(t.classList)t.classList[n?"add":"remove"](e);else{var o=(" "+t.className+" ").replace(D," ").replace(" "+e+" "," ");t.className=(o+(n?" "+e:"")).replace(D," ")}}function rt(t,e,n){var o=t&&t.style;if(o){if(void 0===n)return N.defaultView&&N.defaultView.getComputedStyle?n=N.defaultView.getComputedStyle(t,""):t.currentStyle&&(n=t.currentStyle),void 0===e?n:n[e];e in o||(e="-webkit-"+e),o[e]=n+("string"==typeof n?"":"px")}}function it(t,e,n){if(t){var o=t.getElementsByTagName(e),r=0,i=o.length;if(n)for(;r<i;r++)n(o[r],r);return o}return[]}function at(t,e,n,r,i,a,s,l,c){var d,p=(t=t||e[O]).options,u="on"+n.charAt(0).toUpperCase()+n.substr(1);window.CustomEvent?d=new CustomEvent(n,{bubbles:!0,cancelable:!0}):(d=N.createEvent("Event")).initEvent(n,!0,!0),d.to=i||e,d.from=a||e,d.item=r||e,d.clone=o,d.oldIndex=s,d.newIndex=l,d.originalEvent=c,e.dispatchEvent(d),p[u]&&p[u].call(t,d)}function st(t,e,n,o,r,i,a,s){var l,c,d=t[O],p=d.options.onMove;return window.CustomEvent?l=new CustomEvent("move",{bubbles:!0,cancelable:!0}):(l=N.createEvent("Event")).initEvent("move",!0,!0),l.to=e,l.from=t,l.dragged=n,l.draggedRect=o,l.related=r||e,l.relatedRect=i||e.getBoundingClientRect(),l.willInsertAfter=s,l.originalEvent=a,t.dispatchEvent(l),p&&(c=p.call(d,l,a)),c}function lt(t){t.draggable=!1}function ct(){q=!1}function dt(e,o,r){for(var i=0,a=0,s=e.children;a<s.length;){if("none"!==s[a].style.display&&s[a]!==n&&s[a]!==t&&J(s[a],r.draggable,e,!1)){if(i===o)return s[a];i++}a++}return null}function pt(t){var e=t.lastElementChild;return e===n&&(e=t.children[t.childElementCount-2]),e||null}function ut(t){for(var e=t.tagName+t.className+t.src+t.href+t.textContent,n=e.length,o=0;n--;)o+=e.charCodeAt(n);return o.toString(36)}function mt(t,e){var n=0;if(!t||!t.parentNode)return-1;for(;t&&(t=t.previousElementSibling);)"TEMPLATE"===t.nodeName.toUpperCase()||">*"!==e&&!ft(t,e)||n++;return n}function ft(t,e){if(t)try{if(t.matches)return t.matches(e);if(t.msMatchesSelector)return t.msMatchesSelector(e)}catch(t){return!1}return!1}function gt(t,e){return function(){if(!_){var n=arguments,o=this;_=j(function(){1===n.length?t.call(o,n[0]):t.apply(o,n),_=void 0},e)}}}function ht(t,e){if(t&&e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}function bt(t){return R&&R.dom?R.dom(t).cloneNode(!0):P?P(t).clone(!0)[0]:t.cloneNode(!0)}function vt(t){return j(t,0)}function wt(t){return clearTimeout(t)}function xt(t){Z.active&&t.cancelable&&t.preventDefault()}return Z.prototype={constructor:Z,_isAligned:!0,_computeIsAligned:function(e,n){var o,r,i,a,s,l,c;z||t&&t.parentNode===this.el&&(!0!==n&&!1!==n&&(n=!!J(e.target,null,t,!0)),this._isAligned=!C&&(n||this._isAligned&&(o=e.clientX,r=e.clientY,this.el,i=this._getDirection(e,null),this.options,a=k||t.getBoundingClientRect(),s="vertical"===i?a.left:a.top,l="vertical"===i?a.right:a.bottom,s<(c="vertical"===i?o:r)&&c<l)),z=!0,j(function(){z=!1},30))},_getDirection:function(e,n){return"function"==typeof this.options.direction?this.options.direction.call(this,e,n,t):this.options.direction},_onTapStart:function(e){var n,o=this,r=this.el,i=this.options,s=i.preventOnFilter,l=e.type,c=e.touches&&e.touches[0],d=(c||e).target,p=e.target.shadowRoot&&(e.path&&e.path[0]||e.composedPath&&e.composedPath()[0])||d,u=i.filter;if(function(t){U.length=0;var e=t.getElementsByTagName("input"),n=e.length;for(;n--;){var o=e[n];o.checked&&U.push(o)}}(r),!t&&!(/mousedown|pointerdown/.test(l)&&0!==e.button||i.disabled)&&!p.isContentEditable&&(d=J(d,i.draggable,r,!0))&&a!==d){if(n=mt(d,i.draggable),"function"==typeof u){if(u.call(this,e,d,this))return at(o,p,"filter",d,r,r,n),void(s&&e.cancelable&&e.preventDefault())}else if(u&&(u=u.split(",").some(function(t){if(t=J(p,t.trim(),r,!1))return at(o,t,"filter",d,r,r,n),!0})))return void(s&&e.cancelable&&e.preventDefault());i.handle&&!J(p,i.handle,r,!1)||this._prepareDragStart(e,c,d,n)}},_handleAutoScroll:function(e,n){if(t&&this.options.scroll){var o=e.clientX,r=e.clientY,i=N.elementFromPoint(o,r),a=this;if(n||window.navigator&&window.navigator.userAgent.toLowerCase().indexOf("firefox")>-1){K(e,a.options,i,!0);var s=Y(i,!0);!C||f&&o===g&&r===h||(f&&clearInterval(f),f=setInterval(function(){if(t){var n=Y(N.elementFromPoint(o,r),!0);n!==s&&(s=n,X(),K(e,a.options,s,!0))}},10),g=o,h=r)}else{if(!a.options.bubbleScroll||Y(i,!0)===window)return void X();K(e,a.options,Y(i,!1))}}},_prepareDragStart:function(n,o,s,l){var c,p=this,m=p.el,f=p.options,g=m.ownerDocument;s&&!t&&s.parentNode===m&&(b=n,r=m,e=(t=s).parentNode,i=t.nextSibling,a=s,u=f.group,d=l,this._lastX=(o||n).clientX,this._lastY=(o||n).clientY,t.style["will-change"]="all",c=function(){p._disableDelayedDrag(),t.draggable=p.nativeDraggable,p._triggerDragStart(n,o),at(p,r,"choose",t,r,r,d),ot(t,f.chosenClass,!0)},f.ignore.split(",").forEach(function(e){it(t,e.trim(),lt)}),et(g,"mouseup",p._onDrop),et(g,"touchend",p._onDrop),et(g,"touchcancel",p._onDrop),f.supportPointer&&et(g,"pointercancel",p._onDrop),f.delay?(et(g,"mouseup",p._disableDelayedDrag),et(g,"touchend",p._disableDelayedDrag),et(g,"touchcancel",p._disableDelayedDrag),et(g,"mousemove",p._delayedDragTouchMoveHandler),et(g,"touchmove",p._delayedDragTouchMoveHandler),f.supportPointer&&et(g,"pointermove",p._delayedDragTouchMoveHandler),p._dragStartTimer=j(c.bind(p),f.delay)):c())},_delayedDragTouchMoveHandler:function(t){var e=t.touches?t.touches[0]:t;F(W(e.clientX-this._lastX),W(e.clientY-this._lastY))>=this.options.touchStartThreshold&&this._disableDelayedDrag()},_disableDelayedDrag:function(){var t=this.el.ownerDocument;clearTimeout(this._dragStartTimer),nt(t,"mouseup",this._disableDelayedDrag),nt(t,"touchend",this._disableDelayedDrag),nt(t,"touchcancel",this._disableDelayedDrag),nt(t,"mousemove",this._delayedDragTouchMoveHandler),nt(t,"touchmove",this._delayedDragTouchMoveHandler),nt(t,"pointermove",this._delayedDragTouchMoveHandler)},_triggerDragStart:function(e,n){(n=n||("touch"==e.pointerType?e:null))?(b={target:t,clientX:n.clientX,clientY:n.clientY},this._onDragStart(b,"touch")):this.nativeDraggable?(et(t,"dragend",this),et(r,"dragstart",this._onDragStart)):this._onDragStart(b,!0);try{N.selection?vt(function(){N.selection.empty()}):window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(){if(r&&t){this.nativeDraggable&&(et(N,"dragover",this._handleAutoScroll),et(N,"dragover",Q));var e=this.options;ot(t,e.dragClass,!1),ot(t,e.ghostClass,!0),rt(t,"transform",""),Z.active=this,this._isAligned=!0,at(this,r,"start",t,r,r,d)}else this._nulling()},_emulateDragOver:function(e){if(v){if(this._lastX===v.clientX&&this._lastY===v.clientY&&!e)return;this._lastX=v.clientX,this._lastY=v.clientY,B||rt(n,"display","none");for(var o=N.elementFromPoint(v.clientX,v.clientY),r=o,i=!!J(o,null,t,!0);o&&o.shadowRoot;)r=o=o.shadowRoot.elementFromPoint(v.clientX,v.clientY);if(r)do{if(r[O]){for(var a=V.length;a--;)V[a]({clientX:v.clientX,clientY:v.clientY,target:o,rootEl:r});if(!this.options.dragoverBubble)break}o=r}while(r=r.parentNode);t.parentNode[O]._computeIsAligned(v,i),B||rt(n,"display","")}},_onTouchMove:function(t){if(b){var e=this.options,o=e.fallbackTolerance,r=e.fallbackOffset,i=t.touches?t.touches[0]:t,a=i.clientX-b.clientX+r.x,s=i.clientY-b.clientY+r.y,l=t.touches?"translate3d("+a+"px,"+s+"px,0)":"translate("+a+"px,"+s+"px)";if(this.options.supportPointer&&"touchmove"===t.type)return;if(!Z.active){if(o&&F(W(i.clientX-this._lastX),W(i.clientY-this._lastY))<o)return;this._dragStarted()}this._appendGhost(),this._handleAutoScroll(i,!0),w=!0,v=i,rt(n,"webkitTransform",l),rt(n,"mozTransform",l),rt(n,"msTransform",l),rt(n,"transform",l),t.cancelable&&t.preventDefault()}},_appendGhost:function(){if(!n){var e,o=t.getBoundingClientRect(),i=rt(t),a=this.options;ot(n=t.cloneNode(!0),a.ghostClass,!1),ot(n,a.fallbackClass,!0),ot(n,a.dragClass,!0),rt(n,"top",o.top-L(i.marginTop,10)),rt(n,"left",o.left-L(i.marginLeft,10)),rt(n,"width",o.width),rt(n,"height",o.height),rt(n,"opacity","0.8"),rt(n,"position","fixed"),rt(n,"zIndex","100000"),rt(n,"pointerEvents","none"),a.fallbackOnBody&&N.body.appendChild(n)||r.appendChild(n),e=n.getBoundingClientRect(),rt(n,"width",2*o.width-e.width),rt(n,"height",2*o.height-e.height)}},_onDragStart:function(e,n){var i=this,a=e.dataTransfer,s=i.options;i._offUpEvents(),u.checkPull(i,i,t,e)&&((o=bt(t)).draggable=!1,o.style["will-change"]="",this._hideClone(),ot(o,i.options.chosenClass,!1),i._cloneId=vt(function(){r.insertBefore(o,t),at(i,r,"clone",t)})),ot(t,s.dragClass,!0),n?("touch"===n?(et(N,"touchmove",xt),et(N,"touchmove",i._onTouchMove),et(N,"touchend",i._onDrop),et(N,"touchcancel",i._onDrop),s.supportPointer&&(et(N,"pointermove",i._onTouchMove),et(N,"pointerup",i._onDrop))):(et(N,"mousemove",i._onTouchMove),et(N,"mouseup",i._onDrop)),i._loopId=setInterval(i._emulateDragOver,50),ot(t,s.dragClass,!1)):(a&&(a.effectAllowed="move",s.setData&&s.setData.call(i,a,t)),et(N,"drop",i),rt(t,"transform","translateZ(0)"),i._dragStartId=vt(i._dragStarted)),et(N,"selectstart",i)},_onDragOver:function(a){var s,l,c,d,p=this.el,f=this.options,g=f.group,h=Z.active,b=u===g,v=f.sort;if((void 0===a.rootEl||a.rootEl===this.el)&&(f.dragoverBubble||a.rootEl||(this._handleAutoScroll(a),t.parentNode[O]._computeIsAligned(a)),void 0!==a.preventDefault&&(a.cancelable&&a.preventDefault(),!f.dragoverBubble&&a.stopPropagation()),w=!0,s=J(a.target,f.draggable,p,!0),!(t.animated&&s===t||s.animated||q)&&(s!==x&&(A=!1,S=!1,x=null),h&&!f.disabled&&(b?v||(d=!r.contains(t)):m===this||(this.lastPutMode=u.checkPull(this,h,t,a))&&g.checkPut(this,h,t,a))))){var E,_=this._getDirection(a,s);if(l=t.getBoundingClientRect(),m!==this&&this!==Z.active?(m=this,!0):this===Z.active&&(!1,m=null),d)return this._hideClone(),e=r,void(o||i?r.insertBefore(t,o||i):v||r.appendChild(t));if(0===p.children.length||p.children[0]===n||p===a.target&&function(t,e,n){var o=pt(n).getBoundingClientRect(),r="vertical"===e?t.clientY:t.clientX,i="vertical"===e?t.clientX:t.clientY,a="vertical"===e?o.bottom:o.right,s="vertical"===e?o.left:o.top,l="vertical"===e?o.right:o.bottom;return i>s&&i<l&&r>a}(a,_,p)){if(0!==p.children.length&&p.children[0]!==n&&p===a.target&&(s=pt(p)),s){if(s.animated)return;c=s.getBoundingClientRect()}b?h._hideClone():h._showClone(this),!1!==st(r,p,t,l,s,c,a,!!s)&&(t.contains(p)||(p.appendChild(t),e=p,this._isAligned=!0,k=null),this._animate(l,t),s&&this._animate(c,s))}else if(s&&!s.animated&&s!==t&&void 0!==s.parentNode[O]&&s!==p){if(A=A||f.invertSwap||t.parentNode!==p||!this._isAligned,0===(E=function(e,n,o,r,i,a,s){var l=n.getBoundingClientRect(),c="vertical"===o?e.clientY:e.clientX,d="vertical"===o?l.height:l.width,p="vertical"===o?l.top:l.left,u="vertical"===o?l.bottom:l.right,m=t.getBoundingClientRect(),f="vertical"===o?m.height:m.width,g=!1,h=rt(t);if(f+=L(h.marginLeft)+L(h.marginRight),!a)if(s&&f<d*r)if(!S&&(1===y?c>p+d*i/2:c<u-d*i/2)&&(S=!0),S)g=!0;else{"vertical"===o?m.top:m.left,"vertical"===o?m.bottom:m.right;if(1===y?c<p+f:c>u-f)return-1*y}else if(c>p+d*(1-r)/2&&c<u-d*(1-r)/2)return c>p+d/2?-1:1;if((g=g||a)&&(c<p+d*i/2||c>u-d*i/2))return c>p+d/2?1:-1;return 0}(a,s,_,f.swapThreshold,f.invertedSwapThreshold,A,x===s)))return;k=null,this._isAligned=!0,x&&(x===s||s&&s.animated)||(S=!1,x=s),y=E,c=s.getBoundingClientRect();var T=s.nextElementSibling,C=!1,D=st(r,p,t,l,s,c,a,C=1===E);!1!==D&&(1!==D&&-1!==D||(C=1===D),q=!0,j(ct,30),b?h._hideClone():h._showClone(this),t.contains(p)||(C&&!T?p.appendChild(t):s.parentNode.insertBefore(t,C?T:s)),e=t.parentNode,this._animate(l,t),this._animate(c,s))}}},_animate:function(e,n){var o=this.options.animation;if(o){var r=n.getBoundingClientRect();if(n===t&&(k=r),1===e.nodeType&&(e=e.getBoundingClientRect()),e.left+e.width/2===r.left+r.width/2&&e.top+e.height/2===r.top+r.height/2)return;rt(n,"transition","none"),rt(n,"transform","translate3d("+(e.left-r.left)+"px,"+(e.top-r.top)+"px,0)"),n.offsetWidth,rt(n,"transition","all "+o+"ms"),rt(n,"transform","translate3d(0,0,0)"),clearTimeout(n.animated),n.animated=j(function(){rt(n,"transition",""),rt(n,"transform",""),n.animated=!1},o)}},_offUpEvents:function(){var t=this.el.ownerDocument;nt(N,"touchmove",xt),nt(N,"touchmove",this._onTouchMove),nt(N,"pointermove",this._onTouchMove),nt(t,"mouseup",this._onDrop),nt(t,"touchend",this._onDrop),nt(t,"pointerup",this._onDrop),nt(t,"touchcancel",this._onDrop),nt(t,"pointercancel",this._onDrop),nt(N,"selectstart",this)},_onDrop:function(a){var s=this.el,l=this.options;C=!1,A=!1,S=!1,clearInterval(this._loopId),clearInterval(f),X(),clearTimeout(_),_=void 0,clearTimeout(this._dragStartTimer),wt(this._cloneId),wt(this._dragStartId),nt(N,"mousemove",this._onTouchMove),this.nativeDraggable&&(nt(N,"drop",this),nt(s,"dragstart",this._onDragStart),nt(N,"dragover",this._handleAutoScroll),nt(N,"dragover",Q)),this._offUpEvents(),a&&(w&&(a.cancelable&&a.preventDefault(),!l.dropBubble&&a.stopPropagation()),n&&n.parentNode&&n.parentNode.removeChild(n),(r===e||m&&"clone"!==m.lastPutMode)&&o&&o.parentNode&&o.parentNode.removeChild(o),t&&(this.nativeDraggable&&nt(t,"dragend",this),lt(t),t.style["will-change"]="",ot(t,this.options.ghostClass,!1),ot(t,this.options.chosenClass,!1),at(this,r,"unchoose",t,e,r,d,null,a),r!==e?((p=mt(t,l.draggable))>=0&&(at(null,e,"add",t,e,r,d,p,a),at(this,r,"remove",t,e,r,d,p,a),at(null,e,"sort",t,e,r,d,p,a),at(this,r,"sort",t,e,r,d,p,a)),m&&m.save()):t.nextSibling!==i&&(p=mt(t,l.draggable))>=0&&(at(this,r,"update",t,e,r,d,p,a),at(this,r,"sort",t,e,r,d,p,a)),Z.active&&(null!=p&&-1!==p||(p=d),at(this,r,"end",t,e,r,d,p,a),this.save()))),this._nulling()},_nulling:function(){r=t=e=n=i=o=a=s=l=T.length=f=g=h=b=v=w=p=d=x=y=k=m=u=Z.active=null,U.forEach(function(t){t.checked=!0}),U.length=0},handleEvent:function(e){switch(e.type){case"drop":case"dragend":this._onDrop(e);break;case"dragenter":case"dragover":t&&(this._onDragOver(e),function(t){t.dataTransfer&&(t.dataTransfer.dropEffect="move");t.cancelable&&t.preventDefault()}(e));break;case"selectstart":e.preventDefault()}},toArray:function(){for(var t,e=[],n=this.el.children,o=0,r=n.length,i=this.options;o<r;o++)J(t=n[o],i.draggable,this.el,!1)&&e.push(t.getAttribute(i.dataIdAttr)||ut(t));return e},sort:function(t){var e={},n=this.el;this.toArray().forEach(function(t,o){var r=n.children[o];J(r,this.options.draggable,n,!1)&&(e[t]=r)},this),t.forEach(function(t){e[t]&&(n.removeChild(e[t]),n.appendChild(e[t]))})},save:function(){var t=this.options.store;t&&t.set&&t.set(this)},closest:function(t,e){return J(t,e||this.options.draggable,this.el,!1)},option:function(t,e){var n=this.options;if(void 0===e)return n[t];n[t]=e,"group"===t&&$(n)},destroy:function(){var t=this.el;t[O]=null,nt(t,"mousedown",this._onTapStart),nt(t,"touchstart",this._onTapStart),nt(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(nt(t,"dragover",this),nt(t,"dragenter",this)),Array.prototype.forEach.call(t.querySelectorAll("[draggable]"),function(t){t.removeAttribute("draggable")}),V.splice(V.indexOf(this._onDragOver),1),this._onDrop(),this.el=t=null},_hideClone:function(){o.cloneHidden||(rt(o,"display","none"),o.cloneHidden=!0)},_showClone:function(e){"clone"===e.lastPutMode?o.cloneHidden&&(r.contains(t)&&!this.options.group.revertClone?r.insertBefore(o,t):i?r.insertBefore(o,i):r.appendChild(o),this.options.group.revertClone&&this._animate(t,o),rt(o,"display",""),o.cloneHidden=!1):this._hideClone()}},Z.utils={on:et,off:nt,css:rt,find:it,is:function(t,e){return!!J(t,e,t,!1)},extend:ht,throttle:gt,closest:J,toggleClass:ot,clone:bt,index:mt,nextTick:vt,cancelNextTick:wt,detectDirection:G,getChild:dt},Z.create=function(t,e){return new Z(t,e)},Z.version="1.8.0-rc1",Z})},function(t,e,n){t.exports=n.p+"images/bear.png"},function(t,e,n){t.exports=n.p+"images/cat.png"},function(t,e,n){t.exports=n.p+"images/dog.png"},function(t,e,n){t.exports=n.p+"images/fox.png"},function(t,e,n){t.exports=n.p+"images/lion.png"},function(t,e,n){t.exports=n.p+"images/tiger.png"},function(t,e,n){t.exports=n.p+"images/wolf.png"},function(t,e,n){t.exports=n.p+"images/apple.png"},function(t,e,n){t.exports=n.p+"images/banana.png"},function(t,e,n){t.exports=n.p+"images/lemon.png"},function(t,e,n){t.exports=n.p+"images/orange.png"},function(t,e,n){t.exports=n.p+"images/peach.png"},function(t,e,n){t.exports=n.p+"images/pineapple.png"},function(t,e,n){t.exports=n.p+"images/armchair.png"},function(t,e,n){t.exports=n.p+"images/chair.png"},function(t,e,n){t.exports=n.p+"images/table.png"},function(t,e,n){t.exports=n.p+"images/garlic.png"},function(t,e,n){t.exports=n.p+"images/onion.png"},function(t,e,n){t.exports=n.p+"images/potato.png"},function(t,e){!function(e){"use strict";var n,o=Object.prototype,r=o.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag",c="object"==typeof t,d=e.regeneratorRuntime;if(d)c&&(t.exports=d);else{(d=e.regeneratorRuntime=c?t.exports:{}).wrap=x;var p="suspendedStart",u="suspendedYield",m="executing",f="completed",g={},h={};h[a]=function(){return this};var b=Object.getPrototypeOf,v=b&&b(b(I([])));v&&v!==o&&r.call(v,a)&&(h=v);var w=_.prototype=k.prototype=Object.create(h);E.prototype=w.constructor=_,_.constructor=E,_[l]=E.displayName="GeneratorFunction",d.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===E||"GeneratorFunction"===(e.displayName||e.name))},d.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,_):(t.__proto__=_,l in t||(t[l]="GeneratorFunction")),t.prototype=Object.create(w),t},d.awrap=function(t){return{__await:t}},T(C.prototype),C.prototype[s]=function(){return this},d.AsyncIterator=C,d.async=function(t,e,n,o){var r=new C(x(t,e,n,o));return d.isGeneratorFunction(e)?r:r.next().then(function(t){return t.done?t.value:r.next()})},T(w),w[l]="Generator",w[a]=function(){return this},w.toString=function(){return"[object Generator]"},d.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var o=e.pop();if(o in t)return n.value=o,n.done=!1,n}return n.done=!0,n}},d.values=I,O.prototype={constructor:O,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(D),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function o(o,r){return s.type="throw",s.arg=t,e.next=o,r&&(e.method="next",e.arg=n),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,g):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),D(n),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var o=n.completion;if("throw"===o.type){var r=o.arg;D(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,o){return this.delegate={iterator:I(t),resultName:e,nextLoc:o},"next"===this.method&&(this.arg=n),g}}}function x(t,e,n,o){var r=e&&e.prototype instanceof k?e:k,i=Object.create(r.prototype),a=new O(o||[]);return i._invoke=function(t,e,n){var o=p;return function(r,i){if(o===m)throw new Error("Generator is already running");if(o===f){if("throw"===r)throw i;return N()}for(n.method=r,n.arg=i;;){var a=n.delegate;if(a){var s=S(a,n);if(s){if(s===g)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===p)throw o=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=m;var l=y(t,e,n);if("normal"===l.type){if(o=n.done?f:u,l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=f,n.method="throw",n.arg=l.arg)}}}(t,n,a),i}function y(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function k(){}function E(){}function _(){}function T(t){["next","throw","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function C(t){var e;this._invoke=function(n,o){function i(){return new Promise(function(e,i){!function e(n,o,i,a){var s=y(t[n],t,o);if("throw"!==s.type){var l=s.arg,c=l.value;return c&&"object"==typeof c&&r.call(c,"__await")?Promise.resolve(c.__await).then(function(t){e("next",t,i,a)},function(t){e("throw",t,i,a)}):Promise.resolve(c).then(function(t){l.value=t,i(l)},a)}a(s.arg)}(n,o,e,i)})}return e=e?e.then(i,i):i()}}function S(t,e){var o=t.iterator[e.method];if(o===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=n,S(t,e),"throw"===e.method))return g;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var r=y(o,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,g;var i=r.arg;return i?i.done?(e[t.resultName]=i.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,g):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,g)}function A(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function D(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function O(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function I(t){if(t){var e=t[a];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function e(){for(;++o<t.length;)if(r.call(t,o))return e.value=t[o],e.done=!1,e;return e.value=n,e.done=!0,e};return i.next=i}}return{next:N}}function N(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},function(t,e,n){
/*!
  * Bootstrap v4.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function r(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.forEach(function(e){i(t,e,n[e])})}return t}e=e&&e.hasOwnProperty("default")?e.default:e,n=n&&n.hasOwnProperty("default")?n.default:n;var s=function(t){var e="transitionend";function n(e){var n=this,r=!1;return t(this).one(o.TRANSITION_END,function(){r=!0}),setTimeout(function(){r||o.triggerTransitionEnd(n)},e),this}var o={TRANSITION_END:"bsTransitionEnd",getUID:function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");e&&"#"!==e||(e=t.getAttribute("href")||"");try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(e){if(!e)return 0;var n=t(e).css("transition-duration"),o=parseFloat(n);return o?(n=n.split(",")[0],1e3*parseFloat(n)):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(n){t(n).trigger(e)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)){var i=n[r],a=e[r],s=a&&o.isElement(a)?"element":(l=a,{}.toString.call(l).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(i).test(s))throw new Error(t.toUpperCase()+': Option "'+r+'" provided type "'+s+'" but expected type "'+i+'".')}var l}};return t.fn.emulateTransitionEnd=n,t.event.special[o.TRANSITION_END]={bindType:e,delegateType:e,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}},o}(e),l=function(t){var e=t.fn.alert,n={CLOSE:"close.bs.alert",CLOSED:"closed.bs.alert",CLICK_DATA_API:"click.bs.alert.data-api"},o={ALERT:"alert",FADE:"fade",SHOW:"show"},i=function(){function e(t){this._element=t}var i=e.prototype;return i.close=function(t){var e=this._element;t&&(e=this._getRootElement(t));var n=this._triggerCloseEvent(e);n.isDefaultPrevented()||this._removeElement(e)},i.dispose=function(){t.removeData(this._element,"bs.alert"),this._element=null},i._getRootElement=function(e){var n=s.getSelectorFromElement(e),r=!1;return n&&(r=document.querySelector(n)),r||(r=t(e).closest("."+o.ALERT)[0]),r},i._triggerCloseEvent=function(e){var o=t.Event(n.CLOSE);return t(e).trigger(o),o},i._removeElement=function(e){var n=this;if(t(e).removeClass(o.SHOW),t(e).hasClass(o.FADE)){var r=s.getTransitionDurationFromElement(e);t(e).one(s.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(r)}else this._destroyElement(e)},i._destroyElement=function(e){t(e).detach().trigger(n.CLOSED).remove()},e._jQueryInterface=function(n){return this.each(function(){var o=t(this),r=o.data("bs.alert");r||(r=new e(this),o.data("bs.alert",r)),"close"===n&&r[n](this)})},e._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},r(e,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),e}();return t(document).on(n.CLICK_DATA_API,'[data-dismiss="alert"]',i._handleDismiss(new i)),t.fn.alert=i._jQueryInterface,t.fn.alert.Constructor=i,t.fn.alert.noConflict=function(){return t.fn.alert=e,i._jQueryInterface},i}(e),c=function(t){var e="button",n=t.fn[e],o={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},i={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:"input",ACTIVE:".active",BUTTON:".btn"},a={CLICK_DATA_API:"click.bs.button.data-api",FOCUS_BLUR_DATA_API:"focus.bs.button.data-api blur.bs.button.data-api"},s=function(){function e(t){this._element=t}var n=e.prototype;return n.toggle=function(){var e=!0,n=!0,r=t(this._element).closest(i.DATA_TOGGLE)[0];if(r){var a=this._element.querySelector(i.INPUT);if(a){if("radio"===a.type)if(a.checked&&this._element.classList.contains(o.ACTIVE))e=!1;else{var s=r.querySelector(i.ACTIVE);s&&t(s).removeClass(o.ACTIVE)}if(e){if(a.hasAttribute("disabled")||r.hasAttribute("disabled")||a.classList.contains("disabled")||r.classList.contains("disabled"))return;a.checked=!this._element.classList.contains(o.ACTIVE),t(a).trigger("change")}a.focus(),n=!1}}n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(o.ACTIVE)),e&&t(this._element).toggleClass(o.ACTIVE)},n.dispose=function(){t.removeData(this._element,"bs.button"),this._element=null},e._jQueryInterface=function(n){return this.each(function(){var o=t(this).data("bs.button");o||(o=new e(this),t(this).data("bs.button",o)),"toggle"===n&&o[n]()})},r(e,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),e}();return t(document).on(a.CLICK_DATA_API,i.DATA_TOGGLE_CARROT,function(e){e.preventDefault();var n=e.target;t(n).hasClass(o.BUTTON)||(n=t(n).closest(i.BUTTON)),s._jQueryInterface.call(t(n),"toggle")}).on(a.FOCUS_BLUR_DATA_API,i.DATA_TOGGLE_CARROT,function(e){var n=t(e.target).closest(i.BUTTON)[0];t(n).toggleClass(o.FOCUS,/^focus(in)?$/.test(e.type))}),t.fn[e]=s._jQueryInterface,t.fn[e].Constructor=s,t.fn[e].noConflict=function(){return t.fn[e]=n,s._jQueryInterface},s}(e),d=function(t){var e="carousel",n="bs.carousel",o="."+n,i=t.fn[e],l={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},c={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},d={NEXT:"next",PREV:"prev",LEFT:"left",RIGHT:"right"},p={SLIDE:"slide"+o,SLID:"slid"+o,KEYDOWN:"keydown"+o,MOUSEENTER:"mouseenter"+o,MOUSELEAVE:"mouseleave"+o,TOUCHEND:"touchend"+o,LOAD_DATA_API:"load.bs.carousel.data-api",CLICK_DATA_API:"click.bs.carousel.data-api"},u={CAROUSEL:"carousel",ACTIVE:"active",SLIDE:"slide",RIGHT:"carousel-item-right",LEFT:"carousel-item-left",NEXT:"carousel-item-next",PREV:"carousel-item-prev",ITEM:"carousel-item"},m={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},f=function(){function i(e,n){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this._config=this._getConfig(n),this._element=t(e)[0],this._indicatorsElement=this._element.querySelector(m.INDICATORS),this._addEventListeners()}var f=i.prototype;return f.next=function(){this._isSliding||this._slide(d.NEXT)},f.nextWhenVisible=function(){!document.hidden&&t(this._element).is(":visible")&&"hidden"!==t(this._element).css("visibility")&&this.next()},f.prev=function(){this._isSliding||this._slide(d.PREV)},f.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(m.NEXT_PREV)&&(s.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},f.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},f.to=function(e){var n=this;this._activeElement=this._element.querySelector(m.ACTIVE_ITEM);var o=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)t(this._element).one(p.SLID,function(){return n.to(e)});else{if(o===e)return this.pause(),void this.cycle();var r=e>o?d.NEXT:d.PREV;this._slide(r,this._items[e])}},f.dispose=function(){t(this._element).off(o),t.removeData(this._element,n),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},f._getConfig=function(t){return t=a({},l,t),s.typeCheckConfig(e,t,c),t},f._addEventListeners=function(){var e=this;this._config.keyboard&&t(this._element).on(p.KEYDOWN,function(t){return e._keydown(t)}),"hover"===this._config.pause&&(t(this._element).on(p.MOUSEENTER,function(t){return e.pause(t)}).on(p.MOUSELEAVE,function(t){return e.cycle(t)}),"ontouchstart"in document.documentElement&&t(this._element).on(p.TOUCHEND,function(){e.pause(),e.touchTimeout&&clearTimeout(e.touchTimeout),e.touchTimeout=setTimeout(function(t){return e.cycle(t)},500+e._config.interval)}))},f._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},f._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(m.ITEM)):[],this._items.indexOf(t)},f._getItemByDirection=function(t,e){var n=t===d.NEXT,o=t===d.PREV,r=this._getItemIndex(e),i=this._items.length-1,a=o&&0===r||n&&r===i;if(a&&!this._config.wrap)return e;var s=t===d.PREV?-1:1,l=(r+s)%this._items.length;return-1===l?this._items[this._items.length-1]:this._items[l]},f._triggerSlideEvent=function(e,n){var o=this._getItemIndex(e),r=this._getItemIndex(this._element.querySelector(m.ACTIVE_ITEM)),i=t.Event(p.SLIDE,{relatedTarget:e,direction:n,from:r,to:o});return t(this._element).trigger(i),i},f._setActiveIndicatorElement=function(e){if(this._indicatorsElement){var n=[].slice.call(this._indicatorsElement.querySelectorAll(m.ACTIVE));t(n).removeClass(u.ACTIVE);var o=this._indicatorsElement.children[this._getItemIndex(e)];o&&t(o).addClass(u.ACTIVE)}},f._slide=function(e,n){var o,r,i,a=this,l=this._element.querySelector(m.ACTIVE_ITEM),c=this._getItemIndex(l),f=n||l&&this._getItemByDirection(e,l),g=this._getItemIndex(f),h=Boolean(this._interval);if(e===d.NEXT?(o=u.LEFT,r=u.NEXT,i=d.LEFT):(o=u.RIGHT,r=u.PREV,i=d.RIGHT),f&&t(f).hasClass(u.ACTIVE))this._isSliding=!1;else{var b=this._triggerSlideEvent(f,i);if(!b.isDefaultPrevented()&&l&&f){this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(f);var v=t.Event(p.SLID,{relatedTarget:f,direction:i,from:c,to:g});if(t(this._element).hasClass(u.SLIDE)){t(f).addClass(r),s.reflow(f),t(l).addClass(o),t(f).addClass(o);var w=s.getTransitionDurationFromElement(l);t(l).one(s.TRANSITION_END,function(){t(f).removeClass(o+" "+r).addClass(u.ACTIVE),t(l).removeClass(u.ACTIVE+" "+r+" "+o),a._isSliding=!1,setTimeout(function(){return t(a._element).trigger(v)},0)}).emulateTransitionEnd(w)}else t(l).removeClass(u.ACTIVE),t(f).addClass(u.ACTIVE),this._isSliding=!1,t(this._element).trigger(v);h&&this.cycle()}}},i._jQueryInterface=function(e){return this.each(function(){var o=t(this).data(n),r=a({},l,t(this).data());"object"==typeof e&&(r=a({},r,e));var s="string"==typeof e?e:r.slide;if(o||(o=new i(this,r),t(this).data(n,o)),"number"==typeof e)o.to(e);else if("string"==typeof s){if(void 0===o[s])throw new TypeError('No method named "'+s+'"');o[s]()}else r.interval&&(o.pause(),o.cycle())})},i._dataApiClickHandler=function(e){var o=s.getSelectorFromElement(this);if(o){var r=t(o)[0];if(r&&t(r).hasClass(u.CAROUSEL)){var l=a({},t(r).data(),t(this).data()),c=this.getAttribute("data-slide-to");c&&(l.interval=!1),i._jQueryInterface.call(t(r),l),c&&t(r).data(n).to(c),e.preventDefault()}}},r(i,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return l}}]),i}();return t(document).on(p.CLICK_DATA_API,m.DATA_SLIDE,f._dataApiClickHandler),t(window).on(p.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(m.DATA_RIDE)),n=0,o=e.length;n<o;n++){var r=t(e[n]);f._jQueryInterface.call(r,r.data())}}),t.fn[e]=f._jQueryInterface,t.fn[e].Constructor=f,t.fn[e].noConflict=function(){return t.fn[e]=i,f._jQueryInterface},f}(e),p=function(t){var e="collapse",n="bs.collapse",o=t.fn[e],i={toggle:!0,parent:""},l={toggle:"boolean",parent:"(string|element)"},c={SHOW:"show.bs.collapse",SHOWN:"shown.bs.collapse",HIDE:"hide.bs.collapse",HIDDEN:"hidden.bs.collapse",CLICK_DATA_API:"click.bs.collapse.data-api"},d={SHOW:"show",COLLAPSE:"collapse",COLLAPSING:"collapsing",COLLAPSED:"collapsed"},p={WIDTH:"width",HEIGHT:"height"},u={ACTIVES:".show, .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},m=function(){function o(e,n){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(n),this._triggerArray=t.makeArray(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var o=[].slice.call(document.querySelectorAll(u.DATA_TOGGLE)),r=0,i=o.length;r<i;r++){var a=o[r],l=s.getSelectorFromElement(a),c=[].slice.call(document.querySelectorAll(l)).filter(function(t){return t===e});null!==l&&c.length>0&&(this._selector=l,this._triggerArray.push(a))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var m=o.prototype;return m.toggle=function(){t(this._element).hasClass(d.SHOW)?this.hide():this.show()},m.show=function(){var e,r,i=this;if(!(this._isTransitioning||t(this._element).hasClass(d.SHOW)||(this._parent&&0===(e=[].slice.call(this._parent.querySelectorAll(u.ACTIVES)).filter(function(t){return t.getAttribute("data-parent")===i._config.parent})).length&&(e=null),e&&(r=t(e).not(this._selector).data(n))&&r._isTransitioning))){var a=t.Event(c.SHOW);if(t(this._element).trigger(a),!a.isDefaultPrevented()){e&&(o._jQueryInterface.call(t(e).not(this._selector),"hide"),r||t(e).data(n,null));var l=this._getDimension();t(this._element).removeClass(d.COLLAPSE).addClass(d.COLLAPSING),this._element.style[l]=0,this._triggerArray.length&&t(this._triggerArray).removeClass(d.COLLAPSED).attr("aria-expanded",!0),this.setTransitioning(!0);var p=l[0].toUpperCase()+l.slice(1),m="scroll"+p,f=s.getTransitionDurationFromElement(this._element);t(this._element).one(s.TRANSITION_END,function(){t(i._element).removeClass(d.COLLAPSING).addClass(d.COLLAPSE).addClass(d.SHOW),i._element.style[l]="",i.setTransitioning(!1),t(i._element).trigger(c.SHOWN)}).emulateTransitionEnd(f),this._element.style[l]=this._element[m]+"px"}}},m.hide=function(){var e=this;if(!this._isTransitioning&&t(this._element).hasClass(d.SHOW)){var n=t.Event(c.HIDE);if(t(this._element).trigger(n),!n.isDefaultPrevented()){var o=this._getDimension();this._element.style[o]=this._element.getBoundingClientRect()[o]+"px",s.reflow(this._element),t(this._element).addClass(d.COLLAPSING).removeClass(d.COLLAPSE).removeClass(d.SHOW);var r=this._triggerArray.length;if(r>0)for(var i=0;i<r;i++){var a=this._triggerArray[i],l=s.getSelectorFromElement(a);if(null!==l){var p=t([].slice.call(document.querySelectorAll(l)));p.hasClass(d.SHOW)||t(a).addClass(d.COLLAPSED).attr("aria-expanded",!1)}}this.setTransitioning(!0),this._element.style[o]="";var u=s.getTransitionDurationFromElement(this._element);t(this._element).one(s.TRANSITION_END,function(){e.setTransitioning(!1),t(e._element).removeClass(d.COLLAPSING).addClass(d.COLLAPSE).trigger(c.HIDDEN)}).emulateTransitionEnd(u)}}},m.setTransitioning=function(t){this._isTransitioning=t},m.dispose=function(){t.removeData(this._element,n),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},m._getConfig=function(t){return(t=a({},i,t)).toggle=Boolean(t.toggle),s.typeCheckConfig(e,t,l),t},m._getDimension=function(){var e=t(this._element).hasClass(p.WIDTH);return e?p.WIDTH:p.HEIGHT},m._getParent=function(){var e=this,n=null;s.isElement(this._config.parent)?(n=this._config.parent,void 0!==this._config.parent.jquery&&(n=this._config.parent[0])):n=document.querySelector(this._config.parent);var r='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',i=[].slice.call(n.querySelectorAll(r));return t(i).each(function(t,n){e._addAriaAndCollapsedClass(o._getTargetFromElement(n),[n])}),n},m._addAriaAndCollapsedClass=function(e,n){if(e){var o=t(e).hasClass(d.SHOW);n.length&&t(n).toggleClass(d.COLLAPSED,!o).attr("aria-expanded",o)}},o._getTargetFromElement=function(t){var e=s.getSelectorFromElement(t);return e?document.querySelector(e):null},o._jQueryInterface=function(e){return this.each(function(){var r=t(this),s=r.data(n),l=a({},i,r.data(),"object"==typeof e&&e?e:{});if(!s&&l.toggle&&/show|hide/.test(e)&&(l.toggle=!1),s||(s=new o(this,l),r.data(n,s)),"string"==typeof e){if(void 0===s[e])throw new TypeError('No method named "'+e+'"');s[e]()}})},r(o,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return i}}]),o}();return t(document).on(c.CLICK_DATA_API,u.DATA_TOGGLE,function(e){"A"===e.currentTarget.tagName&&e.preventDefault();var o=t(this),r=s.getSelectorFromElement(this),i=[].slice.call(document.querySelectorAll(r));t(i).each(function(){var e=t(this),r=e.data(n),i=r?"toggle":o.data();m._jQueryInterface.call(e,i)})}),t.fn[e]=m._jQueryInterface,t.fn[e].Constructor=m,t.fn[e].noConflict=function(){return t.fn[e]=o,m._jQueryInterface},m}(e),u=function(t){var e="dropdown",o="bs.dropdown",i="."+o,l=t.fn[e],c=new RegExp("38|40|27"),d={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,CLICK:"click"+i,CLICK_DATA_API:"click.bs.dropdown.data-api",KEYDOWN_DATA_API:"keydown.bs.dropdown.data-api",KEYUP_DATA_API:"keyup.bs.dropdown.data-api"},p={DISABLED:"disabled",SHOW:"show",DROPUP:"dropup",DROPRIGHT:"dropright",DROPLEFT:"dropleft",MENURIGHT:"dropdown-menu-right",MENULEFT:"dropdown-menu-left",POSITION_STATIC:"position-static"},u={DATA_TOGGLE:'[data-toggle="dropdown"]',FORM_CHILD:".dropdown form",MENU:".dropdown-menu",NAVBAR_NAV:".navbar-nav",VISIBLE_ITEMS:".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)"},m={TOP:"top-start",TOPEND:"top-end",BOTTOM:"bottom-start",BOTTOMEND:"bottom-end",RIGHT:"right-start",RIGHTEND:"right-end",LEFT:"left-start",LEFTEND:"left-end"},f={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic"},g={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string"},h=function(){function l(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var h=l.prototype;return h.toggle=function(){if(!this._element.disabled&&!t(this._element).hasClass(p.DISABLED)){var e=l._getParentFromElement(this._element),o=t(this._menu).hasClass(p.SHOW);if(l._clearMenus(),!o){var r={relatedTarget:this._element},i=t.Event(d.SHOW,r);if(t(e).trigger(i),!i.isDefaultPrevented()){if(!this._inNavbar){if(void 0===n)throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");var a=this._element;"parent"===this._config.reference?a=e:s.isElement(this._config.reference)&&(a=this._config.reference,void 0!==this._config.reference.jquery&&(a=this._config.reference[0])),"scrollParent"!==this._config.boundary&&t(e).addClass(p.POSITION_STATIC),this._popper=new n(a,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===t(e).closest(u.NAVBAR_NAV).length&&t(document.body).children().on("mouseover",null,t.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),t(this._menu).toggleClass(p.SHOW),t(e).toggleClass(p.SHOW).trigger(t.Event(d.SHOWN,r))}}}},h.dispose=function(){t.removeData(this._element,o),t(this._element).off(i),this._element=null,this._menu=null,null!==this._popper&&(this._popper.destroy(),this._popper=null)},h.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},h._addEventListeners=function(){var e=this;t(this._element).on(d.CLICK,function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},h._getConfig=function(n){return n=a({},this.constructor.Default,t(this._element).data(),n),s.typeCheckConfig(e,n,this.constructor.DefaultType),n},h._getMenuElement=function(){if(!this._menu){var t=l._getParentFromElement(this._element);t&&(this._menu=t.querySelector(u.MENU))}return this._menu},h._getPlacement=function(){var e=t(this._element.parentNode),n=m.BOTTOM;return e.hasClass(p.DROPUP)?(n=m.TOP,t(this._menu).hasClass(p.MENURIGHT)&&(n=m.TOPEND)):e.hasClass(p.DROPRIGHT)?n=m.RIGHT:e.hasClass(p.DROPLEFT)?n=m.LEFT:t(this._menu).hasClass(p.MENURIGHT)&&(n=m.BOTTOMEND),n},h._detectNavbar=function(){return t(this._element).closest(".navbar").length>0},h._getPopperConfig=function(){var t=this,e={};"function"==typeof this._config.offset?e.fn=function(e){return e.offsets=a({},e.offsets,t._config.offset(e.offsets)||{}),e}:e.offset=this._config.offset;var n={placement:this._getPlacement(),modifiers:{offset:e,flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(n.modifiers.applyStyle={enabled:!1}),n},l._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(o),r="object"==typeof e?e:null;if(n||(n=new l(this,r),t(this).data(o,n)),"string"==typeof e){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}})},l._clearMenus=function(e){if(!e||3!==e.which&&("keyup"!==e.type||9===e.which))for(var n=[].slice.call(document.querySelectorAll(u.DATA_TOGGLE)),r=0,i=n.length;r<i;r++){var a=l._getParentFromElement(n[r]),s=t(n[r]).data(o),c={relatedTarget:n[r]};if(e&&"click"===e.type&&(c.clickEvent=e),s){var m=s._menu;if(t(a).hasClass(p.SHOW)&&!(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&9===e.which)&&t.contains(a,e.target))){var f=t.Event(d.HIDE,c);t(a).trigger(f),f.isDefaultPrevented()||("ontouchstart"in document.documentElement&&t(document.body).children().off("mouseover",null,t.noop),n[r].setAttribute("aria-expanded","false"),t(m).removeClass(p.SHOW),t(a).removeClass(p.SHOW).trigger(t.Event(d.HIDDEN,c)))}}}},l._getParentFromElement=function(t){var e,n=s.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},l._dataApiKeydownHandler=function(e){if((/input|textarea/i.test(e.target.tagName)?!(32===e.which||27!==e.which&&(40!==e.which&&38!==e.which||t(e.target).closest(u.MENU).length)):c.test(e.which))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!t(this).hasClass(p.DISABLED))){var n=l._getParentFromElement(this),o=t(n).hasClass(p.SHOW);if((o||27===e.which&&32===e.which)&&(!o||27!==e.which&&32!==e.which)){var r=[].slice.call(n.querySelectorAll(u.VISIBLE_ITEMS));if(0!==r.length){var i=r.indexOf(e.target);38===e.which&&i>0&&i--,40===e.which&&i<r.length-1&&i++,i<0&&(i=0),r[i].focus()}}else{if(27===e.which){var a=n.querySelector(u.DATA_TOGGLE);t(a).trigger("focus")}t(this).trigger("click")}}},r(l,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return f}},{key:"DefaultType",get:function(){return g}}]),l}();return t(document).on(d.KEYDOWN_DATA_API,u.DATA_TOGGLE,h._dataApiKeydownHandler).on(d.KEYDOWN_DATA_API,u.MENU,h._dataApiKeydownHandler).on(d.CLICK_DATA_API+" "+d.KEYUP_DATA_API,h._clearMenus).on(d.CLICK_DATA_API,u.DATA_TOGGLE,function(e){e.preventDefault(),e.stopPropagation(),h._jQueryInterface.call(t(this),"toggle")}).on(d.CLICK_DATA_API,u.FORM_CHILD,function(t){t.stopPropagation()}),t.fn[e]=h._jQueryInterface,t.fn[e].Constructor=h,t.fn[e].noConflict=function(){return t.fn[e]=l,h._jQueryInterface},h}(e),m=function(t){var e="modal",n=".bs.modal",o=t.fn.modal,i={backdrop:!0,keyboard:!0,focus:!0,show:!0},l={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},c={HIDE:"hide.bs.modal",HIDDEN:"hidden.bs.modal",SHOW:"show.bs.modal",SHOWN:"shown.bs.modal",FOCUSIN:"focusin.bs.modal",RESIZE:"resize.bs.modal",CLICK_DISMISS:"click.dismiss.bs.modal",KEYDOWN_DISMISS:"keydown.dismiss.bs.modal",MOUSEUP_DISMISS:"mouseup.dismiss.bs.modal",MOUSEDOWN_DISMISS:"mousedown.dismiss.bs.modal",CLICK_DATA_API:"click.bs.modal.data-api"},d={SCROLLBAR_MEASURER:"modal-scrollbar-measure",BACKDROP:"modal-backdrop",OPEN:"modal-open",FADE:"fade",SHOW:"show"},p={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",STICKY_CONTENT:".sticky-top"},u=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(p.DIALOG),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._scrollbarWidth=0}var u=o.prototype;return u.toggle=function(t){return this._isShown?this.hide():this.show(t)},u.show=function(e){var n=this;if(!this._isTransitioning&&!this._isShown){t(this._element).hasClass(d.FADE)&&(this._isTransitioning=!0);var o=t.Event(c.SHOW,{relatedTarget:e});t(this._element).trigger(o),this._isShown||o.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),t(document.body).addClass(d.OPEN),this._setEscapeEvent(),this._setResizeEvent(),t(this._element).on(c.CLICK_DISMISS,p.DATA_DISMISS,function(t){return n.hide(t)}),t(this._dialog).on(c.MOUSEDOWN_DISMISS,function(){t(n._element).one(c.MOUSEUP_DISMISS,function(e){t(e.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(e)}))}},u.hide=function(e){var n=this;if(e&&e.preventDefault(),!this._isTransitioning&&this._isShown){var o=t.Event(c.HIDE);if(t(this._element).trigger(o),this._isShown&&!o.isDefaultPrevented()){this._isShown=!1;var r=t(this._element).hasClass(d.FADE);if(r&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),t(document).off(c.FOCUSIN),t(this._element).removeClass(d.SHOW),t(this._element).off(c.CLICK_DISMISS),t(this._dialog).off(c.MOUSEDOWN_DISMISS),r){var i=s.getTransitionDurationFromElement(this._element);t(this._element).one(s.TRANSITION_END,function(t){return n._hideModal(t)}).emulateTransitionEnd(i)}else this._hideModal()}}},u.dispose=function(){t.removeData(this._element,"bs.modal"),t(window,document,this._element,this._backdrop).off(n),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},u.handleUpdate=function(){this._adjustDialog()},u._getConfig=function(t){return t=a({},i,t),s.typeCheckConfig(e,t,l),t},u._showElement=function(e){var n=this,o=t(this._element).hasClass(d.FADE);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,o&&s.reflow(this._element),t(this._element).addClass(d.SHOW),this._config.focus&&this._enforceFocus();var r=t.Event(c.SHOWN,{relatedTarget:e}),i=function(){n._config.focus&&n._element.focus(),n._isTransitioning=!1,t(n._element).trigger(r)};if(o){var a=s.getTransitionDurationFromElement(this._element);t(this._dialog).one(s.TRANSITION_END,i).emulateTransitionEnd(a)}else i()},u._enforceFocus=function(){var e=this;t(document).off(c.FOCUSIN).on(c.FOCUSIN,function(n){document!==n.target&&e._element!==n.target&&0===t(e._element).has(n.target).length&&e._element.focus()})},u._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?t(this._element).on(c.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||t(this._element).off(c.KEYDOWN_DISMISS)},u._setResizeEvent=function(){var e=this;this._isShown?t(window).on(c.RESIZE,function(t){return e.handleUpdate(t)}):t(window).off(c.RESIZE)},u._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){t(document.body).removeClass(d.OPEN),e._resetAdjustments(),e._resetScrollbar(),t(e._element).trigger(c.HIDDEN)})},u._removeBackdrop=function(){this._backdrop&&(t(this._backdrop).remove(),this._backdrop=null)},u._showBackdrop=function(e){var n=this,o=t(this._element).hasClass(d.FADE)?d.FADE:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className=d.BACKDROP,o&&this._backdrop.classList.add(o),t(this._backdrop).appendTo(document.body),t(this._element).on(c.CLICK_DISMISS,function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===n._config.backdrop?n._element.focus():n.hide())}),o&&s.reflow(this._backdrop),t(this._backdrop).addClass(d.SHOW),!e)return;if(!o)return void e();var r=s.getTransitionDurationFromElement(this._backdrop);t(this._backdrop).one(s.TRANSITION_END,e).emulateTransitionEnd(r)}else if(!this._isShown&&this._backdrop){t(this._backdrop).removeClass(d.SHOW);var i=function(){n._removeBackdrop(),e&&e()};if(t(this._element).hasClass(d.FADE)){var a=s.getTransitionDurationFromElement(this._backdrop);t(this._backdrop).one(s.TRANSITION_END,i).emulateTransitionEnd(a)}else i()}else e&&e()},u._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},u._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},u._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},u._setScrollbar=function(){var e=this;if(this._isBodyOverflowing){var n=[].slice.call(document.querySelectorAll(p.FIXED_CONTENT)),o=[].slice.call(document.querySelectorAll(p.STICKY_CONTENT));t(n).each(function(n,o){var r=o.style.paddingRight,i=t(o).css("padding-right");t(o).data("padding-right",r).css("padding-right",parseFloat(i)+e._scrollbarWidth+"px")}),t(o).each(function(n,o){var r=o.style.marginRight,i=t(o).css("margin-right");t(o).data("margin-right",r).css("margin-right",parseFloat(i)-e._scrollbarWidth+"px")});var r=document.body.style.paddingRight,i=t(document.body).css("padding-right");t(document.body).data("padding-right",r).css("padding-right",parseFloat(i)+this._scrollbarWidth+"px")}},u._resetScrollbar=function(){var e=[].slice.call(document.querySelectorAll(p.FIXED_CONTENT));t(e).each(function(e,n){var o=t(n).data("padding-right");t(n).removeData("padding-right"),n.style.paddingRight=o||""});var n=[].slice.call(document.querySelectorAll(""+p.STICKY_CONTENT));t(n).each(function(e,n){var o=t(n).data("margin-right");void 0!==o&&t(n).css("margin-right",o).removeData("margin-right")});var o=t(document.body).data("padding-right");t(document.body).removeData("padding-right"),document.body.style.paddingRight=o||""},u._getScrollbarWidth=function(){var t=document.createElement("div");t.className=d.SCROLLBAR_MEASURER,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(e,n){return this.each(function(){var r=t(this).data("bs.modal"),s=a({},i,t(this).data(),"object"==typeof e&&e?e:{});if(r||(r=new o(this,s),t(this).data("bs.modal",r)),"string"==typeof e){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e](n)}else s.show&&r.show(n)})},r(o,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return i}}]),o}();return t(document).on(c.CLICK_DATA_API,p.DATA_TOGGLE,function(e){var n,o=this,r=s.getSelectorFromElement(this);r&&(n=document.querySelector(r));var i=t(n).data("bs.modal")?"toggle":a({},t(n).data(),t(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault();var l=t(n).one(c.SHOW,function(e){e.isDefaultPrevented()||l.one(c.HIDDEN,function(){t(o).is(":visible")&&o.focus()})});u._jQueryInterface.call(t(n),i,this)}),t.fn.modal=u._jQueryInterface,t.fn.modal.Constructor=u,t.fn.modal.noConflict=function(){return t.fn.modal=o,u._jQueryInterface},u}(e),f=function(t){var e="tooltip",o=".bs.tooltip",i=t.fn[e],l=new RegExp("(^|\\s)bs-tooltip\\S+","g"),c={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)"},d={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},p={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent"},u={SHOW:"show",OUT:"out"},m={HIDE:"hide"+o,HIDDEN:"hidden"+o,SHOW:"show"+o,SHOWN:"shown"+o,INSERTED:"inserted"+o,CLICK:"click"+o,FOCUSIN:"focusin"+o,FOCUSOUT:"focusout"+o,MOUSEENTER:"mouseenter"+o,MOUSELEAVE:"mouseleave"+o},f={FADE:"fade",SHOW:"show"},g={TOOLTIP:".tooltip",TOOLTIP_INNER:".tooltip-inner",ARROW:".arrow"},h={HOVER:"hover",FOCUS:"focus",CLICK:"click",MANUAL:"manual"},b=function(){function i(t,e){if(void 0===n)throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var b=i.prototype;return b.enable=function(){this._isEnabled=!0},b.disable=function(){this._isEnabled=!1},b.toggleEnabled=function(){this._isEnabled=!this._isEnabled},b.toggle=function(e){if(this._isEnabled)if(e){var n=this.constructor.DATA_KEY,o=t(e.currentTarget).data(n);o||(o=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(n,o)),o._activeTrigger.click=!o._activeTrigger.click,o._isWithActiveTrigger()?o._enter(null,o):o._leave(null,o)}else{if(t(this.getTipElement()).hasClass(f.SHOW))return void this._leave(null,this);this._enter(null,this)}},b.dispose=function(){clearTimeout(this._timeout),t.removeData(this.element,this.constructor.DATA_KEY),t(this.element).off(this.constructor.EVENT_KEY),t(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&t(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,null!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},b.show=function(){var e=this;if("none"===t(this.element).css("display"))throw new Error("Please use show on visible elements");var o=t.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){t(this.element).trigger(o);var r=t.contains(this.element.ownerDocument.documentElement,this.element);if(o.isDefaultPrevented()||!r)return;var i=this.getTipElement(),a=s.getUID(this.constructor.NAME);i.setAttribute("id",a),this.element.setAttribute("aria-describedby",a),this.setContent(),this.config.animation&&t(i).addClass(f.FADE);var l="function"==typeof this.config.placement?this.config.placement.call(this,i,this.element):this.config.placement,c=this._getAttachment(l);this.addAttachmentClass(c);var d=!1===this.config.container?document.body:t(document).find(this.config.container);t(i).data(this.constructor.DATA_KEY,this),t.contains(this.element.ownerDocument.documentElement,this.tip)||t(i).appendTo(d),t(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new n(this.element,i,{placement:c,modifiers:{offset:{offset:this.config.offset},flip:{behavior:this.config.fallbackPlacement},arrow:{element:g.ARROW},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){e._handlePopperPlacementChange(t)}}),t(i).addClass(f.SHOW),"ontouchstart"in document.documentElement&&t(document.body).children().on("mouseover",null,t.noop);var p=function(){e.config.animation&&e._fixTransition();var n=e._hoverState;e._hoverState=null,t(e.element).trigger(e.constructor.Event.SHOWN),n===u.OUT&&e._leave(null,e)};if(t(this.tip).hasClass(f.FADE)){var m=s.getTransitionDurationFromElement(this.tip);t(this.tip).one(s.TRANSITION_END,p).emulateTransitionEnd(m)}else p()}},b.hide=function(e){var n=this,o=this.getTipElement(),r=t.Event(this.constructor.Event.HIDE),i=function(){n._hoverState!==u.SHOW&&o.parentNode&&o.parentNode.removeChild(o),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),t(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),e&&e()};if(t(this.element).trigger(r),!r.isDefaultPrevented()){if(t(o).removeClass(f.SHOW),"ontouchstart"in document.documentElement&&t(document.body).children().off("mouseover",null,t.noop),this._activeTrigger[h.CLICK]=!1,this._activeTrigger[h.FOCUS]=!1,this._activeTrigger[h.HOVER]=!1,t(this.tip).hasClass(f.FADE)){var a=s.getTransitionDurationFromElement(o);t(o).one(s.TRANSITION_END,i).emulateTransitionEnd(a)}else i();this._hoverState=""}},b.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},b.isWithContent=function(){return Boolean(this.getTitle())},b.addAttachmentClass=function(e){t(this.getTipElement()).addClass("bs-tooltip-"+e)},b.getTipElement=function(){return this.tip=this.tip||t(this.config.template)[0],this.tip},b.setContent=function(){var e=this.getTipElement();this.setElementContent(t(e.querySelectorAll(g.TOOLTIP_INNER)),this.getTitle()),t(e).removeClass(f.FADE+" "+f.SHOW)},b.setElementContent=function(e,n){var o=this.config.html;"object"==typeof n&&(n.nodeType||n.jquery)?o?t(n).parent().is(e)||e.empty().append(n):e.text(t(n).text()):e[o?"html":"text"](n)},b.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},b._getAttachment=function(t){return d[t.toUpperCase()]},b._setListeners=function(){var e=this,n=this.config.trigger.split(" ");n.forEach(function(n){if("click"===n)t(e.element).on(e.constructor.Event.CLICK,e.config.selector,function(t){return e.toggle(t)});else if(n!==h.MANUAL){var o=n===h.HOVER?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,r=n===h.HOVER?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;t(e.element).on(o,e.config.selector,function(t){return e._enter(t)}).on(r,e.config.selector,function(t){return e._leave(t)})}t(e.element).closest(".modal").on("hide.bs.modal",function(){return e.hide()})}),this.config.selector?this.config=a({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},b._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},b._enter=function(e,n){var o=this.constructor.DATA_KEY;(n=n||t(e.currentTarget).data(o))||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(o,n)),e&&(n._activeTrigger["focusin"===e.type?h.FOCUS:h.HOVER]=!0),t(n.getTipElement()).hasClass(f.SHOW)||n._hoverState===u.SHOW?n._hoverState=u.SHOW:(clearTimeout(n._timeout),n._hoverState=u.SHOW,n.config.delay&&n.config.delay.show?n._timeout=setTimeout(function(){n._hoverState===u.SHOW&&n.show()},n.config.delay.show):n.show())},b._leave=function(e,n){var o=this.constructor.DATA_KEY;(n=n||t(e.currentTarget).data(o))||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(o,n)),e&&(n._activeTrigger["focusout"===e.type?h.FOCUS:h.HOVER]=!1),n._isWithActiveTrigger()||(clearTimeout(n._timeout),n._hoverState=u.OUT,n.config.delay&&n.config.delay.hide?n._timeout=setTimeout(function(){n._hoverState===u.OUT&&n.hide()},n.config.delay.hide):n.hide())},b._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},b._getConfig=function(n){return"number"==typeof(n=a({},this.constructor.Default,t(this.element).data(),"object"==typeof n&&n?n:{})).delay&&(n.delay={show:n.delay,hide:n.delay}),"number"==typeof n.title&&(n.title=n.title.toString()),"number"==typeof n.content&&(n.content=n.content.toString()),s.typeCheckConfig(e,n,this.constructor.DefaultType),n},b._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},b._cleanTipClass=function(){var e=t(this.getTipElement()),n=e.attr("class").match(l);null!==n&&n.length&&e.removeClass(n.join(""))},b._handlePopperPlacementChange=function(t){var e=t.instance;this.tip=e.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},b._fixTransition=function(){var e=this.getTipElement(),n=this.config.animation;null===e.getAttribute("x-placement")&&(t(e).removeClass(f.FADE),this.config.animation=!1,this.hide(),this.show(),this.config.animation=n)},i._jQueryInterface=function(e){return this.each(function(){var n=t(this).data("bs.tooltip"),o="object"==typeof e&&e;if((n||!/dispose|hide/.test(e))&&(n||(n=new i(this,o),t(this).data("bs.tooltip",n)),"string"==typeof e)){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return p}},{key:"NAME",get:function(){return e}},{key:"DATA_KEY",get:function(){return"bs.tooltip"}},{key:"Event",get:function(){return m}},{key:"EVENT_KEY",get:function(){return o}},{key:"DefaultType",get:function(){return c}}]),i}();return t.fn[e]=b._jQueryInterface,t.fn[e].Constructor=b,t.fn[e].noConflict=function(){return t.fn[e]=i,b._jQueryInterface},b}(e),g=function(t){var e="popover",n=".bs.popover",o=t.fn[e],i=new RegExp("(^|\\s)bs-popover\\S+","g"),s=a({},f.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),l=a({},f.DefaultType,{content:"(string|element|function)"}),c={FADE:"fade",SHOW:"show"},d={TITLE:".popover-header",CONTENT:".popover-body"},p={HIDE:"hide"+n,HIDDEN:"hidden"+n,SHOW:"show"+n,SHOWN:"shown"+n,INSERTED:"inserted"+n,CLICK:"click"+n,FOCUSIN:"focusin"+n,FOCUSOUT:"focusout"+n,MOUSEENTER:"mouseenter"+n,MOUSELEAVE:"mouseleave"+n},u=function(o){var a,u;function m(){return o.apply(this,arguments)||this}u=o,(a=m).prototype=Object.create(u.prototype),a.prototype.constructor=a,a.__proto__=u;var f=m.prototype;return f.isWithContent=function(){return this.getTitle()||this._getContent()},f.addAttachmentClass=function(e){t(this.getTipElement()).addClass("bs-popover-"+e)},f.getTipElement=function(){return this.tip=this.tip||t(this.config.template)[0],this.tip},f.setContent=function(){var e=t(this.getTipElement());this.setElementContent(e.find(d.TITLE),this.getTitle());var n=this._getContent();"function"==typeof n&&(n=n.call(this.element)),this.setElementContent(e.find(d.CONTENT),n),e.removeClass(c.FADE+" "+c.SHOW)},f._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},f._cleanTipClass=function(){var e=t(this.getTipElement()),n=e.attr("class").match(i);null!==n&&n.length>0&&e.removeClass(n.join(""))},m._jQueryInterface=function(e){return this.each(function(){var n=t(this).data("bs.popover"),o="object"==typeof e?e:null;if((n||!/destroy|hide/.test(e))&&(n||(n=new m(this,o),t(this).data("bs.popover",n)),"string"==typeof e)){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}})},r(m,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return s}},{key:"NAME",get:function(){return e}},{key:"DATA_KEY",get:function(){return"bs.popover"}},{key:"Event",get:function(){return p}},{key:"EVENT_KEY",get:function(){return n}},{key:"DefaultType",get:function(){return l}}]),m}(f);return t.fn[e]=u._jQueryInterface,t.fn[e].Constructor=u,t.fn[e].noConflict=function(){return t.fn[e]=o,u._jQueryInterface},u}(e),h=function(t){var e="scrollspy",n=t.fn[e],o={offset:10,method:"auto",target:""},i={offset:"number",method:"string",target:"(string|element)"},l={ACTIVATE:"activate.bs.scrollspy",SCROLL:"scroll.bs.scrollspy",LOAD_DATA_API:"load.bs.scrollspy.data-api"},c={DROPDOWN_ITEM:"dropdown-item",DROPDOWN_MENU:"dropdown-menu",ACTIVE:"active"},d={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",NAV_LIST_GROUP:".nav, .list-group",NAV_LINKS:".nav-link",NAV_ITEMS:".nav-item",LIST_ITEMS:".list-group-item",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},p={OFFSET:"offset",POSITION:"position"},u=function(){function n(e,n){var o=this;this._element=e,this._scrollElement="BODY"===e.tagName?window:e,this._config=this._getConfig(n),this._selector=this._config.target+" "+d.NAV_LINKS+","+this._config.target+" "+d.LIST_ITEMS+","+this._config.target+" "+d.DROPDOWN_ITEMS,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,t(this._scrollElement).on(l.SCROLL,function(t){return o._process(t)}),this.refresh(),this._process()}var u=n.prototype;return u.refresh=function(){var e=this,n=this._scrollElement===this._scrollElement.window?p.OFFSET:p.POSITION,o="auto"===this._config.method?n:this._config.method,r=o===p.POSITION?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();var i=[].slice.call(document.querySelectorAll(this._selector));i.map(function(e){var n,i=s.getSelectorFromElement(e);if(i&&(n=document.querySelector(i)),n){var a=n.getBoundingClientRect();if(a.width||a.height)return[t(n)[o]().top+r,i]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},u.dispose=function(){t.removeData(this._element,"bs.scrollspy"),t(this._scrollElement).off(".bs.scrollspy"),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},u._getConfig=function(n){if("string"!=typeof(n=a({},o,"object"==typeof n&&n?n:{})).target){var r=t(n.target).attr("id");r||(r=s.getUID(e),t(n.target).attr("id",r)),n.target="#"+r}return s.typeCheckConfig(e,n,i),n},u._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},u._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},u._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},u._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){var o=this._targets[this._targets.length-1];this._activeTarget!==o&&this._activate(o)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var r=this._offsets.length,i=r;i--;){var a=this._activeTarget!==this._targets[i]&&t>=this._offsets[i]&&(void 0===this._offsets[i+1]||t<this._offsets[i+1]);a&&this._activate(this._targets[i])}}},u._activate=function(e){this._activeTarget=e,this._clear();var n=this._selector.split(",");n=n.map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'});var o=t([].slice.call(document.querySelectorAll(n.join(","))));o.hasClass(c.DROPDOWN_ITEM)?(o.closest(d.DROPDOWN).find(d.DROPDOWN_TOGGLE).addClass(c.ACTIVE),o.addClass(c.ACTIVE)):(o.addClass(c.ACTIVE),o.parents(d.NAV_LIST_GROUP).prev(d.NAV_LINKS+", "+d.LIST_ITEMS).addClass(c.ACTIVE),o.parents(d.NAV_LIST_GROUP).prev(d.NAV_ITEMS).children(d.NAV_LINKS).addClass(c.ACTIVE)),t(this._scrollElement).trigger(l.ACTIVATE,{relatedTarget:e})},u._clear=function(){var e=[].slice.call(document.querySelectorAll(this._selector));t(e).filter(d.ACTIVE).removeClass(c.ACTIVE)},n._jQueryInterface=function(e){return this.each(function(){var o=t(this).data("bs.scrollspy"),r="object"==typeof e&&e;if(o||(o=new n(this,r),t(this).data("bs.scrollspy",o)),"string"==typeof e){if(void 0===o[e])throw new TypeError('No method named "'+e+'"');o[e]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return o}}]),n}();return t(window).on(l.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(d.DATA_SPY)),n=e.length,o=n;o--;){var r=t(e[o]);u._jQueryInterface.call(r,r.data())}}),t.fn[e]=u._jQueryInterface,t.fn[e].Constructor=u,t.fn[e].noConflict=function(){return t.fn[e]=n,u._jQueryInterface},u}(e),b=function(t){var e=t.fn.tab,n={HIDE:"hide.bs.tab",HIDDEN:"hidden.bs.tab",SHOW:"show.bs.tab",SHOWN:"shown.bs.tab",CLICK_DATA_API:"click.bs.tab.data-api"},o={DROPDOWN_MENU:"dropdown-menu",ACTIVE:"active",DISABLED:"disabled",FADE:"fade",SHOW:"show"},i={DROPDOWN:".dropdown",NAV_LIST_GROUP:".nav, .list-group",ACTIVE:".active",ACTIVE_UL:"> li > .active",DATA_TOGGLE:'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',DROPDOWN_TOGGLE:".dropdown-toggle",DROPDOWN_ACTIVE_CHILD:"> .dropdown-menu .active"},a=function(){function e(t){this._element=t}var a=e.prototype;return a.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&t(this._element).hasClass(o.ACTIVE)||t(this._element).hasClass(o.DISABLED))){var r,a,l=t(this._element).closest(i.NAV_LIST_GROUP)[0],c=s.getSelectorFromElement(this._element);if(l){var d="UL"===l.nodeName?i.ACTIVE_UL:i.ACTIVE;a=(a=t.makeArray(t(l).find(d)))[a.length-1]}var p=t.Event(n.HIDE,{relatedTarget:this._element}),u=t.Event(n.SHOW,{relatedTarget:a});if(a&&t(a).trigger(p),t(this._element).trigger(u),!u.isDefaultPrevented()&&!p.isDefaultPrevented()){c&&(r=document.querySelector(c)),this._activate(this._element,l);var m=function(){var o=t.Event(n.HIDDEN,{relatedTarget:e._element}),r=t.Event(n.SHOWN,{relatedTarget:a});t(a).trigger(o),t(e._element).trigger(r)};r?this._activate(r,r.parentNode,m):m()}}},a.dispose=function(){t.removeData(this._element,"bs.tab"),this._element=null},a._activate=function(e,n,r){var a=this,l=("UL"===n.nodeName?t(n).find(i.ACTIVE_UL):t(n).children(i.ACTIVE))[0],c=r&&l&&t(l).hasClass(o.FADE),d=function(){return a._transitionComplete(e,l,r)};if(l&&c){var p=s.getTransitionDurationFromElement(l);t(l).one(s.TRANSITION_END,d).emulateTransitionEnd(p)}else d()},a._transitionComplete=function(e,n,r){if(n){t(n).removeClass(o.SHOW+" "+o.ACTIVE);var a=t(n.parentNode).find(i.DROPDOWN_ACTIVE_CHILD)[0];a&&t(a).removeClass(o.ACTIVE),"tab"===n.getAttribute("role")&&n.setAttribute("aria-selected",!1)}if(t(e).addClass(o.ACTIVE),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),s.reflow(e),t(e).addClass(o.SHOW),e.parentNode&&t(e.parentNode).hasClass(o.DROPDOWN_MENU)){var l=t(e).closest(i.DROPDOWN)[0];if(l){var c=[].slice.call(l.querySelectorAll(i.DROPDOWN_TOGGLE));t(c).addClass(o.ACTIVE)}e.setAttribute("aria-expanded",!0)}r&&r()},e._jQueryInterface=function(n){return this.each(function(){var o=t(this),r=o.data("bs.tab");if(r||(r=new e(this),o.data("bs.tab",r)),"string"==typeof n){if(void 0===r[n])throw new TypeError('No method named "'+n+'"');r[n]()}})},r(e,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),e}();return t(document).on(n.CLICK_DATA_API,i.DATA_TOGGLE,function(e){e.preventDefault(),a._jQueryInterface.call(t(this),"show")}),t.fn.tab=a._jQueryInterface,t.fn.tab.Constructor=a,t.fn.tab.noConflict=function(){return t.fn.tab=e,a._jQueryInterface},a}(e);(function(t){if(void 0===t)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1===e[0]&&9===e[1]&&e[2]<1||e[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")})(e),t.Util=s,t.Alert=l,t.Button=c,t.Carousel=d,t.Collapse=p,t.Dropdown=u,t.Modal=m,t.Popover=g,t.Scrollspy=h,t.Tab=b,t.Tooltip=f,Object.defineProperty(t,"__esModule",{value:!0})}(e,n(3),n(58))},function(t,e,n){"use strict";n.r(e),function(t){for(
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.14.6
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var n="undefined"!=typeof window&&"undefined"!=typeof document,o=["Edge","Trident","Firefox"],r=0,i=0;i<o.length;i+=1)if(n&&navigator.userAgent.indexOf(o[i])>=0){r=1;break}var a=n&&window.Promise?function(t){var e=!1;return function(){e||(e=!0,window.Promise.resolve().then(function(){e=!1,t()}))}}:function(t){var e=!1;return function(){e||(e=!0,setTimeout(function(){e=!1,t()},r))}};function s(t){return t&&"[object Function]"==={}.toString.call(t)}function l(t,e){if(1!==t.nodeType)return[];var n=t.ownerDocument.defaultView.getComputedStyle(t,null);return e?n[e]:n}function c(t){return"HTML"===t.nodeName?t:t.parentNode||t.host}function d(t){if(!t)return document.body;switch(t.nodeName){case"HTML":case"BODY":return t.ownerDocument.body;case"#document":return t.body}var e=l(t),n=e.overflow,o=e.overflowX,r=e.overflowY;return/(auto|scroll|overlay)/.test(n+r+o)?t:d(c(t))}var p=n&&!(!window.MSInputMethodContext||!document.documentMode),u=n&&/MSIE 10/.test(navigator.userAgent);function m(t){return 11===t?p:10===t?u:p||u}function f(t){if(!t)return document.documentElement;for(var e=m(10)?document.body:null,n=t.offsetParent||null;n===e&&t.nextElementSibling;)n=(t=t.nextElementSibling).offsetParent;var o=n&&n.nodeName;return o&&"BODY"!==o&&"HTML"!==o?-1!==["TH","TD","TABLE"].indexOf(n.nodeName)&&"static"===l(n,"position")?f(n):n:t?t.ownerDocument.documentElement:document.documentElement}function g(t){return null!==t.parentNode?g(t.parentNode):t}function h(t,e){if(!(t&&t.nodeType&&e&&e.nodeType))return document.documentElement;var n=t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_FOLLOWING,o=n?t:e,r=n?e:t,i=document.createRange();i.setStart(o,0),i.setEnd(r,0);var a,s,l=i.commonAncestorContainer;if(t!==l&&e!==l||o.contains(r))return"BODY"===(s=(a=l).nodeName)||"HTML"!==s&&f(a.firstElementChild)!==a?f(l):l;var c=g(t);return c.host?h(c.host,e):h(t,g(e).host)}function b(t){var e="top"===(arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top")?"scrollTop":"scrollLeft",n=t.nodeName;if("BODY"===n||"HTML"===n){var o=t.ownerDocument.documentElement;return(t.ownerDocument.scrollingElement||o)[e]}return t[e]}function v(t,e){var n="x"===e?"Left":"Top",o="Left"===n?"Right":"Bottom";return parseFloat(t["border"+n+"Width"],10)+parseFloat(t["border"+o+"Width"],10)}function w(t,e,n,o){return Math.max(e["offset"+t],e["scroll"+t],n["client"+t],n["offset"+t],n["scroll"+t],m(10)?parseInt(n["offset"+t])+parseInt(o["margin"+("Height"===t?"Top":"Left")])+parseInt(o["margin"+("Height"===t?"Bottom":"Right")]):0)}function x(t){var e=t.body,n=t.documentElement,o=m(10)&&getComputedStyle(n);return{height:w("Height",e,n,o),width:w("Width",e,n,o)}}var y=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},k=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),E=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},_=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t};function T(t){return _({},t,{right:t.left+t.width,bottom:t.top+t.height})}function C(t){var e={};try{if(m(10)){e=t.getBoundingClientRect();var n=b(t,"top"),o=b(t,"left");e.top+=n,e.left+=o,e.bottom+=n,e.right+=o}else e=t.getBoundingClientRect()}catch(t){}var r={left:e.left,top:e.top,width:e.right-e.left,height:e.bottom-e.top},i="HTML"===t.nodeName?x(t.ownerDocument):{},a=i.width||t.clientWidth||r.right-r.left,s=i.height||t.clientHeight||r.bottom-r.top,c=t.offsetWidth-a,d=t.offsetHeight-s;if(c||d){var p=l(t);c-=v(p,"x"),d-=v(p,"y"),r.width-=c,r.height-=d}return T(r)}function S(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=m(10),r="HTML"===e.nodeName,i=C(t),a=C(e),s=d(t),c=l(e),p=parseFloat(c.borderTopWidth,10),u=parseFloat(c.borderLeftWidth,10);n&&r&&(a.top=Math.max(a.top,0),a.left=Math.max(a.left,0));var f=T({top:i.top-a.top-p,left:i.left-a.left-u,width:i.width,height:i.height});if(f.marginTop=0,f.marginLeft=0,!o&&r){var g=parseFloat(c.marginTop,10),h=parseFloat(c.marginLeft,10);f.top-=p-g,f.bottom-=p-g,f.left-=u-h,f.right-=u-h,f.marginTop=g,f.marginLeft=h}return(o&&!n?e.contains(s):e===s&&"BODY"!==s.nodeName)&&(f=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=b(e,"top"),r=b(e,"left"),i=n?-1:1;return t.top+=o*i,t.bottom+=o*i,t.left+=r*i,t.right+=r*i,t}(f,e)),f}function A(t){if(!t||!t.parentElement||m())return document.documentElement;for(var e=t.parentElement;e&&"none"===l(e,"transform");)e=e.parentElement;return e||document.documentElement}function D(t,e,n,o){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i={top:0,left:0},a=r?A(t):h(t,e);if("viewport"===o)i=function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=t.ownerDocument.documentElement,o=S(t,n),r=Math.max(n.clientWidth,window.innerWidth||0),i=Math.max(n.clientHeight,window.innerHeight||0),a=e?0:b(n),s=e?0:b(n,"left");return T({top:a-o.top+o.marginTop,left:s-o.left+o.marginLeft,width:r,height:i})}(a,r);else{var s=void 0;"scrollParent"===o?"BODY"===(s=d(c(e))).nodeName&&(s=t.ownerDocument.documentElement):s="window"===o?t.ownerDocument.documentElement:o;var p=S(s,a,r);if("HTML"!==s.nodeName||function t(e){var n=e.nodeName;return"BODY"!==n&&"HTML"!==n&&("fixed"===l(e,"position")||t(c(e)))}(a))i=p;else{var u=x(t.ownerDocument),m=u.height,f=u.width;i.top+=p.top-p.marginTop,i.bottom=m+p.top,i.left+=p.left-p.marginLeft,i.right=f+p.left}}var g="number"==typeof(n=n||0);return i.left+=g?n:n.left||0,i.top+=g?n:n.top||0,i.right-=g?n:n.right||0,i.bottom-=g?n:n.bottom||0,i}function O(t,e,n,o,r){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(-1===t.indexOf("auto"))return t;var a=D(n,o,i,r),s={top:{width:a.width,height:e.top-a.top},right:{width:a.right-e.right,height:a.height},bottom:{width:a.width,height:a.bottom-e.bottom},left:{width:e.left-a.left,height:a.height}},l=Object.keys(s).map(function(t){return _({key:t},s[t],{area:(e=s[t],e.width*e.height)});var e}).sort(function(t,e){return e.area-t.area}),c=l.filter(function(t){var e=t.width,o=t.height;return e>=n.clientWidth&&o>=n.clientHeight}),d=c.length>0?c[0].key:l[0].key,p=t.split("-")[1];return d+(p?"-"+p:"")}function I(t,e,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return S(n,o?A(e):h(e,n),o)}function N(t){var e=t.ownerDocument.defaultView.getComputedStyle(t),n=parseFloat(e.marginTop||0)+parseFloat(e.marginBottom||0),o=parseFloat(e.marginLeft||0)+parseFloat(e.marginRight||0);return{width:t.offsetWidth+o,height:t.offsetHeight+n}}function L(t){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return t.replace(/left|right|bottom|top/g,function(t){return e[t]})}function j(t,e,n){n=n.split("-")[0];var o=N(t),r={width:o.width,height:o.height},i=-1!==["right","left"].indexOf(n),a=i?"top":"left",s=i?"left":"top",l=i?"height":"width",c=i?"width":"height";return r[a]=e[a]+e[l]/2-o[l]/2,r[s]=n===s?e[s]-o[c]:e[L(s)],r}function P(t,e){return Array.prototype.find?t.find(e):t.filter(e)[0]}function R(t,e,n){return(void 0===n?t:t.slice(0,function(t,e,n){if(Array.prototype.findIndex)return t.findIndex(function(t){return t[e]===n});var o=P(t,function(t){return t[e]===n});return t.indexOf(o)}(t,"name",n))).forEach(function(t){t.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var n=t.function||t.fn;t.enabled&&s(n)&&(e.offsets.popper=T(e.offsets.popper),e.offsets.reference=T(e.offsets.reference),e=n(e,t))}),e}function M(t,e){return t.some(function(t){var n=t.name;return t.enabled&&n===e})}function H(t){for(var e=[!1,"ms","Webkit","Moz","O"],n=t.charAt(0).toUpperCase()+t.slice(1),o=0;o<e.length;o++){var r=e[o],i=r?""+r+n:t;if(void 0!==document.body.style[i])return i}return null}function B(t){var e=t.ownerDocument;return e?e.defaultView:window}function q(t,e,n,o){n.updateBound=o,B(t).addEventListener("resize",n.updateBound,{passive:!0});var r=d(t);return function t(e,n,o,r){var i="BODY"===e.nodeName,a=i?e.ownerDocument.defaultView:e;a.addEventListener(n,o,{passive:!0}),i||t(d(a.parentNode),n,o,r),r.push(a)}(r,"scroll",n.updateBound,n.scrollParents),n.scrollElement=r,n.eventsEnabled=!0,n}function z(){var t,e;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(t=this.reference,e=this.state,B(t).removeEventListener("resize",e.updateBound),e.scrollParents.forEach(function(t){t.removeEventListener("scroll",e.updateBound)}),e.updateBound=null,e.scrollParents=[],e.scrollElement=null,e.eventsEnabled=!1,e))}function W(t){return""!==t&&!isNaN(parseFloat(t))&&isFinite(t)}function F(t,e){Object.keys(e).forEach(function(n){var o="";-1!==["width","height","top","right","bottom","left"].indexOf(n)&&W(e[n])&&(o="px"),t.style[n]=e[n]+o})}var U=n&&/Firefox/i.test(navigator.userAgent);function V(t,e,n){var o=P(t,function(t){return t.name===e}),r=!!o&&t.some(function(t){return t.name===n&&t.enabled&&t.order<o.order});if(!r){var i="`"+e+"`",a="`"+n+"`";console.warn(a+" modifier is required by "+i+" modifier in order to work, be sure to include it before "+i+"!")}return r}var G=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],Y=G.slice(3);function K(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Y.indexOf(t),o=Y.slice(n+1).concat(Y.slice(0,n));return e?o.reverse():o}var X={FLIP:"flip",CLOCKWISE:"clockwise",COUNTERCLOCKWISE:"counterclockwise"};function $(t,e,n,o){var r=[0,0],i=-1!==["right","left"].indexOf(o),a=t.split(/(\+|\-)/).map(function(t){return t.trim()}),s=a.indexOf(P(a,function(t){return-1!==t.search(/,|\s/)}));a[s]&&-1===a[s].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var l=/\s*,\s*|\s+/,c=-1!==s?[a.slice(0,s).concat([a[s].split(l)[0]]),[a[s].split(l)[1]].concat(a.slice(s+1))]:[a];return(c=c.map(function(t,o){var r=(1===o?!i:i)?"height":"width",a=!1;return t.reduce(function(t,e){return""===t[t.length-1]&&-1!==["+","-"].indexOf(e)?(t[t.length-1]=e,a=!0,t):a?(t[t.length-1]+=e,a=!1,t):t.concat(e)},[]).map(function(t){return function(t,e,n,o){var r=t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),i=+r[1],a=r[2];if(!i)return t;if(0===a.indexOf("%")){var s=void 0;switch(a){case"%p":s=n;break;case"%":case"%r":default:s=o}return T(s)[e]/100*i}if("vh"===a||"vw"===a)return("vh"===a?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*i;return i}(t,r,e,n)})})).forEach(function(t,e){t.forEach(function(n,o){W(n)&&(r[e]+=n*("-"===t[o-1]?-1:1))})}),r}var Q={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(t){var e=t.placement,n=e.split("-")[0],o=e.split("-")[1];if(o){var r=t.offsets,i=r.reference,a=r.popper,s=-1!==["bottom","top"].indexOf(n),l=s?"left":"top",c=s?"width":"height",d={start:E({},l,i[l]),end:E({},l,i[l]+i[c]-a[c])};t.offsets.popper=_({},a,d[o])}return t}},offset:{order:200,enabled:!0,fn:function(t,e){var n=e.offset,o=t.placement,r=t.offsets,i=r.popper,a=r.reference,s=o.split("-")[0],l=void 0;return l=W(+n)?[+n,0]:$(n,i,a,s),"left"===s?(i.top+=l[0],i.left-=l[1]):"right"===s?(i.top+=l[0],i.left+=l[1]):"top"===s?(i.left+=l[0],i.top-=l[1]):"bottom"===s&&(i.left+=l[0],i.top+=l[1]),t.popper=i,t},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(t,e){var n=e.boundariesElement||f(t.instance.popper);t.instance.reference===n&&(n=f(n));var o=H("transform"),r=t.instance.popper.style,i=r.top,a=r.left,s=r[o];r.top="",r.left="",r[o]="";var l=D(t.instance.popper,t.instance.reference,e.padding,n,t.positionFixed);r.top=i,r.left=a,r[o]=s,e.boundaries=l;var c=e.priority,d=t.offsets.popper,p={primary:function(t){var n=d[t];return d[t]<l[t]&&!e.escapeWithReference&&(n=Math.max(d[t],l[t])),E({},t,n)},secondary:function(t){var n="right"===t?"left":"top",o=d[n];return d[t]>l[t]&&!e.escapeWithReference&&(o=Math.min(d[n],l[t]-("right"===t?d.width:d.height))),E({},n,o)}};return c.forEach(function(t){var e=-1!==["left","top"].indexOf(t)?"primary":"secondary";d=_({},d,p[e](t))}),t.offsets.popper=d,t},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(t){var e=t.offsets,n=e.popper,o=e.reference,r=t.placement.split("-")[0],i=Math.floor,a=-1!==["top","bottom"].indexOf(r),s=a?"right":"bottom",l=a?"left":"top",c=a?"width":"height";return n[s]<i(o[l])&&(t.offsets.popper[l]=i(o[l])-n[c]),n[l]>i(o[s])&&(t.offsets.popper[l]=i(o[s])),t}},arrow:{order:500,enabled:!0,fn:function(t,e){var n;if(!V(t.instance.modifiers,"arrow","keepTogether"))return t;var o=e.element;if("string"==typeof o){if(!(o=t.instance.popper.querySelector(o)))return t}else if(!t.instance.popper.contains(o))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),t;var r=t.placement.split("-")[0],i=t.offsets,a=i.popper,s=i.reference,c=-1!==["left","right"].indexOf(r),d=c?"height":"width",p=c?"Top":"Left",u=p.toLowerCase(),m=c?"left":"top",f=c?"bottom":"right",g=N(o)[d];s[f]-g<a[u]&&(t.offsets.popper[u]-=a[u]-(s[f]-g)),s[u]+g>a[f]&&(t.offsets.popper[u]+=s[u]+g-a[f]),t.offsets.popper=T(t.offsets.popper);var h=s[u]+s[d]/2-g/2,b=l(t.instance.popper),v=parseFloat(b["margin"+p],10),w=parseFloat(b["border"+p+"Width"],10),x=h-t.offsets.popper[u]-v-w;return x=Math.max(Math.min(a[d]-g,x),0),t.arrowElement=o,t.offsets.arrow=(E(n={},u,Math.round(x)),E(n,m,""),n),t},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(t,e){if(M(t.instance.modifiers,"inner"))return t;if(t.flipped&&t.placement===t.originalPlacement)return t;var n=D(t.instance.popper,t.instance.reference,e.padding,e.boundariesElement,t.positionFixed),o=t.placement.split("-")[0],r=L(o),i=t.placement.split("-")[1]||"",a=[];switch(e.behavior){case X.FLIP:a=[o,r];break;case X.CLOCKWISE:a=K(o);break;case X.COUNTERCLOCKWISE:a=K(o,!0);break;default:a=e.behavior}return a.forEach(function(s,l){if(o!==s||a.length===l+1)return t;o=t.placement.split("-")[0],r=L(o);var c=t.offsets.popper,d=t.offsets.reference,p=Math.floor,u="left"===o&&p(c.right)>p(d.left)||"right"===o&&p(c.left)<p(d.right)||"top"===o&&p(c.bottom)>p(d.top)||"bottom"===o&&p(c.top)<p(d.bottom),m=p(c.left)<p(n.left),f=p(c.right)>p(n.right),g=p(c.top)<p(n.top),h=p(c.bottom)>p(n.bottom),b="left"===o&&m||"right"===o&&f||"top"===o&&g||"bottom"===o&&h,v=-1!==["top","bottom"].indexOf(o),w=!!e.flipVariations&&(v&&"start"===i&&m||v&&"end"===i&&f||!v&&"start"===i&&g||!v&&"end"===i&&h);(u||b||w)&&(t.flipped=!0,(u||b)&&(o=a[l+1]),w&&(i=function(t){return"end"===t?"start":"start"===t?"end":t}(i)),t.placement=o+(i?"-"+i:""),t.offsets.popper=_({},t.offsets.popper,j(t.instance.popper,t.offsets.reference,t.placement)),t=R(t.instance.modifiers,t,"flip"))}),t},behavior:"flip",padding:5,boundariesElement:"viewport"},inner:{order:700,enabled:!1,fn:function(t){var e=t.placement,n=e.split("-")[0],o=t.offsets,r=o.popper,i=o.reference,a=-1!==["left","right"].indexOf(n),s=-1===["top","left"].indexOf(n);return r[a?"left":"top"]=i[n]-(s?r[a?"width":"height"]:0),t.placement=L(e),t.offsets.popper=T(r),t}},hide:{order:800,enabled:!0,fn:function(t){if(!V(t.instance.modifiers,"hide","preventOverflow"))return t;var e=t.offsets.reference,n=P(t.instance.modifiers,function(t){return"preventOverflow"===t.name}).boundaries;if(e.bottom<n.top||e.left>n.right||e.top>n.bottom||e.right<n.left){if(!0===t.hide)return t;t.hide=!0,t.attributes["x-out-of-boundaries"]=""}else{if(!1===t.hide)return t;t.hide=!1,t.attributes["x-out-of-boundaries"]=!1}return t}},computeStyle:{order:850,enabled:!0,fn:function(t,e){var n=e.x,o=e.y,r=t.offsets.popper,i=P(t.instance.modifiers,function(t){return"applyStyle"===t.name}).gpuAcceleration;void 0!==i&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var a=void 0!==i?i:e.gpuAcceleration,s=f(t.instance.popper),l=C(s),c={position:r.position},d=function(t,e){var n=t.offsets,o=n.popper,r=n.reference,i=-1!==["left","right"].indexOf(t.placement),a=-1!==t.placement.indexOf("-"),s=r.width%2==o.width%2,l=r.width%2==1&&o.width%2==1,c=function(t){return t},d=e?i||a||s?Math.round:Math.floor:c,p=e?Math.round:c;return{left:d(l&&!a&&e?o.left-1:o.left),top:p(o.top),bottom:p(o.bottom),right:d(o.right)}}(t,window.devicePixelRatio<2||!U),p="bottom"===n?"top":"bottom",u="right"===o?"left":"right",m=H("transform"),g=void 0,h=void 0;if(h="bottom"===p?"HTML"===s.nodeName?-s.clientHeight+d.bottom:-l.height+d.bottom:d.top,g="right"===u?"HTML"===s.nodeName?-s.clientWidth+d.right:-l.width+d.right:d.left,a&&m)c[m]="translate3d("+g+"px, "+h+"px, 0)",c[p]=0,c[u]=0,c.willChange="transform";else{var b="bottom"===p?-1:1,v="right"===u?-1:1;c[p]=h*b,c[u]=g*v,c.willChange=p+", "+u}var w={"x-placement":t.placement};return t.attributes=_({},w,t.attributes),t.styles=_({},c,t.styles),t.arrowStyles=_({},t.offsets.arrow,t.arrowStyles),t},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(t){var e,n;return F(t.instance.popper,t.styles),e=t.instance.popper,n=t.attributes,Object.keys(n).forEach(function(t){!1!==n[t]?e.setAttribute(t,n[t]):e.removeAttribute(t)}),t.arrowElement&&Object.keys(t.arrowStyles).length&&F(t.arrowElement,t.arrowStyles),t},onLoad:function(t,e,n,o,r){var i=I(r,e,t,n.positionFixed),a=O(n.placement,i,e,t,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return e.setAttribute("x-placement",a),F(e,{position:n.positionFixed?"fixed":"absolute"}),n},gpuAcceleration:void 0}}},Z=function(){function t(e,n){var o=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};y(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(o.update)},this.update=a(this.update.bind(this)),this.options=_({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=e&&e.jquery?e[0]:e,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(_({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){o.options.modifiers[e]=_({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(t){return _({name:t},o.options.modifiers[t])}).sort(function(t,e){return t.order-e.order}),this.modifiers.forEach(function(t){t.enabled&&s(t.onLoad)&&t.onLoad(o.reference,o.popper,o.options,t,o.state)}),this.update();var i=this.options.eventsEnabled;i&&this.enableEventListeners(),this.state.eventsEnabled=i}return k(t,[{key:"update",value:function(){return function(){if(!this.state.isDestroyed){var t={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};t.offsets.reference=I(this.state,this.popper,this.reference,this.options.positionFixed),t.placement=O(this.options.placement,t.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),t.originalPlacement=t.placement,t.positionFixed=this.options.positionFixed,t.offsets.popper=j(this.popper,t.offsets.reference,t.placement),t.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",t=R(this.modifiers,t),this.state.isCreated?this.options.onUpdate(t):(this.state.isCreated=!0,this.options.onCreate(t))}}.call(this)}},{key:"destroy",value:function(){return function(){return this.state.isDestroyed=!0,M(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[H("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}.call(this)}},{key:"enableEventListeners",value:function(){return function(){this.state.eventsEnabled||(this.state=q(this.reference,this.options,this.state,this.scheduleUpdate))}.call(this)}},{key:"disableEventListeners",value:function(){return z.call(this)}}]),t}();Z.Utils=("undefined"!=typeof window?window:t).PopperUtils,Z.placements=G,Z.Defaults=Q,e.default=Z}.call(this,n(59))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var o=n(61);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(e=t.exports=n(1)(!1)).i(n(62),""),e.push([t.i,"body {\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n",""])},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,'/*!\n * Bootstrap v4.1.3 (https://getbootstrap.com/)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}@-ms-viewport{width:device-width}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex="-1"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.2;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:"\\2014   \\A0"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;background-color:transparent}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#212529;border-color:#32383e}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#212529}.table-dark td,.table-dark th,.table-dark thead th{border-color:#32383e}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(2.25rem + 2px);padding:.375rem .75rem;font-size:1rem;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:.375rem;padding-bottom:.375rem;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.8125rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.form-control-lg{height:calc(2.875rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.form-control[multiple],select.form-control[size]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,.9);border-radius:.25rem}.custom-select.is-valid,.form-control.is-valid,.was-validated .custom-select:valid,.was-validated .form-control:valid{border-color:#28a745}.custom-select.is-valid:focus,.form-control.is-valid:focus,.was-validated .custom-select:valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip,.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip,.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip,.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip{display:block}.form-control-file.is-valid~.valid-feedback,.form-control-file.is-valid~.valid-tooltip,.was-validated .form-control-file:valid~.valid-feedback,.was-validated .form-control-file:valid~.valid-tooltip{display:block}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{background-color:#71dd8a}.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip,.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(40,167,69,.25)}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label::after,.was-validated .custom-file-input:valid~.custom-file-label::after{border-color:inherit}.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip,.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip{display:block}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.custom-select.is-invalid,.form-control.is-invalid,.was-validated .custom-select:invalid,.was-validated .form-control:invalid{border-color:#dc3545}.custom-select.is-invalid:focus,.form-control.is-invalid:focus,.was-validated .custom-select:invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.form-control-file.is-invalid~.invalid-feedback,.form-control-file.is-invalid~.invalid-tooltip,.was-validated .form-control-file:invalid~.invalid-feedback,.was-validated .form-control-file:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{background-color:#efa2a9}.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip,.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(220,53,69,.25)}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label::after,.was-validated .custom-file-input:invalid~.custom-file-label::after{border-color:inherit}.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip,.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip{display:block}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:focus,.btn:hover{text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65}.btn:not(:disabled):not(.disabled){cursor:pointer}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-primary{color:#007bff;background-color:transparent;background-image:none;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;background-color:transparent;background-image:none;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;background-color:transparent;background-image:none;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;background-color:transparent;background-image:none;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;background-color:transparent;background-image:none;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;background-color:transparent;background-image:none;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;background-color:transparent;background-image:none;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;background-color:transparent;background-image:none;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;background-color:transparent}.btn-link:hover{color:#0056b3;text-decoration:underline;background-color:transparent;border-color:transparent}.btn-link.focus,.btn-link:focus{text-decoration:underline;border-color:transparent;box-shadow:none}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media screen and (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media screen and (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu-right{right:0;left:auto}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:"";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:""}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;width:0;height:0;margin-right:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:0 1 auto;flex:0 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group,.btn-group-vertical .btn+.btn,.btn-group-vertical .btn+.btn-group,.btn-group-vertical .btn-group+.btn,.btn-group-vertical .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical .btn,.btn-group-vertical .btn-group{width:100%}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control{margin-left:-1px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:-ms-flexbox;display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{height:calc(2.875rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{height:calc(1.8125rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;background-color:#007bff}.custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:active~.custom-control-label::before{color:#fff;background-color:#b3d7ff}.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0}.custom-control-label::before{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:"";-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#dee2e6}.custom-control-label::after{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:"";background-repeat:no-repeat;background-position:center center;background-size:50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3E%3Cpath fill=\'%23fff\' d=\'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z\'/%3E%3C/svg%3E")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 4\'%3E%3Cpath stroke=\'%23fff\' d=\'M0 2h4\'/%3E%3C/svg%3E")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3E%3Ccircle r=\'3\' fill=\'%23fff\'/%3E%3C/svg%3E")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 5\'%3E%3Cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3E%3C/svg%3E") no-repeat right .75rem center;background-size:8px 10px;border:1px solid #ced4da;border-radius:.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(128,189,255,.5)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size="1"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{height:calc(1.8125rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-select-lg{height:calc(2.875rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:125%}.custom-file{position:relative;display:inline-block;width:100%;height:calc(2.25rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(2.25rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-file-input:focus~.custom-file-label::after{border-color:#80bdff}.custom-file-input:disabled~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:"Browse"}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(2.25rem + 2px);padding:.375rem .75rem;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:2.25rem;padding:.375rem .75rem;line-height:1.5;color:#495057;content:"Browse";background-color:#e9ecef;border-left:1px solid #ced4da;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;padding-left:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:0}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-webkit-slider-thumb{transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-moz-range-thumb{transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-ms-thumb{transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:.5rem 1rem}.navbar>.container,.navbar>.container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler:not(:disabled):not(.disabled){cursor:pointer}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:"";background:no-repeat center center;background-size:100% 100%}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(0, 0, 0, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.5);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(255, 255, 255, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E")}.navbar-dark .navbar-text{color:rgba(255,255,255,.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(.25rem - 1px)}.card-img-top{width:100%;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card-deck{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-deck .card{margin-bottom:15px}@media (min-width:576px){.card-deck{-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{display:-ms-flexbox;display:flex;-ms-flex:1 0 0%;flex:1 0 0%;-ms-flex-direction:column;flex-direction:column;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-group>.card{margin-bottom:15px}@media (min-width:576px){.card-group{-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:first-child .card-header,.card-group>.card:first-child .card-img-top{border-top-right-radius:0}.card-group>.card:first-child .card-footer,.card-group>.card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:last-child .card-header,.card-group>.card:last-child .card-img-top{border-top-left-radius:0}.card-group>.card:last-child .card-footer,.card-group>.card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group>.card:only-child{border-radius:.25rem}.card-group>.card:only-child .card-header,.card-group>.card:only-child .card-img-top{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card-group>.card:only-child .card-footer,.card-group>.card:only-child .card-img-bottom{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-group>.card:not(:first-child):not(:last-child):not(:only-child){border-radius:0}.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-footer,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-header,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-top{border-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion .card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion .card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion .card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion .card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:"/"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:2;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-link:not(:disabled):not(.disabled){cursor:pointer}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}.badge-primary[href]:focus,.badge-primary[href]:hover{color:#fff;text-decoration:none;background-color:#0062cc}.badge-secondary{color:#fff;background-color:#6c757d}.badge-secondary[href]:focus,.badge-secondary[href]:hover{color:#fff;text-decoration:none;background-color:#545b62}.badge-success{color:#fff;background-color:#28a745}.badge-success[href]:focus,.badge-success[href]:hover{color:#fff;text-decoration:none;background-color:#1e7e34}.badge-info{color:#fff;background-color:#17a2b8}.badge-info[href]:focus,.badge-info[href]:hover{color:#fff;text-decoration:none;background-color:#117a8b}.badge-warning{color:#212529;background-color:#ffc107}.badge-warning[href]:focus,.badge-warning[href]:hover{color:#212529;text-decoration:none;background-color:#d39e00}.badge-danger{color:#fff;background-color:#dc3545}.badge-danger[href]:focus,.badge-danger[href]:hover{color:#fff;text-decoration:none;background-color:#bd2130}.badge-light{color:#212529;background-color:#f8f9fa}.badge-light[href]:focus,.badge-light[href]:hover{color:#212529;text-decoration:none;background-color:#dae0e5}.badge-dark{color:#fff;background-color:#343a40}.badge-dark[href]:focus,.badge-dark[href]:hover{color:#fff;text-decoration:none;background-color:#1d2124}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media screen and (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item:focus,.list-group-item:hover{z-index:1;text-decoration:none}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:not(:disabled):not(.disabled){cursor:pointer}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover{color:#000;text-decoration:none;opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translate(0,-25%);transform:translate(0,-25%)}@media screen and (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:translate(0,0);transform:translate(0,0)}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - (.5rem * 2))}.modal-dialog-centered::before{display:block;height:calc(100vh - (.5rem * 2));content:""}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem;border-bottom:1px solid #e9ecef;border-top-left-radius:.3rem;border-top-right-radius:.3rem}.modal-header .close{padding:1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:1rem;border-top:1px solid #e9ecef}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-centered{min-height:calc(100% - (1.75rem * 2))}.modal-dialog-centered::before{height:calc(100vh - (1.75rem * 2))}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:800px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:"";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:"";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top] .arrow,.bs-popover-top .arrow{bottom:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::after,.bs-popover-top .arrow::before{border-width:.5rem .5rem 0}.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::before{bottom:0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-top .arrow::after{bottom:1px;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right] .arrow,.bs-popover-right .arrow{left:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::after,.bs-popover-right .arrow::before{border-width:.5rem .5rem .5rem 0}.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::before{left:0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-right .arrow::after{left:1px;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom] .arrow,.bs-popover-bottom .arrow{top:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::after,.bs-popover-bottom .arrow::before{border-width:0 .5rem .5rem .5rem}.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::before{top:0;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-bottom .arrow::after{top:1px;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:"";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left] .arrow,.bs-popover-left .arrow{right:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::after,.bs-popover-left .arrow::before{border-width:.5rem 0 .5rem .5rem}.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::before{right:0;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-left .arrow::after{right:1px;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;color:inherit;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-item{position:relative;display:none;-ms-flex-align:center;align-items:center;width:100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block;transition:-webkit-transform .6s ease;transition:transform .6s ease;transition:transform .6s ease,-webkit-transform .6s ease}@media screen and (prefers-reduced-motion:reduce){.carousel-item-next,.carousel-item-prev,.carousel-item.active{transition:none}}.carousel-item-next,.carousel-item-prev{position:absolute;top:0}.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translateX(0);transform:translateX(0)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.active.carousel-item-right,.carousel-item-next{-webkit-transform:translateX(100%);transform:translateX(100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-right,.carousel-item-next{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translateX(-100%);transform:translateX(-100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.carousel-fade .carousel-item{opacity:0;transition-duration:.6s;transition-property:opacity}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{opacity:0}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{-webkit-transform:translateX(0);transform:translateX(0)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:transparent no-repeat center center;background-size:100% 100%}.carousel-control-prev-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' viewBox=\'0 0 8 8\'%3E%3Cpath d=\'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z\'/%3E%3C/svg%3E")}.carousel-control-next-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' viewBox=\'0 0 8 8\'%3E%3Cpath d=\'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z\'/%3E%3C/svg%3E")}.carousel-indicators{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{position:relative;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:rgba(255,255,255,.5)}.carousel-indicators li::before{position:absolute;top:-10px;left:0;display:inline-block;width:100%;height:10px;content:""}.carousel-indicators li::after{position:absolute;bottom:-10px;left:0;display:inline-block;width:100%;height:10px;content:""}.carousel-indicators .active{background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,button.bg-primary:focus,button.bg-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.bg-success{background-color:#28a745!important}a.bg-success:focus,a.bg-success:hover,button.bg-success:focus,button.bg-success:hover{background-color:#1e7e34!important}.bg-info{background-color:#17a2b8!important}a.bg-info:focus,a.bg-info:hover,button.bg-info:focus,button.bg-info:hover{background-color:#117a8b!important}.bg-warning{background-color:#ffc107!important}a.bg-warning:focus,a.bg-warning:hover,button.bg-warning:focus,button.bg-warning:hover{background-color:#d39e00!important}.bg-danger{background-color:#dc3545!important}a.bg-danger:focus,a.bg-danger:hover,button.bg-danger:focus,button.bg-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-circle{border-radius:50%!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:""}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:-ms-flexbox!important;display:flex!important}.d-print-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:""}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-sm-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-sm-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-sm-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-sm-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-sm-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-md-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-md-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-md-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-md-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-md-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-lg-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-lg-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-lg-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-lg-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-lg-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.mb-3,.my-3{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0062cc!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#545b62!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#1e7e34!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#117a8b!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#d39e00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#bd2130!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#dae0e5!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#1d2124!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:" (" attr(title) ")"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}.table-dark{color:inherit}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}',""])},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,o=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r,i=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?t:(r=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(t,e,n){var o=n(65);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".nav-item a {\r\n  color: #f2f2f2;\r\n  font-size: 20px;\r\n}\r\n\r\n.nav-item a:hover {\r\n  background: #ddd;\r\n  color: black;\r\n}\r\n\r\na.navbar-brand {\r\n  color: #a5d7f8;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n}\r\n",""])},function(t,e,n){var o=n(67);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){var o=n(10);(t.exports=n(1)(!1)).push([t.i,"header {\r\n  margin-top: 50px;\r\n  background: #000000 url("+o(n(68))+") no-repeat; \r\n  background-size: cover;\r\n  height: 1080px;\r\n}\r\n\r\n\r\n.button-start {\r\n  background-color: #4CAF50; \r\n  border: none;\r\n  color: white;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border-radius: 8px;\r\n}\r\n\r\n.button-start:hover {\r\n  background-color: #0e9651;\r\n}\r\n\r\nsection {\r\n  padding: 100px 0;\r\n}\r\n\r\n.text-faded.mb-5 {\r\n  font-size: 18px;\r\n}\r\n\r\n.col-lg-4.col-sm-6 {\r\n  padding: 5px;\r\n}",""])},function(t,e,n){t.exports=n.p+"images/background.png"},function(t,e,n){var o=n(70);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){var o=n(10);(t.exports=n(1)(!1)).push([t.i,"canvas {\r\n  background-image: url("+o(n(71))+");\r\n  background-size: contain;\r\n  background-repeat: repeat-x;\r\n}\r\n",""])},function(t,e,n){t.exports=n.p+"images/background.png"},function(t,e,n){var o=n(73);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".spell-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.spell-button {\r\n  display: block;\r\n  width: 130px;\r\n  height: 40px;\r\n  margin: 4px;\r\n  border-radius: 8px;\r\n  border-color: rgba(33, 252, 252, 0.8);\r\n  background-color: rgba(33, 252, 252, 0.8);\r\n  cursor: pointer;\r\n  user-select: none;\r\n  outline: none;\r\n}\r\n\r\n.spell-button:focus {\r\n   outline: 0;\r\n}\r\n\r\n.spell-button:hover, .hover {\r\n  background-color: rgba(28, 196, 196, 0.8);\r\n  box-shadow: 0 0 12px 0px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.swal2-popup {\r\n  width: 400px;\r\n}\r\n\r\n.swal2-popup .swal2-title {\r\n  font-size: 20px;\r\n} \r\n\r\n.swal2-popup .swal2-content {\r\n  font-size: 16px;\r\n}\r\n",""])},function(t,e,n){var o=n(75);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".swal2-popup .math.swal2-input {\r\n  width: 60px;\r\n}",""])},function(t,e,n){var o=n(77);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".swal2-popup .english.swal2-input {\r\n  width: 300px;\r\n}",""])},function(t,e,n){var o=n(79);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".sortable-list {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  list-style: none;\r\n}\r\n\r\n.sortable-list__item {\r\n  cursor: move;\r\n  border: 1px solid rgba(28, 196, 196, 1);\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  background-color: rgba(33, 252, 252, 0.8);\r\n}\r\n\r\n.sortable-list__item:hover {\r\n  background-color: rgba(28, 196, 196, 0.8);\r\n}\r\n",""])},function(t,e,n){var o=n(81);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(2)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,"section.score {\r\n  padding: 10px 0px;\r\n  overflow: auto;\r\n}\r\n\r\n.table {\r\n  margin: 20px auto;\r\n  width: 90%;\r\n}\r\n\r\n.button-score {\r\n  width: 120px;\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.button-score:hover {\r\n  background-color: #0e9651;\r\n}\r\n",""])},function(t,e,n){"use strict";n.r(e);n(56),n(57),n(60),n(64);function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var r=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"render",value:function(){document.querySelector("body").insertAdjacentHTML("afterbegin",'\n<nav class="navbar navbar-expand-lg bg-secondary fixed-top text-uppercase navbar-shrink" id="mainNav">\n  <div class="container">\n    <a class="navbar-brand js-scroll-trigger" href="#page-top">Ice wastelands</a>\n    <button class="navbar-toggler navbar-toggler-right text-uppercase bg-primary text-white rounded collapsed" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">\n      Menu\n      <i class="fas fa-bars"></i>\n    </button>\n    <div class="collapse navbar-collapse" id="navbarResponsive">\n      <ul class="navbar-nav ml-auto">\n        <li class="nav-item mx-0 mx-lg-1">\n          <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger active" href="#about">About game</a>\n        </li>\n        <li class="nav-item mx-0 mx-lg-1">\n          <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="#screenshots">Screenshots</a>\n        </li>\n        <li class="nav-item mx-0 mx-lg-1">\n          <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="#contact">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n')}}],(n=null)&&o(e.prototype,n),r&&o(e,r),t}(),i=n(4),a=n.n(i),s=n(5),l=n.n(s),c=n(6),d=n.n(c),p=n(7),u=n.n(p),m=n(8),f=n.n(m),g=n(9),h=n.n(g),b='\n<header class="masthead text-center text-white d-flex">\n  <div class="container my-auto">\n    <div class="row">\n      <div class="col-lg-10 mx-auto">\n        <h1 class="text-uppercase">\n          <strong>Ice wastelands</strong>\n        </h1>\n      </div>\n      <div class="col-lg-8 mx-auto">\n        <p class="text-faded mb-5">On the planet Florn there was a climatic disaster. The whole planet was covered with snow and ice. Now to survive the inhabitants of this planet have to fight with each other for resources.</p>\n        <button class="button-start btn btn-primary" type="button">Play</button>\n      </div>\n    </div>\n  </div>\n</header>\n\n<section id="about" class="bg-primary">\n  <div class="container">\n    <div class="row">\n      <div class="col-lg-8 mx-auto text-center">\n        <h2 class="section-heading text-white">What is waiting for you?</h2>\n        <p class="text-faded mb-4">Help your character to survive. Use your knowledge to solve tasks.</p>\n        <button class="button-start btn btn-primary" type="button">Play</button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section id="screenshots">\n  <div class="container-fluid p-0">\n    <div class="row no-gutters popup-gallery">\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="'.concat(a.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(a.a,'" alt="spell dialog">\n        </a>\n      </div>\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="').concat(l.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(l.a,'" alt="math task">\n        </a>\n      </div>\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="').concat(d.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(d.a,'" alt="english task">\n        </a>\n      </div>\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="').concat(u.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(u.a,'" alt="drag&drop task">\n        </a>\n      </div>\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="').concat(f.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(f.a,'" alt="image task">\n        </a>\n      </div>\n      <div class="col-lg-4 col-sm-6">\n        <a class="portfolio-box" href="').concat(h.a,'" target="_blank">\n          <img class="img-fluid" src="').concat(h.a,'" alt="score screen">\n        </a>\n      </div>\n    </div>\n  </div>\n</section>\n    \n<section class="bg-dark text-white">\n  <div class="container text-center">\n    <h2 class="mb-4">Let\'s play!</h2>\n    <button class="button-start btn btn-primary" type="button">Play</button>\n  </div>\n</section>\n\n<section id="contact">\n  <div class="container">\n    <div class="row">\n      <div class="col-lg-8 mx-auto text-center">\n        <h2 class="section-heading">Iryna Malash</h2>\n        <hr class="my-4">\n        <p class="mb-5">\n          <a href="https://rs.school" target="_blank">Rolling Scopes School</a> Student\n        </p>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-lg-4 ml-auto text-center">\n        <i class="fab fa-skype fa-3x mb-3 sr-contact-1" style="visibility: visible;"></i>\n        <p>\n        <a href="skype:Skype_User">yanaisbg</a>\n        </p>\n      </div>\n      <div class="col-lg-4 mr-auto text-center">\n        <i class="fas fa-envelope fa-3x mb-3 sr-contact-2" style="visibility: visible;"></i>\n        <p>\n          <a href="mailto:mal7rish@gmail.com">mal7rish@gmail.com</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n');n(66);function v(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var w=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,o=[{key:"render",value:function(){document.querySelector("nav").insertAdjacentHTML("afterend",b)}}],(n=null)&&v(e.prototype,n),o&&v(e,o),t}(),x=n(0),y=n.n(x),k=n(3),E=n.n(k),_=n(11),T=n.n(_),C=n(12),S=n.n(C),A=n(13),D=n.n(A),O=n(14),I=n.n(O),N=n(15),L=n.n(N),j=n(16),P=n.n(j),R=n(17),M=n.n(R),H=n(18),B=n.n(H),q=n(19),z=n.n(q),W=n(20),F=n.n(W),U=n(21),V=n.n(U),G=n(22),Y=n.n(G),K=n(23),X=n.n(K),$=n(24),Q=n.n($),Z=n(25),J=n.n(Z),tt=n(26),et=n.n(tt),nt=n(27),ot=n.n(nt),rt=n(28),it=n.n(rt),at=n(29),st=n.n(at),lt=n(30),ct=n.n(lt),dt=n(31),pt=n.n(dt),ut=n(32),mt=n.n(ut),ft=n(33),gt=n.n(ft),ht=n(34),bt=n.n(ht),vt=n(35),wt=n.n(vt);function xt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var yt=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.players=[T.a],this.heads=[S.a,D.a,I.a],this.bodies=[L.a,P.a,M.a],this.leftLegs=[B.a,z.a,F.a],this.rightLegs=[V.a,Y.a,X.a],this.leftArms=[Q.a,J.a,et.a],this.rightArms=[ot.a,it.a,st.a],this.fireballs=[ct.a],this.iceArrows=[pt.a],this.fireballSounds=[mt.a],this.iceArrowSounds=[gt.a],this.painPlayerSounds=[bt.a],this.painEnemySounds=[wt.a],this.scoupe=e,this.callback=n,this.countLoadedAssets=0,this.countAssets=this.players.length+this.heads.length+this.bodies.length+this.leftLegs.length+this.rightLegs.length+this.leftArms.length+this.rightArms.length+this.fireballs.length+this.iceArrows.length+this.fireballSounds.length+this.iceArrowSounds.length+this.painPlayerSounds.length+this.painEnemySounds.length,this.assets={images:{player:[],head:[],body:[],leftLeg:[],rightLeg:[],leftArm:[],rightArm:[],fireball:[],iceArrow:[]},sounds:{fireball:[],iceArrow:[],painPlayer:[],painEnemy:[]}}}var e,n,o;return e=t,(n=[{key:"loadAssets",value:function(){this.loadImages(),this.loadSounds()}},{key:"loadImages",value:function(){this.formImages(this.players,"player"),this.formImages(this.heads,"head"),this.formImages(this.bodies,"body"),this.formImages(this.leftLegs,"leftLeg"),this.formImages(this.rightLegs,"rightLeg"),this.formImages(this.leftArms,"leftArm"),this.formImages(this.rightArms,"rightArm"),this.formImages(this.fireballs,"fireball"),this.formImages(this.iceArrows,"iceArrow")}},{key:"loadSounds",value:function(){this.formSounds(this.fireballSounds,"fireball"),this.formSounds(this.iceArrowSounds,"iceArrow"),this.formSounds(this.painPlayerSounds,"painPlayer"),this.formSounds(this.painEnemySounds,"painEnemy")}},{key:"formImages",value:function(t,e){var n=this;t.forEach(function(t){var o=new Image;o.onload=function(){n.assets.images[e].push(o),n.countLoadedAssets+=1,n.assetsLoaded()&&n.callback.call(n.scoupe,n.assets)},o.src=t})}},{key:"formSounds",value:function(t,e){var n=this;t.forEach(function(t){var o=new Audio(t);o.onloadeddata=function(){n.assets.sounds[e].push(o),n.countLoadedAssets+=1,n.assetsLoaded()&&n.callback.call(n.scoupe,n.assets)}})}},{key:"assetsLoaded",value:function(){return this.countAssets===this.countLoadedAssets}}])&&xt(e.prototype,n),o&&xt(e,o),t}(),kt=(n(69),function(t,e){return Math.floor(t+Math.random()*(e+1-t))}),Et=function(t,e){var n=t.length===e.length,o=t.every(function(t,n){return t===e[n]});return n&&o},_t=function(t){var e=Object.keys(t),n=kt(0,e.length-1),o=t[e[n]].question,r=t[e[n]].tasks,i=r[kt(0,r.length-1)];return{question:o,task:i.task,answer:i.answer}};function Tt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ct=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.assets=e}var e,n,o;return e=t,(n=[{key:"renderCanvas",value:function(){document.querySelector("body").insertAdjacentHTML("afterBegin",'<canvas id="canvas" width="1920" height="940"></canvas>'),this.ctx=document.getElementById("canvas").getContext("2d")}},{key:"renderPlayer",value:function(){var t=this,e=this.assets.images.player[0],n=e.width,o=e.height,r=n/5,i=o/1,a=0,s=0;setInterval(function(){t.ctx.clearRect(270,475,r,i),s=(a=(a+1)%5)*r,t.ctx.drawImage(e,s,0,r,i,270,475,r,i)},250)}},{key:"renderEnemy",value:function(){var t=this,e=1,n=0;setInterval(function(){1===e?(n-=.1)<-2&&(e=-1):(n+=.1)>2&&(e=1)},33);var o=kt(0,this.assets.images.head.length-1),r=this.assets.images.head[o],i=kt(0,this.assets.images.body.length-1),a=this.assets.images.body[i],s=kt(0,this.assets.images.leftLeg.length-1),l=this.assets.images.leftLeg[s],c=kt(0,this.assets.images.rightLeg.length-1),d=this.assets.images.rightLeg[c],p=kt(0,this.assets.images.leftArm.length-1),u=this.assets.images.leftArm[p],m=kt(0,this.assets.images.leftLeg.length-1),f=this.assets.images.rightArm[m];!function e(){t.ctx.clearRect(1230,650,f.width,f.height),t.ctx.clearRect(1280,770,l.width,l.height),t.ctx.clearRect(1340,770,d.width,d.height),t.ctx.clearRect(1290,610,a.width,a.height),t.ctx.clearRect(1380,650,u.width,u.height),t.ctx.clearRect(1260,480,r.width,r.height),t.ctx.drawImage(f,1230,650-n),t.ctx.drawImage(l,1280,770),t.ctx.drawImage(d,1340,770),t.ctx.drawImage(a,1290,610),t.ctx.drawImage(u,1380,650-n),t.ctx.drawImage(r,1260,480-n),requestAnimationFrame(e)}()}},{key:"renderPlayerName",value:function(t){this.ctx.font="30px Georgia",this.ctx.fillStyle="white",this.ctx.fillText(t,320,75)}},{key:"renderEnemyName",value:function(t){this.ctx.font="30px Georgia",this.ctx.fillStyle="white",this.ctx.fillText(t,1230,75)}},{key:"renderRound",value:function(t){this.ctx.font="30px Roboto, Georgia",this.ctx.fillStyle="white",this.ctx.fillText("Round ".concat(t),900,60)}},{key:"renderPlayerHealth",value:function(t){this.ctx.clearRect(320,100,200,30);var e=this.ctx.createLinearGradient(320,0,520,0);e.addColorStop(0,"red"),e.addColorStop(.4,"green"),this.ctx.fillStyle=e,this.ctx.fillRect(320,100,2*t,30),this.ctx.strokeStyle="#FF0000",this.ctx.strokeRect(320,100,200,30)}},{key:"renderEnemyHealth",value:function(t){this.ctx.clearRect(1270,100,200,30);var e=this.ctx.createLinearGradient(1270,0,1470,0);e.addColorStop(0,"red"),e.addColorStop(.4,"green"),this.ctx.fillStyle=e,this.ctx.fillRect(1270,100,2*t,30),this.ctx.strokeStyle="#FF0000",this.ctx.strokeRect(1270,100,200,30)}},{key:"renderFireball",value:function(){var t=this,e=this.assets.images.fireball[0],n=550,o=null;!function r(){t.ctx.clearRect(n-7,550,e.width,e.height),n>1060?cancelAnimationFrame(o):(t.ctx.drawImage(e,n,550),n+=7,o=requestAnimationFrame(r))}()}},{key:"renderIceArrow",value:function(){var t=this,e=this.assets.images.iceArrow[0],n=1070,o=null;!function r(){t.ctx.clearRect(n+7,580,e.width,e.height),n<550?cancelAnimationFrame(o):(t.ctx.drawImage(e,n,580),n-=7,o=requestAnimationFrame(r))}()}}])&&Tt(e.prototype,n),o&&Tt(e,o),t}();var St=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.hp=100,this.strength=20,this.round=1,this.score=0};var At=["Brave","Calm","Clever","Dangerous","Deaf","Dexterous","Invincible","Hysterical","Risky","Sullen","Sinister","Slick","Warlike"],Dt=["Berserk","Commander","Hero","Knight","Master","Necromancer","Rogue","Overlord","Shadow","Wanderer","Warrior"],Ot=["Arnold","Bob","Brian","Caleb","Corey","Darren","Derek","Ezekiel","Gareth","Graham","Grant","Hubert","Kurt","Sam","Tom"],It=function t(){var e,n,o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=(e=At[kt(0,At.length-1)],n=Dt[kt(0,Dt.length-1)],o=Ot[kt(0,Ot.length-1)],e.concat(" ",n," ",o)),this.hp=100,this.strength=20},Nt=(n(72),n(74),["+","-","*"]),Lt=[function(){var t=kt(0,30),e=kt(0,30),n=Nt[kt(0,Nt.length-1)];return{question:"Calculate:",task:"".concat(t," ").concat(n," ").concat(e," = ?"),answer:String(function(t,e,n){var o=0;switch(n){case"+":o=t+e;break;case"-":o=t-e;break;case"*":o=t*e}return o}(t,e,n))}},function(){var t=kt(0,30),e=kt(0,30);return{question:"Compare two numbers (<, >, =):",task:"".concat(t," ? ").concat(e),answer:function(t,e){return t>e?">":t<e?"<":"="}(t,e)}},function(){var t=function(){var t=[];t.push(kt(0,30));for(var e=kt(0,10),n=0;n<4;n+=1)t.push(t[n]+e);return t}(),e=String(t.pop());return{question:"Continue the sequence:",task:t.concat("?").join(", "),answer:e}}];function jt(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function Pt(t){return function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){jt(i,o,r,a,s,"next",t)}function s(t){jt(i,o,r,a,s,"throw",t)}a(void 0)})}}function Rt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Mt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,n=null,o=[{key:"showCorrectMessage",value:function(){var t=Pt(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,y()({title:"You are right!",type:"success",showConfirmButton:!1,timer:1200,allowOutsideClick:"false",allowEscapeKey:"false",animation:!1,customClass:"animated tada"});case 2:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"showIncorrectMessage",value:function(){var t=Pt(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,y()({title:"Noup :(",type:"error",showConfirmButton:!1,timer:1200,allowOutsideClick:"false",allowEscapeKey:"false",animation:!1,customClass:"animated shake"});case 2:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"showNewRoundMessage",value:function(){return y()({title:"New round",allowOutsideClick:"false",allowEscapeKey:"false",animation:!1,customClass:"animated bounceInDown"})}},{key:"showGameOverMessage",value:function(){return y()({title:"Game over",allowOutsideClick:"false",allowEscapeKey:"false",animation:!1,customClass:"animated bounceInDown"})}}],n&&Rt(e.prototype,n),o&&Rt(e,o),t}();function Ht(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function Bt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var qt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,n=null,o=[{key:"showMathTask",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(e,n){var o,r,i;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return o=(a=Lt)[kt(0,a.length-1)](),r=!0,t.next=4,y()({title:o.question,text:o.task,input:"text",inputClass:"math",allowOutsideClick:!1,allowEscapeKey:!1});case 4:if(i=t.sent,i.value!==o.answer){t.next=11;break}return t.next=9,Mt.showCorrectMessage();case 9:t.next=14;break;case 11:return r=!1,t.next=14,Mt.showIncorrectMessage();case 14:return t.next=16,n.call(e,r);case 16:case"end":return t.stop()}var a},t,this)}),function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){Ht(i,o,r,a,s,"next",t)}function s(t){Ht(i,o,r,a,s,"throw",t)}a(void 0)})});return function(t,n){return e.apply(this,arguments)}}()}],n&&Bt(e.prototype,n),o&&Bt(e,o),t}(),zt=(n(76),{"eng-ru":{question:"Translate from English to Russian:",tasks:[{task:"apple",answer:["яблоко","яблочко"]},{task:"pear",answer:["груша"]},{task:"onion",answer:["лук","луковица","головка лука","лучок"]},{task:"mirror",answer:["зеркало","зеркальце","отражение"]},{task:"armchair",answer:["кресло"]},{task:"pants",answer:["брюки","штаны","панталоны"]},{task:"teacher",answer:["учитель","преподаватель"]},{task:"tiger",answer:["тигр","тигренок"]},{task:"elephant",answer:["слон","слоненок","слоник","слониха"]},{task:"white",answer:["белый"]},{task:"blue",answer:["синий","голубой"]},{task:"Wednesday",answer:["среда"]},{task:"to know",answer:["знать","понимать","уметь","узнавать"]},{task:"to eat",answer:["есть","кушать"]},{task:"to sleep",answer:["спать","засыпать","ночевать"]}]},"ru-eng":{question:"Translate from Russian to English:",tasks:[{task:"апельсин",answer:["orange"]},{task:"виноград",answer:["grapes","grape"]},{task:"собака",answer:["dog","hound"]},{task:"дедушка",answer:["grandfather","grandpa","grandad","granddad","grandpapa"]},{task:"мороженое",answer:["ice-cream","ice"]},{task:"мёд",answer:["honey","mead"]},{task:"юбка",answer:["skirt"]},{task:"лев",answer:["lion","leo"]},{task:"красный",answer:["red"]},{task:"синий",answer:["blue"]},{task:"ключ",answer:["key","clue"]},{task:"автобус",answer:["bus","autobus"]},{task:"понедельник",answer:["Monday","monday"]},{task:"бежать",answer:["run","to run"]},{task:"прыгать",answer:["jump","to jump"]},{task:"рисовать",answer:["draw","paint","to draw","to paint"]}]},opposites:{question:"Write the opposites of the given word:",tasks:[{task:"left",answer:["right"]},{task:"after",answer:["before"]},{task:"cold",answer:["hot"]},{task:"yesterday",answer:["tomorrow"]},{task:"start",answer:["end"]},{task:"last",answer:["first"]},{task:"short",answer:["long"]},{task:"quick",answer:["slow"]},{task:"night",answer:["day"]},{task:"big",answer:["small","little"]},{task:"always",answer:["never"]},{task:"bad",answer:["good"]},{task:"boy",answer:["girl"]},{task:"dark",answer:["light"]}]}});function Wt(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function Ft(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ut=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,n=null,o=[{key:"showEnglishTask",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(e,n){var o,r,i,a;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,_t(zt);case 2:return o=t.sent,r=!0,t.next=6,y()({title:o.question,text:o.task,input:"text",inputClass:"english",allowOutsideClick:!1,allowEscapeKey:!1});case 6:if(i=t.sent,a=i.value,!o.answer.includes(a.toLowerCase())){t.next=13;break}return t.next=11,Mt.showCorrectMessage;case 11:t.next=16;break;case 13:return r=!1,t.next=16,Mt.showIncorrectMessage();case 16:return t.next=18,n.call(e,r);case 18:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){Wt(i,o,r,a,s,"next",t)}function s(t){Wt(i,o,r,a,s,"throw",t)}a(void 0)})});return function(t,n){return e.apply(this,arguments)}}()}],n&&Ft(e.prototype,n),o&&Ft(e,o),t}(),Vt=n(36),Gt=n.n(Vt),Yt=(n(78),{"words-order":{question:"Arange the words in alphabetical order:",tasks:[{task:["car","apple","cat","park"],answer:["apple","car","cat","park"]},{task:["key","bus","window","bed"],answer:["bed","bus","key","window"]},{task:["orange","head","hand","cherry"],answer:["cherry","hand","head","orange"]},{task:["tomato","banana","lemon","potato"],answer:["banana","lemon","potato","tomato"]},{task:["hair","pet","ball","table"],answer:["ball","hair","pet","table"]},{task:["fox","bear","wolf","lion"],answer:["bear","fox","lion","wolf"]},{task:["bike","plane","ship","train"],answer:["bike","plane","ship","train"]},{task:["May","April","June","October"],answer:["April","June","May","October"]},{task:["red","blue","green","pink"],answer:["blue","green","pink","red"]},{task:["swim","ride","jump","walk"],answer:["jump","ride","swim","walk"]}]},"word-collect":{question:"Collect the word from the letters:",tasks:[{task:["a","c","r"],answer:["c","a","r"]},{task:["d","e","b"],answer:["b","e","d"]},{task:["h","n","d","a"],answer:["h","a","n","d"]},{task:["o","p","t","t","o","a"],answer:["p","o","t","a","t","o"]},{task:["l","b","a","l"],answer:["b","a","l","l"]},{task:["x","o","f"],answer:["f","o","x"]},{task:["t","a","r","i","n"],answer:["t","r","a","i","n"]},{task:["A","r","p","i","l"],answer:["A","p","r","i","l"]},{task:["d","r","e"],answer:["r","e","d"]},{task:["w","s","i","m"],answer:["s","w","i","m"]},{task:["t","a","c"],answer:["c","a","t"]},{task:["d","g","o"],answer:["d","o","g"]},{task:["t","g","i","e","r"],answer:["t","i","g","e","r"]}]},"sentence-collect":{question:"Collect the sentence from the words:",tasks:[{task:["want","I","to","sleep"],answer:["I","want","to","sleep"]},{task:["My","is","name","Victor"],answer:["My","name","is","Victor"]},{task:["am","I","years","old","seven"],answer:["I","am","seven","years","old"]},{task:["want","I","to","sleep"],answer:["I","want","to","sleep"]},{task:["is","fox","a","It"],answer:["It","is","a","fox"]},{task:["am","I","schoolboy","a"],answer:["I","am","a","schoolboy"]},{task:["My","is","sister","a","student"],answer:["My","sister","is","a","student"]},{task:["like","Children ","winter"],answer:["Children ","like","winter"]},{task:["tourists","They","are"],answer:["They","are","tourists"]}]},"numbers-asc":{question:"Arrange the numbers in ascending order:",tasks:[{task:["8","1","5","3"],answer:["1","3","5","8"]},{task:["9","12","2","4","8"],answer:["2","4","8","9","12"]},{task:["10","1","15","23"],answer:["1","10","15","23"]},{task:["3","0","2","4","8"],answer:["0","2","3","4","8"]},{task:["7","9","2","4"],answer:["2","4","7","9"]},{task:["8","1","2","15","18"],answer:["1","2","8","15","18"]}]},"numbers-desc":{question:"Arrange the numbers in descending order:",tasks:[{task:["20","1","12","10"],answer:["20","12","10","1"]},{task:["6","5","9","1"],answer:["9","6","5","1"]},{task:["13","11","14","10"],answer:["14","13","11","10"]},{task:["8","15","9","1"],answer:["15","9","8","1"]},{task:["0","6","1","4"],answer:["6","4","1","0"]},{task:["7","12","9","5"],answer:["12","9","7","5"]}]}});function Kt(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Xt(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function $t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Qt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,o=[{key:"showDragTask",value:function(t,e){var n,o,r=_t(Yt),i=!0;y()({title:r.question,html:(n=r.task,o='<ul class="sortable-list">',n.forEach(function(t){o+='<li class="sortable-list__item">'.concat(t,"</li>")}),o.concat("</ul>"),o),allowOutsideClick:!1,allowEscapeKey:!1,onClose:function(){var n,o=(n=regeneratorRuntime.mark(function n(){var o;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(o=[],Kt(document.querySelector(".sortable-list").children).forEach(function(t){return o.push(t.innerText)}),!Et(o,r.answer)){n.next=7;break}return n.next=5,Mt.showCorrectMessage();case 5:n.next=10;break;case 7:return i=!1,n.next=10,Mt.showIncorrectMessage();case 10:return n.next=12,e.call(t,i);case 12:case"end":return n.stop()}},n,this)}),function(){var t=this,e=arguments;return new Promise(function(o,r){var i=n.apply(t,e);function a(t){Xt(i,o,r,a,s,"next",t)}function s(t){Xt(i,o,r,a,s,"throw",t)}a(void 0)})});return function(){return o.apply(this,arguments)}}()}),Gt.a.create(document.querySelector(".sortable-list"))}}],(n=null)&&$t(e.prototype,n),o&&$t(e,o),t}(),Zt={"have-has":{question:"Select have/has instead of dots:",tasks:[{task:["I ... a bike.",["have","has"]],answer:"have"},{task:["We ... a blue car.",["have","has"]],answer:"have"},{task:["He ... breakfast at 7 am.",["have","has"]],answer:"has"},{task:["She ... a cat.",["have","has"]],answer:"has"},{task:["My brother ... a great job.",["have","has"]],answer:"has"},{task:["We ... a new English teacher.",["have","has"]],answer:"have"},{task:["They ... a beautiful house.",["have","has"]],answer:"have"}]},"to be":{question:"Select am/is/are instead of dots:",tasks:[{task:["I ... a girl.",["am","is","are"]],answer:"am"},{task:["He ... my brother.",["am","is","are"]],answer:"is"},{task:["She ... my sister.",["am","is","are"]],answer:"is"},{task:["I ... from London.",["am","is","are"]],answer:"am"},{task:["Bob ... 15 years old.",["am","is","are"]],answer:"is"},{task:["Anna ... a student",["am","is","are"]],answer:"is"},{task:["They ... our parents.",["am","is","are"]],answer:"are"},{task:["We ... a family.",["am","is","are"]],answer:"are"},{task:["It ... our dog.",["am","is","are"]],answer:"is"},{task:["Ice-cream ... cold.",["am","is","are"]],answer:"is"}]},"a-an":{question:"Select article a/an instead of dots:",tasks:[{task:["... cat",["a","an"]],answer:"a"},{task:["... doctor",["a","an"]],answer:"a"},{task:["... actor",["a","an"]],answer:"an"},{task:["... apple",["a","an"]],answer:"an"},{task:["... woman",["a","an"]],answer:"a"},{task:["... old man",["a","an"]],answer:"an"},{task:["... dog",["a","an"]],answer:"a"},{task:["... arm",["a","an"]],answer:"an"},{task:["... animal",["a","an"]],answer:"an"},{task:["... orange",["a","an"]],answer:"an"}]}};function Jt(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function te(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ee=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,n=null,o=[{key:"showChooseTask",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(e,n){var o,r,i,a,s;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return o=_t(Zt),r={},o.task[1].forEach(function(t){r[t]=t}),i=!0,t.next=6,y()({title:o.question,text:o.task[0],input:"radio",inputOptions:r,allowOutsideClick:!1,allowEscapeKey:!1});case 6:if(a=t.sent,s=a.value,o.answer!==s){t.next=13;break}return t.next=11,Mt.showCorrectMessage();case 11:t.next=16;break;case 13:return i=!1,t.next=16,Mt.showIncorrectMessage();case 16:return t.next=18,n.call(e,i);case 18:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){Jt(i,o,r,a,s,"next",t)}function s(t){Jt(i,o,r,a,s,"throw",t)}a(void 0)})});return function(t,n){return e.apply(this,arguments)}}()}],n&&te(e.prototype,n),o&&te(e,o),t}(),ne=n(37),oe=n.n(ne),re=n(38),ie=n.n(re),ae=n(39),se=n.n(ae),le=n(40),ce=n.n(le),de=n(41),pe=n.n(de),ue=n(42),me=n.n(ue),fe=n(43),ge=n.n(fe),he=n(44),be=n.n(he),ve=n(45),we=n.n(ve),xe=n(46),ye=n.n(xe),ke=n(47),Ee=n.n(ke),_e=n(48),Te=n.n(_e),Ce=n(49),Se=n.n(Ce),Ae=n(50),De=n.n(Ae),Oe=n(51),Ie=n.n(Oe),Ne=n(52),Le=n.n(Ne),je=n(53),Pe=n.n(je),Re=n(54),Me=n.n(Re),He=n(55),Be=n.n(He),qe={image:{question:"Choose the correct answer:",tasks:[{task:[oe.a,["tiger","bear","wolf"]],answer:"bear"},{task:[ie.a,["dog","lion","cat"]],answer:"cat"},{task:[se.a,["dog","cat","wolf"]],answer:"dog"},{task:[ce.a,["tiger","fox","wolf"]],answer:"fox"},{task:[pe.a,["tiger","lion","wolf"]],answer:"lion"},{task:[me.a,["lion","wolf","tiger"]],answer:"tiger"},{task:[ge.a,["dog","wolf","bear"]],answer:"wolf"},{task:[be.a,["peach","apple","orange"]],answer:"apple"},{task:[we.a,["grape","banana","apricot"]],answer:"banana"},{task:[ye.a,["orange","apricot","lemon"]],answer:"lemon"},{task:[Ee.a,["grape","orange","lemon"]],answer:"orange"},{task:[Te.a,["peach","banana","apricot"]],answer:"peach"},{task:[Se.a,["peach","pineapple","apricot"]],answer:"pineapple"},{task:[De.a,["chair","table","armchair"]],answer:"armchair"},{task:[Ie.a,["table","chair","armchair"]],answer:"chair"},{task:[Le.a,["chair","table","armchair"]],answer:"table"},{task:[Pe.a,["onion","garlic","potato"]],answer:"garlic"},{task:[Me.a,["potato","garlic","onion"]],answer:"onion"},{task:[Be.a,["onion","potato","garlic"]],answer:"potato"}]}};function ze(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function We(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Fe=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,n=null,o=[{key:"showImageTask",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(e,n){var o,r,i,a,s;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return o=_t(qe),r={},o.task[1].forEach(function(t){r[t]=t}),i=!0,t.next=6,y()({title:o.question,imageUrl:o.task[0],imageWidth:150,imageHeight:150,imageAlt:r,input:"radio",inputOptions:r,allowOutsideClick:!1,allowEscapeKey:!1});case 6:if(a=t.sent,s=a.value,o.answer!==s){t.next=13;break}return t.next=11,Mt.showCorrectMessage();case 11:t.next=16;break;case 13:return i=!1,t.next=16,Mt.showIncorrectMessage();case 16:return t.next=18,n.call(e,i);case 18:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){ze(i,o,r,a,s,"next",t)}function s(t){ze(i,o,r,a,s,"throw",t)}a(void 0)})});return function(t,n){return e.apply(this,arguments)}}()}],n&&We(e.prototype,n),o&&We(e,o),t}();function Ue(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ve=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.scoupe=e,this.callBack=n}var e,n,o;return e=t,(n=[{key:"showSpellDialog",value:function(){var t=this;y()({title:"Choose spell:",html:'\n<div class="spell-buttons">\n  <button class="spell-button math-button hover">Mathematikus</button>\n  <button class="spell-button english-button">Englezium</button>\n  <button class="spell-button drag-button">Dropdragon</button>\n  <button class="spell-button radio-button">Chuzerius</button>\n  <button class="spell-button image-button">Imaginarium</button>\n</div>\n',showConfirmButton:!1,allowOutsideClick:!1,allowEscapeKey:!1,animation:!1,customClass:"animated zoomIn",stopKeydownPropagation:!1,onBeforeOpen:function(){document.querySelector(".math-button").addEventListener("click",function(){qt.showMathTask(t.scoupe,t.callBack)}),document.querySelector(".english-button").addEventListener("click",function(){Ut.showEnglishTask(t.scoupe,t.callBack)}),document.querySelector(".drag-button").addEventListener("click",function(){Qt.showDragTask(t.scoupe,t.callBack)}),document.querySelector(".radio-button").addEventListener("click",function(){ee.showChooseTask(t.scoupe,t.callBack)}),document.querySelector(".image-button").addEventListener("click",function(){Fe.showImageTask(t.scoupe,t.callBack)})},onOpen:function(){var t=document.activeElement;document.querySelectorAll(".spell-button").forEach(function(e){e.addEventListener("mouseover",function(e){t.classList.remove("hover"),t=e.target})}),document.querySelector(".spell-buttons").addEventListener("keydown",function(e){if("ArrowUp"===e.code){var n=t.previousElementSibling;t===t.parentElement.firstElementChild&&(n=t.parentElement.lastElementChild),t.classList.remove("hover"),n.focus(),n.classList.add("hover"),t=n}else if("ArrowDown"===e.code){var o=t.nextElementSibling;t===t.parentElement.lastElementChild&&(o=t.parentElement.firstElementChild),t.classList.remove("hover"),o.focus(),o.classList.add("hover"),t=o}else"Tab"===e.code&&(e.preventDefault(),e.stopImmediatePropagation())})}})}}])&&Ue(e.prototype,n),o&&Ue(e,o),t}(),Ge=(n(80),function(){for(var t,e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ice-wastelands",o='\n  <section class="score"> \n    <table class="table table-bordered">\n      <thead class="thead-light">\n        <tr>\n          <th scope="col">#</th>\n          <th scope="col">Name</th>\n          <th scope="col">Score</th>\n        </tr>\n      </thead>\n      <tbody>',r=JSON.parse(localStorage.getItem(n)),i=(t=r,e=[],Object.keys(t).forEach(function(n){return e.push([n,t[n]])}),e.sort(function(t,e){return e[1]-t[1]}),e),a=0;a<i.length;a+=1)o+='<tr>\n      <th scope="row">'.concat(a+1,"</th>\n      <td>").concat(i[a][0],"</td>\n      <td>").concat(i[a][1],"</td>\n    </tr>");return o+='\n      </tbody>\n    </table>\n    <div class="text-center">\n      <button class="button-score btn btn-primary" type="button">Ok</button>\n    </div>\n  </section>'});function Ye(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ke=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,o=[{key:"render",value:function(){E()("body").empty(),E()("body").prepend(Ge()),document.querySelector(".button-score").focus(),document.querySelector(".button-score").addEventListener("click",function(){E()("body").empty(),tn.render()})}}],(n=null)&&Ye(e.prototype,n),o&&Ye(e,o),t}();function Xe(t,e,n,o,r,i,a){try{var s=t[i](a),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(o,r)}function $e(t){return function(){var e=this,n=arguments;return new Promise(function(o,r){var i=t.apply(e,n);function a(t){Xe(i,o,r,a,s,"next",t)}function s(t){Xe(i,o,r,a,s,"throw",t)}a(void 0)})}}function Qe(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ze=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.characters={}}var e,n,o;return e=t,(n=[{key:"start",value:function(){var t=this;y()({title:"Enter your name:",input:"text",showCancelButton:!0,inputValidator:function(t){return!t&&"You need to choose name!"}}).then(function(e){e.value&&(t.characters.player=new St(e.value),new yt(t,t.drawComponents).loadAssets())})}},{key:"checkGameOver",value:function(){return this.characters.player.hp<=0||this.characters.enemy.hp<=0}},{key:"checkPlayerWin",value:function(){return this.characters.enemy.hp<=0&&(this.characters.player.score+=1,this.characters.player.round+=1,!0)}},{key:"saveScore",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ice-wastelands",e=localStorage.getItem(t),n=(e=e?JSON.parse(e):{})[this.characters.player.name],o=e[this.characters.player.name]<this.characters.player.score;n&&!o||(e[this.characters.player.name]=this.characters.player.score),localStorage.setItem(t,JSON.stringify(e))}},{key:"resolveRound",value:function(){var t=$e(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,!this.checkGameOver();case 2:if(!t.sent){t.next=7;break}return t.next=5,this.spellDialog.showSpellDialog();case 5:t.next=28;break;case 7:return t.next=9,this.checkPlayerWin();case 9:if(!t.sent){t.next=20;break}return t.next=12,this.gameAssets.sounds.painEnemy[0].play();case 12:return t.next=14,Mt.showNewRoundMessage();case 14:return t.next=16,this.drawComponents(this.gameAssets);case 16:return t.next=18,this.canvas.renderRound(this.characters.player.round);case 18:t.next=28;break;case 20:return t.next=22,this.gameAssets.sounds.painPlayer[0].play();case 22:return t.next=24,Mt.showGameOverMessage();case 24:return t.next=26,this.saveScore();case 26:return t.next=28,Ke.render();case 28:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"manageGame",value:function(){var t=$e(regeneratorRuntime.mark(function t(e){var n=this;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!e){t.next=9;break}return this.characters.enemy.hp-=this.characters.player.strength,t.next=4,this.canvas.renderFireball();case 4:return t.next=6,this.gameAssets.sounds.fireball[0].play();case 6:setTimeout(function(){return n.canvas.renderEnemyHealth(n.characters.enemy.hp)},1200),t.next=15;break;case 9:return this.characters.player.hp-=this.characters.enemy.strength,t.next=12,this.canvas.renderIceArrow();case 12:return t.next=14,this.gameAssets.sounds.iceArrow[0].play();case 14:setTimeout(function(){return n.canvas.renderPlayerHealth(n.characters.player.hp)},1200);case 15:setTimeout(this.resolveRound.bind(this),1500);case 16:case"end":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:"drawComponents",value:function(t){this.gameAssets=t,this.characters.enemy=new It,E()("body").empty(),this.canvas=new Ct(this.gameAssets),this.canvas.renderCanvas(),this.canvas.renderPlayer(),this.canvas.renderPlayerName(this.characters.player.name),this.canvas.renderPlayerHealth(this.characters.player.hp),this.canvas.renderEnemy(),this.canvas.renderEnemyName(this.characters.enemy.name),this.canvas.renderEnemyHealth(this.characters.enemy.hp),this.canvas.renderRound(this.characters.player.round),this.spellDialog=new Ve(this,this.manageGame),this.spellDialog.showSpellDialog()}}])&&Qe(e.prototype,n),o&&Qe(e,o),t}();function Je(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var tn=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,o=[{key:"render",value:function(){r.render(),w.render(),document.querySelector(".button-start").focus(),document.querySelectorAll(".button-start").forEach(function(t){t.addEventListener("click",function(){(new Ze).start()})})}}],(n=null)&&Je(e.prototype,n),o&&Je(e,o),t}();window.onload=function(){tn.render()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,